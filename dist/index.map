{"version":3,"sources":["../../../.nvm/versions/node/v8.11.1/lib/node_modules/parcel/node_modules/process/browser.js","../node_modules/waaclock/lib/WAAClock.js","../node_modules/waaclock/index.js","Pulse.ts","Band.ts","../node_modules/tonal-note/build/es6.js","../node_modules/tonal-array/build/es6.js","../node_modules/tonal-interval/build/es6.js","../node_modules/tonal-distance/build/es6.js","../node_modules/tonal-pcset/build/es6.js","../node_modules/tonal-dictionary/build/es6.js","../node_modules/tonal-scale/build/es6.js","../node_modules/tonal-chord/build/es6.js","../node_modules/tonal/index.js","instruments/Instrument.ts","instruments/Synthesizer.ts","util.ts","musicians/Musician.ts","grooves/swing.ts","musicians/Pianist.ts","musicians/Drummer.ts","musicians/Bassist.ts","instruments/Sampler.ts","instruments/Kick.ts","instruments/Snare.ts","instruments/PlasticDrums.ts","Metronome.ts","Trio.ts","index.ts"],"names":["process","module","exports","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","Error","defaultClearTimeout","setTimeout","e","clearTimeout","runTimeout","fun","call","runClearTimeout","marker","queue","draining","currentQueue","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","nextTick","args","Array","arguments","i","push","Item","array","prototype","apply","title","browser","env","argv","version","versions","noop","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask","tokenize","fromMidi","NAMES","split","names","accTypes","slice","filter","n","acc","indexOf","SHARPS","FLATS","REGEX","str","m","exec","toUpperCase","replace","NO_NOTE","Object","freeze","pc","step","alt","oct","octStr","chroma","midi","freq","SEMI","properties","tokens","letter","p","charCodeAt","midiToFreq","memo","fn","cache","props","note","tuning","Math","pow","L2","log","L440","freqToMidi","v","round","LETTERS","stepToLetter","fillStr","s","join","numToStr","num","op","altToAcc","from","fromProps","baseNote","ref","assign","build","sharps","pcs","o","floor","simplify","sameAcc","useSharps","enharmonic","range","rotate","sort","unique","ascR","b","a","descR","times","arr","compact","height","src","map","shuffle","rnd","random","t","permutations","reduce","perm","pos","newPerm","splice","IVL_TNL","IVL_STR","RegExp","SIZES","TYPES","CLASSES","types","NO_IVL","q","type","simple","semitones","abs","qToAlt","test","altToQ","numToStep","ic","ivl","undefined","d","invert","IN","IQ","fromSemitones","c","transpose","trFifths","fifths","transposeBy","addIntervals","add","subtract","interval","FIFTHS","fOcts","f","FIFTH_OCTS","encode","STEPS","unaltered","decode","encoder","encodeNote","noteProps","encodeIvl","iprops","tr","to","isDescending","decodeIvl","ivl1","ivl2","i1","i2","chromas","modes","isChroma","intervals","isEqual","isSubsetOf","isSupersetOf","includes","chr","pcsetNum","set","parseInt","clen","isArray","forEach","all","toString","normalize","binary","_","r","IVLS","s1","s2","notes","dictionary","raw","keys","data","index","ivls","key","alias","allKeys","dict","combine","scale","sdata","chord","cdata","pcset","exists","NO_SCALE","setnum","memoize","nameOrTonic","tonic","substring","modeNames","tonics","x","chords","inScale","toScale","supersets","isSuperset","subsets","isSubset","NO_CHORD","NUM_TYPES","Note","Interval","Distance","Dictionary","Scale","Chord","PcSet"],"mappings":"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CA3C,QAAQoD,mBAAR,GAA8BT,IAA9B;;AAEA3C,QAAQqD,SAAR,GAAoB,UAAUC,IAAV,EAAgB;AAAE,WAAO,EAAP;AAAW,CAAjD;;AAEAtD,QAAQuD,OAAR,GAAkB,UAAUD,IAAV,EAAgB;AAC9B,UAAM,IAAIhD,KAAJ,CAAU,kCAAV,CAAN;AACH,CAFD;;AAIAN,QAAQwD,GAAR,GAAc,YAAY;AAAE,WAAO,GAAP;AAAY,CAAxC;AACAxD,QAAQyD,KAAR,GAAgB,UAAUC,GAAV,EAAe;AAC3B,UAAM,IAAIpD,KAAJ,CAAU,gCAAV,CAAN;AACH,CAFD;AAGAN,QAAQ2D,KAAR,GAAgB,YAAW;AAAE,WAAO,CAAP;AAAW,CAAxC;;;ACvLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzOA;AACA;AACA;AACA;AACA;;;;;;;;ACJA,IAAA,aAAA,gBAAA,QAAA,UAAA,CAAA,CAAA;AAEA,IAAA,QAAA,aAAA,YAAA;AAWI,aAAA,KAAA,CACI,KADJ,EACc;AAAV,YAAA,UAAA,KAAA,CAAA,EAAA;AAAA,oBAAA,EAAA;AAAU;AAXd,aAAA,QAAA,GAAW;AACP,iBAAK,GADE;AAEP,mBAAO,CAFA;AAGP,mBAAO;AAHA,SAAX;AAQA,aAAA,MAAA,GAAS,EAAT;AACA,aAAA,cAAA,GAAiB,KAAjB;AAII,aAAK,KAAL,GAAa,OAAO,MAAP,CAAc,EAAd,EAAkB,KAAK,QAAvB,EAAiC,KAAjC,CAAb;AACA,aAAK,OAAL,GAAe,KAAK,KAAL,CAAW,OAAX,IAAsB,IAAI,YAAJ,EAArC;AACA,aAAK,KAAL,GAAa,KAAK,KAAL,CAAW,KAAX,IAAoB,IAAI,WAAA,OAAJ,CAAa,KAAK,OAAlB,EAA2B,EAAE,gBAAgB,GAAlB,EAAuB,eAAe,GAAtC,EAA3B,CAAjC;AACH;AAED,UAAA,SAAA,CAAA,gBAAA,GAAA,UAAiB,GAAjB,EAAuC,eAAvC,EAAyE;AAAxD,YAAA,QAAA,KAAA,CAAA,EAAA;AAAA,kBAAM,KAAK,KAAL,CAAW,GAAjB;AAAoB;AAAE,YAAA,oBAAA,KAAA,CAAA,EAAA;AAAA,8BAAkB,KAAK,KAAL,CAAW,KAA7B;AAAkC;AACrE,eAAO,KAAK,GAAL,GAAW,eAAlB;AACH,KAFD;AAIA,UAAA,SAAA,CAAA,UAAA,GAAA,UAAW,QAAX,EAAqB,MAArB,EAAiC,IAAjC,EAA4C,KAA5C,EAAuD,QAAvD,EAAiE,QAAjE,EAA0E;AAA1E,YAAA,QAAA,IAAA;AAAqB,YAAA,WAAA,KAAA,CAAA,EAAA;AAAA,qBAAA,CAAA;AAAU;AAAE,YAAA,SAAA,KAAA,CAAA,EAAA;AAAA,mBAAA,EAAA;AAAS;AAAE,YAAA,UAAA,KAAA,CAAA,EAAA;AAAA,oBAAA,CAAA;AAAS;AACjD;AACA,YAAI,CAAC,MAAM,OAAN,CAAc,QAAd,CAAL,EAA8B;AAC1B,gBAAI,aAAa,CAAjB,EAAoB;AAChB,uBAAO,CAAP;AACH;AACD,gBAAM,SAAO;AACT,uBAAO,QADE;AAET,wBAAM,MAFG;AAGT,sBAAI,IAHK;AAIT,uBAAK,KAJI;AAKT,uBAAO,IALE;AAMT,uBAAO,KAAK,KAAL,CAAW,KANT;AAOT,yBAAS;AAPA,aAAb;AAUA,qBAAS,KAAK,KAAL,CAAW,KAApB,CAd0B,CAcC;AAC3B,gBAAI,KAAK,cAAT,EAAyB;AACrB,yBAAS,WAAW,QAAX,GAAsB,KAAK,OAAL,CAAa,WAA5C;AACA,uBAAK,OAAL,GAAe,KAAK,KAAL,CAAW,cAAX,CAA0B,UAAC,KAAD,EAAM;AAC3C,2BAAA,SAAS,OAAO,MAAP,CAAc,MAAd,EAAoB,EAAE,OAAK,KAAP,EAAS,UAAU,MAAM,QAAzB,EAApB,CAAT,CAAA;AAAkE,iBADvD,EACyD,KADzD,CAAf;AAEH,aAJD,MAIO;AACH,yBAAS,CAAC,YAAY,KAAK,OAAL,CAAa,WAA1B,IAAyC,KAAK,OAAL,CAAa,WAA/D;AACA,uBAAK,OAAL,GAAe,KAAK,KAAL,CAAW,UAAX,CAAsB,UAAC,KAAD,EAAM;AACvC,2BAAA,SAAS,OAAO,MAAP,CAAc,MAAd,EAAoB,EAAE,OAAK,KAAP,EAAS,UAAU,MAAM,QAAzB,EAApB,CAAT,CAAA;AAAkE,iBADvD,EACyD,KADzD,CAAf;AAEH;AACD,iBAAK,MAAL,CAAY,IAAZ,CAAiB,OAAK,OAAtB;AACA,mBAAO,MAAP;AACH;AACD,YAAM,cAAc,SAAS,SAAS,MAAtC;AACA,eAAO;AACH,oBAAM,MADH;AAEH,sBAAU,SAAS,GAAT,CAAa,UAAC,EAAD,EAAK,CAAL,EAAM;AACzB,uBAAA,MAAK,UAAL,CACI,EADJ,EAEI,WAFJ,EAGI,KAAK,MAAL,CAAY,CAAC,CAAD,CAAZ,CAHJ,EAII,QAAQ,IAAI,WAJhB,EAKI,QALJ,EAMI,QANJ,CAAA;AAOC,aARK;AAFP,SAAP;AAaH,KA3CD;AA6CA,UAAA,SAAA,CAAA,SAAA,GAAA,UAAU,KAAV,EAAiB,QAAjB,EAA2B,QAA3B,EAAsC,MAAtC,EAA6C;AAA7C,YAAA,QAAA,IAAA;AACI,cAAM,IAAN,CAAW,CAAX;AACA,YAAM,IAAI,UAAU,KAAK,gBAAL,KAA0B,MAAM,MAApD;AACA,aAAK,KAAL;AACA,eAAO,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAgB;AAC/B,kBAAK,UAAL,CAAgB,KAAhB,EAAuB,CAAvB,EAA0B,EAA1B,EAA8B,CAA9B,EAAiC,UAAC,IAAD,EAAO,KAAP,EAAY;AACzC,oBAAI,KAAK,IAAL,CAAU,CAAV,MAAiB,MAAM,MAAN,GAAe,CAApC,EAAuC;AACnC,4BAAQ,IAAR;AACH,iBAFD,MAEO;AACH,6BAAS,IAAT,EAAe,KAAf;AACH;AACJ,aAND,EAMG,QANH;AAOH,SARM,CAAP;AASH,KAbD;AAgBA,UAAA,SAAA,CAAA,KAAA,GAAA,YAAA;AACI;AACA,YAAM,iBAAiB,IAAvB;AACA,YAAI,KAAK,MAAL,CAAY,MAAZ,GAAqB,cAAzB,EAAyC;AACrC,oBAAQ,IAAR,CAAa,YAAb,EAA2B,cAA3B,EAA2C,yEAA3C;AACH;AACD,aAAK,KAAL,CAAW,KAAX;AACH,KAPD;AASA,UAAA,SAAA,CAAA,IAAA,GAAA,YAAA;AACI,aAAK,KAAL,CAAW,IAAX;AACH,KAFD;AAIA,UAAA,SAAA,CAAA,WAAA,GAAA,UAAY,QAAZ,EAAsB,OAAtB,EAAmC;AAAnC,YAAA,QAAA,IAAA;AAAsB,YAAA,YAAA,KAAA,CAAA,EAAA;AAAA,sBAAA,GAAA;AAAa;AAC/B,YAAM,SAAS,KAAK,KAAL,CAAW,GAAX,GAAiB,QAAhC;AACA,aAAK,KAAL,CAAW,GAAX,GAAiB,QAAjB;AACA,YAAM,SAAS,KAAK,MAAL,CAAY,MAAZ,CAAmB,UAAA,CAAA,EAAC;AAC/B,mBAAO,EAAE,QAAF,GAAa,MAAK,OAAL,CAAa,WAA1B,GAAwC,OAA/C;AACH,SAFc,CAAf;AAGA;AACA,aAAK,KAAL,CAAW,WAAX,CAAuB,KAAK,OAAL,CAAa,WAApC,EAAiD,MAAjD,EAAyD,MAAzD;AACH,KARD;AASJ,WAAA,KAAA;AA1GA,CAAA,EAAA;AAAa,QAAA,KAAA,GAAA,KAAA;;;;;ACFb,IAAA,UAAA,QAAA,SAAA,CAAA;AAGA,IAAA,OAAA,aAAA,YAAA;AAWI,aAAA,IAAA,CAAY,EAAZ,EAA4C;YAAhC,KAAA,OAAA,KAAA,CAAA,GAAA,EAAA,GAAA;YAAE,UAAA,GAAA;YAAS,YAAA,GAAA;AAPvB,aAAA,QAAA,GAAW;AACP,mBAAO,CADA;AAEP,sBAAU,CAFH;AAGP,uBAAW,CAHJ;AAIP,mBAAO;AAJA,SAAX;AAQI,aAAK,OAAL,GAAe,WAAW,IAAI,YAAJ,EAA1B;AACA,aAAK,SAAL,GAAiB,aAAa,EAA9B;AACH;AAED,SAAA,SAAA,CAAA,KAAA,GAAA,YAAA;AACI,eAAO,QAAQ,GAAR,CAAY,CAAC,KAAK,MAAL,EAAD,EAAgB,MAAhB,CAAuB,KAAK,SAAL,CAAe,GAAf,CAAmB,UAAA,CAAA,EAAC;AAAI,mBAAA,EAAE,KAAF;AAAO,SAA/B,CAAvB,CAAZ,CAAP;AACH,KAFD;AAIA,SAAA,SAAA,CAAA,MAAA,GAAA,YAAA;AAAA,YAAA,QAAA,IAAA;AACI,eAAO,KAAK,OAAL,CAAa,MAAb,GAAsB,IAAtB,CAA2B,YAAA;AAAM,mBAAA,MAAK,OAAL;AAAY,SAA7C,CAAP;AACH,KAFD;AAIA,SAAA,SAAA,CAAA,IAAA,GAAA,UAAK,QAAL,EAAe,QAAf,EAAuB;AACnB,YAAI,KAAK,KAAT,EAAgB;AACZ,iBAAK,KAAL,CAAW,IAAX;AACH;AACD,mBAAW,OAAO,MAAP,CAAc,KAAK,QAAnB,EAA6B,QAA7B,EAAuC,EAAE,SAAS,KAAK,OAAhB,EAAvC,CAAX;AACA,mBAAW,SAAS,GAAT,CAAa,UAAA,CAAA,EAAC;AAAI,mBAAA,CAAC,MAAM,OAAN,CAAc,CAAd,CAAD,GAAoB,CAAC,CAAD,CAApB,GAA0B,CAA1B;AAA2B,SAA7C,CAAX;AACA,aAAK,IAAL,CAAU,QAAV,EAAoB,QAApB;AACH,KAPD;AASA,SAAA,SAAA,CAAA,IAAA,GAAA,UAAK,QAAL,EAAe,QAAf,EAAuB;AAAvB,YAAA,QAAA,IAAA;AACI,aAAK,KAAL,GAAa,IAAb,CAAkB,YAAA;AACd,kBAAK,KAAL,GAAa,SAAS,KAAT,IAAkB,IAAI,QAAA,KAAJ,CAAU,QAAV,CAA/B;AACA,kBAAK,SAAL,CAAe,OAAf,CAAuB,UAAA,QAAA,EAAQ;AAAI,uBAAA,SAAS,IAAT,CAAc,EAAE,OAAO,MAAK,KAAd,EAAqB,UAAQ,QAA7B,EAA+B,UAAQ,QAAvC,EAAd,CAAA;AAAwD,aAA3F;AACA,kBAAK,KAAL,CAAW,KAAX;AACH,SAJD;AAKH,KAND;AAOJ,WAAA,IAAA;AAxCA,CAAA,EAAA;;;;;;;;QCsEgBC,WAAAA;QA2QAC,WAAAA;AApVhB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA,IAAIC,QAAQ,8CAA8CC,KAA9C,CAAoD,GAApD,CAAZ;;AAEA;;;;;;;;;;;AAWO,IAAIC,wBAAQ,UAAUC,QAAV,EAAoB;AAAE,SAAO,OAAOA,QAAP,KAAoB,QAApB,GAC1CH,MAAMI,KAAN,EAD0C,GAE1CJ,MAAMK,MAAN,CAAa,UAAUC,CAAV,EAAa;AACxB,QAAIC,MAAMD,EAAE,CAAF,KAAQ,GAAlB;AACA,WAAOH,SAASK,OAAT,CAAiBD,GAAjB,MAA0B,CAAC,CAAlC;AACD,GAHD,CAFmC;AAK9B,CALJ;;AAOP,IAAIE,SAASP,MAAM,IAAN,CAAb;AACA,IAAIQ,QAAQR,MAAM,IAAN,CAAZ;AACA,IAAIS,QAAQ,iDAAZ;;AAEA;;;;;;;;;;;;;;;AAeO,SAASb,QAAT,CAAkBc,GAAlB,EAAuB;AAC5B,MAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;AAAEA,UAAM,EAAN;AAAW;AAC1C,MAAIC,IAAIF,MAAMG,IAAN,CAAWF,GAAX,CAAR;AACA,MAAI,CAACC,CAAL,EAAQ;AAAE,WAAO,IAAP;AAAc;AACxB,SAAO,CAACA,EAAE,CAAF,EAAKE,WAAL,EAAD,EAAqBF,EAAE,CAAF,EAAKG,OAAL,CAAa,IAAb,EAAmB,IAAnB,CAArB,EAA+CH,EAAE,CAAF,CAA/C,EAAqDA,EAAE,CAAF,CAArD,CAAP;AACD;;AAED,IAAII,UAAUC,OAAOC,MAAP,CAAc;AAC1BC,MAAI,IADsB;AAE1B5B,QAAM,IAFoB;AAG1B6B,QAAM,IAHoB;AAI1BC,OAAK,IAJqB;AAK1BC,OAAK,IALqB;AAM1BC,UAAQ,IANkB;AAO1BC,UAAQ,IAPkB;AAQ1BC,QAAM,IARoB;AAS1BC,QAAM;AAToB,CAAd,CAAd;;AAYA,IAAIC,OAAO,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,EAAnB,CAAX;AACA,IAAIC,aAAa,UAAUjB,GAAV,EAAe;AAC9B,MAAIkB,SAAShC,SAASc,GAAT,CAAb;AACA,MAAIkB,OAAO,CAAP,MAAc,EAAd,IAAoBA,OAAO,CAAP,MAAc,EAAtC,EAA0C;AAAE,WAAOb,OAAP;AAAiB;AAC7D,MAAIc,SAASD,OAAO,CAAP,CAAb;AACA,MAAIvB,MAAMuB,OAAO,CAAP,CAAV;AACA,MAAIN,SAASM,OAAO,CAAP,CAAb;AACA,MAAIE,IAAI,EAAED,QAAQA,MAAV,EAAkBxB,KAAKA,GAAvB,EAA4BiB,QAAQA,MAApC,EAAR;AACAQ,IAAEZ,EAAF,GAAOY,EAAED,MAAF,GAAWC,EAAEzB,GAApB;AACAyB,IAAExC,IAAF,GAASwC,EAAEZ,EAAF,GAAOI,MAAhB;AACAQ,IAAEX,IAAF,GAAS,CAACW,EAAED,MAAF,CAASE,UAAT,CAAoB,CAApB,IAAyB,CAA1B,IAA+B,CAAxC;AACAD,IAAEV,GAAF,GAAQU,EAAEzB,GAAF,CAAM,CAAN,MAAa,GAAb,GAAmB,CAACyB,EAAEzB,GAAF,CAAMhD,MAA1B,GAAmCyE,EAAEzB,GAAF,CAAMhD,MAAjD;AACAyE,IAAET,GAAF,GAAQC,OAAOjE,MAAP,GAAgB,CAACiE,MAAjB,GAA0B,IAAlC;AACAQ,IAAEP,MAAF,GAAW,CAACG,KAAKI,EAAEX,IAAP,IAAeW,EAAEV,GAAjB,GAAuB,GAAxB,IAA+B,EAA1C;AACAU,IAAEN,IAAF,GAASM,EAAET,GAAF,KAAU,IAAV,GAAiBK,KAAKI,EAAEX,IAAP,IAAeW,EAAEV,GAAjB,GAAuB,MAAMU,EAAET,GAAF,GAAQ,CAAd,CAAxC,GAA2D,IAApE;AACAS,IAAEL,IAAF,GAASO,WAAWF,EAAEN,IAAb,CAAT;AACA,SAAOR,OAAOC,MAAP,CAAca,CAAd,CAAP;AACD,CAhBD;;AAkBA,IAAIG,OAAO,UAAUC,EAAV,EAAcC,KAAd,EAAqB;AAC9B,MAAKA,UAAU,KAAK,CAApB,EAAwBA,QAAQ,EAAR;;AAExB,SAAO,UAAUzB,GAAV,EAAe;AAAE,WAAOyB,MAAMzB,GAAN,MAAeyB,MAAMzB,GAAN,IAAawB,GAAGxB,GAAH,CAA5B,CAAP;AAA8C,GAAtE;AACD,CAJD;;AAMA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BO,IAAI0B,wBAAQH,KAAKN,UAAL,CAAZ;;AAEP;;;;;;;;;;;;;;;AAeO,IAAIrC,sBAAO,UAAUoB,GAAV,EAAe;AAAE,SAAO0B,MAAM1B,GAAN,EAAWpB,IAAlB;AAAyB,CAArD;;AAEP;;;;;;;;;;AAUO,IAAI4B,kBAAK,UAAUR,GAAV,EAAe;AAAE,SAAO0B,MAAM1B,GAAN,EAAWQ,EAAlB;AAAuB,CAAjD;;AAEP;;;;;;;;;;;;AAYO,IAAIM,sBAAO,UAAUa,IAAV,EAAgB;AAAE,SAAOD,MAAMC,IAAN,EAAYb,IAAZ,IAAoB,CAACa,IAArB,IAA6B,IAApC;AAA2C,CAAxE;;AAEP;;;;;;;AAOO,IAAIL,kCAAa,UAAUR,IAAV,EAAgBc,MAAhB,EAAwB;AAC5C,MAAKA,WAAW,KAAK,CAArB,EAAyBA,SAAS,GAAT;;AAEzB,SAAO,OAAOd,IAAP,KAAgB,QAAhB,GAA2Be,KAAKC,GAAL,CAAS,CAAT,EAAY,CAAChB,OAAO,EAAR,IAAc,EAA1B,IAAgCc,MAA3D,GAAoE,IAA3E;AACH,CAJM;;AAMP;;;;;;;;;;AAUO,IAAIb,sBAAO,UAAUY,IAAV,EAAgB;AAAE,SAAOD,MAAMC,IAAN,EAAYZ,IAAZ,IAAoBO,WAAWK,IAAX,CAA3B;AAA8C,CAA3E;;AAEP,IAAII,KAAKF,KAAKG,GAAL,CAAS,CAAT,CAAT;AACA,IAAIC,OAAOJ,KAAKG,GAAL,CAAS,GAAT,CAAX;AACA;;;;;;;;;;;AAWO,IAAIE,kCAAa,UAAUnB,IAAV,EAAgB;AACtC,MAAIoB,IAAI,MAAMN,KAAKG,GAAL,CAASjB,IAAT,IAAiBkB,IAAvB,IAA+BF,EAA/B,GAAoC,EAA5C;AACA,SAAOF,KAAKO,KAAL,CAAWD,IAAI,GAAf,IAAsB,GAA7B;AACD,CAHM;;AAKP;;;;;;;;;;AAUO,IAAItB,0BAAS,UAAUb,GAAV,EAAe;AAAE,SAAO0B,MAAM1B,GAAN,EAAWa,MAAlB;AAA2B,CAAzD;;AAEP;;;;;;;;;;;AAWO,IAAIF,oBAAM,UAAUX,GAAV,EAAe;AAAE,SAAO0B,MAAM1B,GAAN,EAAWW,GAAlB;AAAwB,CAAnD;;AAEP,IAAI0B,UAAU,SAAd;AACA;;;;;;;AAOO,IAAIC,sCAAe,UAAU7B,IAAV,EAAgB;AAAE,SAAO4B,QAAQ5B,IAAR,CAAP;AAAuB,CAA5D;;AAEP,IAAI8B,UAAU,UAAUC,CAAV,EAAa9C,CAAb,EAAgB;AAAE,SAAOvC,MAAMuC,IAAI,CAAV,EAAa+C,IAAb,CAAkBD,CAAlB,CAAP;AAA8B,CAA9D;AACA,IAAIE,WAAW,UAAUC,GAAV,EAAeC,EAAf,EAAmB;AAAE,SAAQ,OAAOD,GAAP,KAAe,QAAf,GAA0B,EAA1B,GAA+BC,GAAGD,GAAH,CAAvC;AAAkD,CAAtF;;AAEA;;;;;;;AAOO,IAAIE,8BAAW,UAAUnC,GAAV,EAAe;AAAE,SAAOgC,SAAShC,GAAT,EAAc,UAAUA,GAAV,EAAe;AAAE,WAAQA,MAAM,CAAN,GAAU6B,QAAQ,GAAR,EAAa,CAAC7B,GAAd,CAAV,GAA+B6B,QAAQ,GAAR,EAAa7B,GAAb,CAAvC;AAA4D,GAA3F,CAAP;AAAsG,CAAtI;;AAEP;;;;;;;;;;;;;;;;;;;;;;;;AAwBO,IAAIoC,sBAAO,UAAUC,SAAV,EAAqBC,QAArB,EAA+B;AAC/C,MAAKD,cAAc,KAAK,CAAxB,EAA4BA,YAAY,EAAZ;AAC5B,MAAKC,aAAa,KAAK,CAAvB,EAA2BA,WAAW,IAAX;;AAE3B,MAAIC,MAAMD,WACN1C,OAAO4C,MAAP,CAAc,EAAd,EAAkBxB,MAAMsB,QAAN,CAAlB,EAAmCD,SAAnC,CADM,GAENA,SAFJ;AAGA,MAAItC,OAAOwC,IAAIxC,IAAf;AACA,MAAIC,MAAMuC,IAAIvC,GAAd;AACA,MAAIC,MAAMsC,IAAItC,GAAd;AACA,MAAIQ,SAASmB,aAAa7B,IAAb,CAAb;AACA,MAAI,CAACU,MAAL,EAAa;AAAE,WAAO,IAAP;AAAc;AAC7B,MAAIX,KAAKW,SAAS0B,SAASnC,GAAT,CAAlB;AACA,SAAOC,OAAOA,QAAQ,CAAf,GAAmBH,KAAKG,GAAxB,GAA8BH,EAArC;AACD,CAdM;;AAgBP;;;;AAIO,IAAI2C,wBAAQL,IAAZ;;AAEP;;;;;;;;;;;;;;AAcO,SAAS3D,QAAT,CAAkBwD,GAAlB,EAAuBS,MAAvB,EAA+B;AACpCT,QAAMd,KAAKO,KAAL,CAAWO,GAAX,CAAN;AACA,MAAIU,MAAMD,WAAW,IAAX,GAAkBvD,MAAlB,GAA2BC,KAArC;AACA,MAAIU,KAAK6C,IAAIV,MAAM,EAAV,CAAT;AACA,MAAIW,IAAIzB,KAAK0B,KAAL,CAAWZ,MAAM,EAAjB,IAAuB,CAA/B;AACA,SAAOnC,KAAK8C,CAAZ;AACD;;AAED;;;;;;;;;;;;;AAaO,IAAIE,8BAAW,UAAU7B,IAAV,EAAgB8B,OAAhB,EAAyB;AAC7C,MAAIR,MAAMvB,MAAMC,IAAN,CAAV;AACA,MAAIjB,MAAMuC,IAAIvC,GAAd;AACA,MAAIG,SAASoC,IAAIpC,MAAjB;AACA,MAAIC,OAAOmC,IAAInC,IAAf;AACA,MAAID,WAAW,IAAf,EAAqB;AAAE,WAAO,IAAP;AAAc;AACrC,MAAI6C,YAAYD,YAAY,KAAZ,GAAoB/C,MAAM,CAA1B,GAA8BA,MAAM,CAApD;AACA,SAAOI,SAAS,IAAT,GACHN,GAAGrB,SAAS0B,MAAT,EAAiB6C,SAAjB,CAAH,CADG,GAEHvE,SAAS2B,IAAT,EAAe4C,SAAf,CAFJ;AAGD,CAVM;;AAYP;;;;;;;;;AASO,IAAIC,kCAAa,UAAUhC,IAAV,EAAgB;AAAE,SAAO6B,SAAS7B,IAAT,EAAe,KAAf,CAAP;AAA+B,CAAlE;;;;;;;;QCvVSiC,QAAAA;QAgBAC,SAAAA;QA6BAC,OAAAA;QAUAC,SAAAA;;AA/EhB;;AAEA;AACA,SAASC,IAAT,CAAcC,CAAd,EAAiBvE,CAAjB,EAAoB;AAClB,OAAK,IAAIwE,IAAI,EAAb,EAAiBxE,GAAjB,EAAsBwE,EAAExE,CAAF,IAAOA,IAAIuE,CAAjC,EAAmC;AAAE;AAAG;AACxC,SAAOC,CAAP;AACD;AACD;AAtBA;;;;;;;;;;;;;;;AAuBA,SAASC,KAAT,CAAeF,CAAf,EAAkBvE,CAAlB,EAAqB;AACnB,OAAK,IAAIwE,IAAI,EAAb,EAAiBxE,GAAjB,EAAsBwE,EAAExE,CAAF,IAAOuE,IAAIvE,CAAjC,EAAmC;AAAE;AAAG;AACxC,SAAOwE,CAAP;AACD;;AAED;;;;;;;;;;;AAWO,SAASN,KAAT,CAAeM,CAAf,EAAkBD,CAAlB,EAAqB;AAC1B,SAAOC,MAAM,IAAN,IAAcD,MAAM,IAApB,GACH,EADG,GAEHC,IAAID,CAAJ,GAAQD,KAAKE,CAAL,EAAQD,IAAIC,CAAJ,GAAQ,CAAhB,CAAR,GAA6BC,MAAMD,CAAN,EAASA,IAAID,CAAJ,GAAQ,CAAjB,CAFjC;AAGD;AACD;;;;;;;;;;;AAWO,SAASJ,MAAT,CAAgBO,KAAhB,EAAuBC,GAAvB,EAA4B;AACjC,MAAItH,MAAMsH,IAAI1H,MAAd;AACA,MAAI+C,IAAI,CAAC0E,QAAQrH,GAAR,GAAcA,GAAf,IAAsBA,GAA9B;AACA,SAAOsH,IAAI7E,KAAJ,CAAUE,CAAV,EAAa3C,GAAb,EAAkBH,MAAlB,CAAyByH,IAAI7E,KAAJ,CAAU,CAAV,EAAaE,CAAb,CAAzB,CAAP;AACD;;AAED;;;;;;;;;AASO,IAAI4E,4BAAU,UAAUD,GAAV,EAAe;AAAE,SAAOA,IAAI5E,MAAJ,CAAW,UAAUC,CAAV,EAAa;AAAE,WAAOA,MAAM,CAAN,IAAWA,CAAlB;AAAsB,GAAhD,CAAP;AAA2D,CAA1F;;AAEP;AACA,IAAI6E,SAAS,UAAU7E,CAAV,EAAa;AACxB,MAAIO,IAAI,qBAAKP,CAAL,CAAR;AACA,SAAOO,MAAM,IAAN,GAAaA,CAAb,GAAiB,qBAAKP,IAAI,MAAT,CAAxB;AACD,CAHD;;AAKA;;;;;;AAMO,SAASoE,IAAT,CAAcU,GAAd,EAAmB;AACxB,SAAOF,QAAQE,IAAIC,GAAJ,CAAQ7F,eAAR,CAAR,EAAuBkF,IAAvB,CAA4B,UAAUI,CAAV,EAAaD,CAAb,EAAgB;AAAE,WAAOM,OAAOL,CAAP,IAAYK,OAAON,CAAP,CAAnB;AAA+B,GAA7E,CAAP;AACD;;AAED;;;;;;AAMO,SAASF,MAAT,CAAgBM,GAAhB,EAAqB;AAC1B,SAAOP,KAAKO,GAAL,EAAU5E,MAAV,CAAiB,UAAUC,CAAV,EAAarC,CAAb,EAAgB6G,CAAhB,EAAmB;AAAE,WAAO7G,MAAM,CAAN,IAAWqC,MAAMwE,EAAE7G,IAAI,CAAN,CAAxB;AAAmC,GAAzE,CAAP;AACD;;AAED;;;;;;;;;;;AAWO,IAAIqH,4BAAU,UAAUL,GAAV,EAAeM,GAAf,EAAoB;AACvC,MAAKA,QAAQ,KAAK,CAAlB,EAAsBA,MAAM9C,KAAK+C,MAAX;;AAEtB,MAAIvH,CAAJ,EAAOwH,CAAP;AACA,MAAI5E,IAAIoE,IAAI1H,MAAZ;AACA,SAAOsD,CAAP,EAAU;AACR5C,QAAKsH,QAAQ1E,GAAT,GAAgB,CAApB;AACA4E,QAAIR,IAAIpE,CAAJ,CAAJ;AACAoE,QAAIpE,CAAJ,IAASoE,IAAIhH,CAAJ,CAAT;AACAgH,QAAIhH,CAAJ,IAASwH,CAAT;AACD;AACD,SAAOR,GAAP;AACD,CAZM;;AAcP;;;;;;;AAOO,IAAIS,sCAAe,UAAUT,GAAV,EAAe;AACvC,MAAIA,IAAI1H,MAAJ,KAAe,CAAnB,EAAsB;AAAE,WAAO,CAAC,EAAD,CAAP;AAAc;AACtC,SAAOmI,aAAaT,IAAI7E,KAAJ,CAAU,CAAV,CAAb,EAA2BuF,MAA3B,CAAkC,UAASpF,GAAT,EAAcqF,IAAd,EAAoB;AAC3D,WAAOrF,IAAI/C,MAAJ,CACLyH,IAAII,GAAJ,CAAQ,UAAS1I,CAAT,EAAYkJ,GAAZ,EAAiB;AACvB,UAAIC,UAAUF,KAAKxF,KAAL,EAAd;AACA0F,cAAQC,MAAR,CAAeF,GAAf,EAAoB,CAApB,EAAuBZ,IAAI,CAAJ,CAAvB;AACA,aAAOa,OAAP;AACD,KAJD,CADK,CAAP;AAOD,GARM,EAQJ,EARI,CAAP;AASD,CAXM;;;;;;;QCaSxD,QAAAA;AA/IhB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyCA;AACA,IAAI0D,UAAU,kCAAd;AACA;AACA,IAAIC,UAAU,8BAAd;AACA,IAAItF,QAAQ,IAAIuF,MAAJ,CAAW,MAAMF,OAAN,GAAgB,GAAhB,GAAsBC,OAAtB,GAAgC,GAA3C,CAAZ;AACA,IAAIE,QAAQ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,EAAnB,CAAZ;AACA,IAAIC,QAAQ,SAAZ;AACA,IAAIC,UAAU,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+B,CAA/B,EAAkC,CAAlC,CAAd;AACA,IAAIrG,QAAQ,sCAAsCC,KAAtC,CAA4C,GAA5C,CAAZ;;AAEA;;;;;;;;;;;AAWO,IAAIC,wBAAQ,UAAUoG,KAAV,EAAiB;AAAE,SAAO,OAAOA,KAAP,KAAiB,QAAjB,GACvCtG,MAAMI,KAAN,EADuC,GAEvCJ,MAAMK,MAAN,CAAa,UAAUC,CAAV,EAAa;AAAE,WAAOgG,MAAM9F,OAAN,CAAcF,EAAE,CAAF,CAAd,MAAwB,CAAC,CAAhC;AAAoC,GAAhE,CAFgC;AAEoC,CAFnE;;AAIA,IAAIR,8BAAW,UAAUc,GAAV,EAAe;AACnC,MAAIC,IAAIF,MAAMG,IAAN,CAAWF,GAAX,CAAR;AACA,SAAOC,MAAM,IAAN,GAAa,IAAb,GAAoBA,EAAE,CAAF,IAAO,CAACA,EAAE,CAAF,CAAD,EAAOA,EAAE,CAAF,CAAP,CAAP,GAAsB,CAACA,EAAE,CAAF,CAAD,EAAOA,EAAE,CAAF,CAAP,CAAjD;AACD,CAHM;;AAKP,IAAI0F,SAASrF,OAAOC,MAAP,CAAc;AACzB3B,QAAM,IADmB;AAEzB+D,OAAK,IAFoB;AAGzBiD,KAAG,IAHsB;AAIzBnF,QAAM,IAJmB;AAKzBC,OAAK,IALoB;AAMzB1B,OAAK,IANoB;AAOzB6G,QAAM,IAPmB;AAQzBC,UAAQ,IARiB;AASzBC,aAAW,IATc;AAUzBlF,UAAQ;AAViB,CAAd,CAAb;;AAaA,IAAI0B,UAAU,UAAUC,CAAV,EAAa9C,CAAb,EAAgB;AAAE,SAAOvC,MAAM0E,KAAKmE,GAAL,CAAStG,CAAT,IAAc,CAApB,EAAuB+C,IAAvB,CAA4BD,CAA5B,CAAP;AAAwC,CAAxE;;AAEA,IAAIyD,SAAS,UAAUJ,IAAV,EAAgBD,CAAhB,EAAmB;AAC9B,MAAIA,MAAM,GAAN,IAAaC,SAAS,GAA1B,EAA+B;AAAE,WAAO,CAAP;AAAW;AAC5C,MAAID,MAAM,GAAN,IAAaC,SAAS,GAA1B,EAA+B;AAAE,WAAO,CAAP;AAAW;AAC5C,MAAID,MAAM,GAAN,IAAaC,SAAS,GAA1B,EAA+B;AAAE,WAAO,CAAC,CAAR;AAAY;AAC7C,MAAI,OAAOK,IAAP,CAAYN,CAAZ,CAAJ,EAAoB;AAAE,WAAOA,EAAEjJ,MAAT;AAAkB;AACxC,MAAI,OAAOuJ,IAAP,CAAYN,CAAZ,CAAJ,EAAoB;AAAE,WAAOC,SAAS,GAAT,GAAe,CAACD,EAAEjJ,MAAlB,GAA2B,CAACiJ,EAAEjJ,MAAH,GAAY,CAA9C;AAAkD;AACxE,SAAO,IAAP;AACD,CAPD;;AASA,IAAIwJ,SAAS,UAAUN,IAAV,EAAgBnF,GAAhB,EAAqB;AAChC,MAAIA,QAAQ,CAAZ,EAAe;AAAE,WAAOmF,SAAS,GAAT,GAAe,GAAf,GAAqB,GAA5B;AAAkC,GAAnD,MACK,IAAInF,QAAQ,CAAC,CAAT,IAAcmF,SAAS,GAA3B,EAAgC;AAAE,WAAO,GAAP;AAAa,GAA/C,MACA,IAAInF,MAAM,CAAV,EAAa;AAAE,WAAO6B,QAAQ,GAAR,EAAa7B,GAAb,CAAP;AAA2B,GAA1C,MACA,IAAIA,MAAM,CAAV,EAAa;AAAE,WAAO6B,QAAQ,GAAR,EAAasD,SAAS,GAAT,GAAenF,GAAf,GAAqBA,MAAM,CAAxC,CAAP;AAAoD,GAAnE,MACA;AAAE,WAAO,IAAP;AAAc;AACtB,CAND;;AAQA,IAAI0F,YAAY,UAAUzD,GAAV,EAAe;AAAE,SAAO,CAACd,KAAKmE,GAAL,CAASrD,GAAT,IAAgB,CAAjB,IAAsB,CAA7B;AAAiC,CAAlE;;AAEA,IAAI1B,aAAa,UAAUjB,GAAV,EAAe;AAC9B,MAAI6E,IAAI3F,SAASc,GAAT,CAAR;AACA,MAAI6E,MAAM,IAAV,EAAgB;AAAE,WAAOc,MAAP;AAAgB;AAClC,MAAIvE,IAAI,EAAEuB,KAAK,CAACkC,EAAE,CAAF,CAAR,EAAce,GAAGf,EAAE,CAAF,CAAjB,EAAR;AACAzD,IAAEX,IAAF,GAAS2F,UAAUhF,EAAEuB,GAAZ,CAAT;AACAvB,IAAEyE,IAAF,GAASL,MAAMpE,EAAEX,IAAR,CAAT;AACA,MAAIW,EAAEyE,IAAF,KAAW,GAAX,IAAkBzE,EAAEwE,CAAF,KAAQ,GAA9B,EAAmC;AAAE,WAAOD,MAAP;AAAgB;;AAErDvE,IAAExC,IAAF,GAAS,KAAKwC,EAAEuB,GAAP,GAAavB,EAAEwE,CAAxB;AACAxE,IAAEpC,GAAF,GAAQoC,EAAEuB,GAAF,GAAQ,CAAR,GAAY,CAAC,CAAb,GAAiB,CAAzB;AACAvB,IAAE0E,MAAF,GAAW1E,EAAEuB,GAAF,KAAU,CAAV,IAAevB,EAAEuB,GAAF,KAAU,CAAC,CAA1B,GAA8BvB,EAAEuB,GAAhC,GAAsCvB,EAAEpC,GAAF,IAASoC,EAAEX,IAAF,GAAS,CAAlB,CAAjD;AACAW,IAAEV,GAAF,GAAQuF,OAAO7E,EAAEyE,IAAT,EAAezE,EAAEwE,CAAjB,CAAR;AACAxE,IAAET,GAAF,GAAQkB,KAAK0B,KAAL,CAAW,CAAC1B,KAAKmE,GAAL,CAAS5E,EAAEuB,GAAX,IAAkB,CAAnB,IAAwB,CAAnC,CAAR;AACAvB,IAAE2E,SAAF,GAAc3E,EAAEpC,GAAF,IAASuG,MAAMnE,EAAEX,IAAR,IAAgBW,EAAEV,GAAlB,GAAwB,KAAKU,EAAET,GAAxC,CAAd;AACAS,IAAEP,MAAF,GAAW,CAAEO,EAAEpC,GAAF,IAASuG,MAAMnE,EAAEX,IAAR,IAAgBW,EAAEV,GAA3B,CAAD,GAAoC,EAApC,GAAyC,EAA1C,IAAgD,EAA3D;AACA,SAAOJ,OAAOC,MAAP,CAAca,CAAd,CAAP;AACD,CAhBD;;AAkBA,IAAIK,QAAQ,EAAZ;AACA;;;;;;;;;;;;;;;;;;;AAmBO,SAASC,KAAT,CAAe1B,GAAf,EAAoB;AACzB,MAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;AAAE,WAAO2F,MAAP;AAAgB;AAC/C,SAAOlE,MAAMzB,GAAN,MAAeyB,MAAMzB,GAAN,IAAaiB,WAAWjB,GAAX,CAA5B,CAAP;AACD;;AAED;;;;;;;;;;;AAWO,IAAI2C,oBAAM,UAAU3C,GAAV,EAAe;AAAE,SAAO0B,MAAM1B,GAAN,EAAW2C,GAAlB;AAAwB,CAAnD;;AAEP;;;;;;;;;;;;AAYO,IAAI/D,sBAAO,UAAUoB,GAAV,EAAe;AAAE,SAAO0B,MAAM1B,GAAN,EAAWpB,IAAlB;AAAyB,CAArD;;AAEP;;;;;;;;;;;;AAYO,IAAImH,gCAAY,UAAU/F,GAAV,EAAe;AAAE,SAAO0B,MAAM1B,GAAN,EAAW+F,SAAlB;AAA8B,CAA/D;;AAEP;;;;;;;;AAQO,IAAIlF,0BAAS,UAAUb,GAAV,EAAe;AAAE,SAAO0B,MAAM1B,GAAN,EAAWa,MAAlB;AAA2B,CAAzD;;AAEP;;;;;;;;;;;;;;;;;AAiBO,IAAIwF,kBAAK,UAAUC,GAAV,EAAe;AAC7B,MAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;AAAEA,UAAM5E,MAAM4E,GAAN,EAAWzF,MAAjB;AAA0B;AACzD,SAAO,OAAOyF,GAAP,KAAe,QAAf,GAA0Bb,QAAQa,MAAM,EAAd,CAA1B,GAA8C,IAArD;AACD,CAHM;;AAKP;;;;;;;;;;;;;;;;;;;AAmBO,IAAInD,wBAAQ,UAAUF,GAAV,EAAe;AAChC,MAAKA,QAAQ,KAAK,CAAlB,EAAsBA,MAAM,EAAN;AACtB,MAAIN,MAAMM,IAAIN,GAAd;AACA,MAAIlC,OAAOwC,IAAIxC,IAAf;AACA,MAAIC,MAAMuC,IAAIvC,GAAd;AACA,MAAIC,MAAMsC,IAAItC,GAAd,CAAmB,IAAKA,QAAQ,KAAK,CAAlB,EAAsBA,MAAM,CAAN;AACzC,MAAI3B,MAAMiE,IAAIjE,GAAd;;AAEA,MAAIyB,SAAS8F,SAAb,EAAwB;AAAE5D,UAAMlC,OAAO,CAAP,GAAW,IAAIE,GAArB;AAA2B;AACrD,MAAIgC,QAAQ4D,SAAZ,EAAuB;AAAE,WAAO,IAAP;AAAc;;AAEvC,MAAIC,IAAIxH,MAAM,CAAN,GAAU,GAAV,GAAgB,EAAxB;AACA,MAAI6G,OAAOL,MAAMY,UAAUzD,GAAV,CAAN,CAAX;AACA,SAAO6D,IAAI7D,GAAJ,GAAUwD,OAAON,IAAP,EAAanF,GAAb,CAAjB;AACD,CAdM;;AAgBP;;;;;;;;;;;;;;AAcO,IAAI8C,8BAAW,UAAUxD,GAAV,EAAe;AACnC,MAAIoB,IAAIM,MAAM1B,GAAN,CAAR;AACA,MAAIoB,MAAMuE,MAAV,EAAkB;AAAE,WAAO,IAAP;AAAc;AAClC,SAAOvE,EAAE0E,MAAF,GAAW1E,EAAEwE,CAApB;AACD,CAJM;;AAMP;;;;;;;;;;;;;AAaO,IAAIa,0BAAS,UAAUzG,GAAV,EAAe;AACjC,MAAIoB,IAAIM,MAAM1B,GAAN,CAAR;AACA,MAAIoB,MAAMuE,MAAV,EAAkB;AAAE,WAAO,IAAP;AAAc;AAClC,MAAIlF,OAAO,CAAC,IAAIW,EAAEX,IAAP,IAAe,CAA1B;AACA,MAAIC,MAAMU,EAAEyE,IAAF,KAAW,GAAX,GAAiB,CAACzE,EAAEV,GAApB,GAA0B,EAAEU,EAAEV,GAAF,GAAQ,CAAV,CAApC;AACA,SAAOyC,MAAM,EAAE1C,MAAMA,IAAR,EAAcC,KAAKA,GAAnB,EAAwBC,KAAKS,EAAET,GAA/B,EAAoC3B,KAAKoC,EAAEpC,GAA3C,EAAN,CAAP;AACD,CANM;;AAQP;AACA,IAAI0H,KAAK,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+B,CAA/B,EAAkC,CAAlC,CAAT;AACA;AACA,IAAIC,KAAK,0BAA0BtH,KAA1B,CAAgC,GAAhC,CAAT;;AAEA;;;;;;;;;;;;;AAaO,IAAIuH,wCAAgB,UAAUjE,GAAV,EAAe;AACxC,MAAI6D,IAAI7D,MAAM,CAAN,GAAU,CAAC,CAAX,GAAe,CAAvB;AACA,MAAIjD,IAAImC,KAAKmE,GAAL,CAASrD,GAAT,CAAR;AACA,MAAIkE,IAAInH,IAAI,EAAZ;AACA,MAAI4D,IAAIzB,KAAK0B,KAAL,CAAW7D,IAAI,EAAf,CAAR;AACA,SAAO8G,KAAKE,GAAGG,CAAH,IAAQ,IAAIvD,CAAjB,IAAsBqD,GAAGE,CAAH,CAA7B;AACD,CANM;;;;;;;QCrNSC,YAAAA;QA0BAC,WAAAA;QAeAC,SAAAA;QAoBAC,cAAAA;QAQAC,eAAAA;QAoBAC,MAAAA;QAcAC,WAAAA;QAwBAC,WAAAA;QAwBAtB,YAAAA;;AAlOhB;;AACA;;AAEA;AACA;AA/BA;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA,IAAIuB,SAAS,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAC,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,CAAb;;AAEA;AACA,IAAIC,QAAQ,UAAUC,CAAV,EAAa;AAAE,SAAO3F,KAAK0B,KAAL,CAAWiE,IAAI,CAAJ,GAAQ,EAAnB,CAAP;AAAgC,CAA3D;;AAEA;AACA,IAAIC,aAAaH,OAAO7C,GAAP,CAAW8C,KAAX,CAAjB;;AAEA,IAAIG,SAAS,UAAUzE,GAAV,EAAe;AAC1B,MAAIxC,OAAOwC,IAAIxC,IAAf;AACA,MAAIC,MAAMuC,IAAIvC,GAAd;AACA,MAAIC,MAAMsC,IAAItC,GAAd;AACA,MAAI3B,MAAMiE,IAAIjE,GAAd,CAAmB,IAAKA,QAAQ,KAAK,CAAlB,EAAsBA,MAAM,CAAN;;AAEzC,MAAIwI,IAAIF,OAAO7G,IAAP,IAAe,IAAIC,GAA3B;AACA,MAAIC,QAAQ,IAAZ,EAAkB;AAAE,WAAO,CAAC3B,MAAMwI,CAAP,CAAP;AAAmB;AACvC,MAAIlE,IAAI3C,MAAM8G,WAAWhH,IAAX,CAAN,GAAyB,IAAIC,GAArC;AACA,SAAO,CAAC1B,MAAMwI,CAAP,EAAUxI,MAAMsE,CAAhB,CAAP;AACD,CAVD;;AAYA;AACA;AACA;AACA;AACA,IAAIqE,QAAQ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CAAZ;;AAEA;AACA,SAASC,SAAT,CAAmBJ,CAAnB,EAAsB;AACpB,MAAInK,IAAI,CAACmK,IAAI,CAAL,IAAU,CAAlB;AACA,SAAOnK,IAAI,CAAJ,GAAQ,IAAIA,CAAZ,GAAgBA,CAAvB;AACD;;AAED,IAAIwK,SAAS,UAAUL,CAAV,EAAalE,CAAb,EAAgBtE,GAAhB,EAAqB;AAChC,MAAIyB,OAAOkH,MAAMC,UAAUJ,CAAV,CAAN,CAAX;AACA,MAAI9G,MAAMmB,KAAK0B,KAAL,CAAW,CAACiE,IAAI,CAAL,IAAU,CAArB,CAAV;AACA,MAAIlE,MAAMiD,SAAV,EAAqB;AAAE,WAAO,EAAE9F,MAAMA,IAAR,EAAcC,KAAKA,GAAnB,EAAwB1B,KAAKA,GAA7B,EAAP;AAA4C;AACnE,MAAI2B,MAAM2C,IAAI,IAAI5C,GAAR,GAAc+G,WAAWhH,IAAX,CAAxB;AACA,SAAO,EAAEA,MAAMA,IAAR,EAAcC,KAAKA,GAAnB,EAAwBC,KAAKA,GAA7B,EAAkC3B,KAAKA,GAAvC,EAAP;AACD,CAND;;AAQA,IAAIuC,OAAO,UAAUC,EAAV,EAAcC,KAAd,EAAqB;AAC9B,MAAKA,UAAU,KAAK,CAApB,EAAwBA,QAAQ,EAAR;;AAExB,SAAO,UAAUzB,GAAV,EAAe;AAAE,WAAOyB,MAAMzB,GAAN,MAAeyB,MAAMzB,GAAN,IAAawB,GAAGxB,GAAH,CAA5B,CAAP;AAA8C,GAAtE;AACD,CAJD;;AAMA,IAAI8H,UAAU,UAAUpG,KAAV,EAAiB;AAAE,SAAOH,KAAK,UAAUvB,GAAV,EAAe;AACxD,QAAIoB,IAAIM,MAAM1B,GAAN,CAAR;AACA,WAAOoB,EAAExC,IAAF,KAAW,IAAX,GAAkB,IAAlB,GAAyB8I,OAAOtG,CAAP,CAAhC;AACD,GAHqC,CAAP;AAG1B,CAHP;;AAKA,IAAI2G,aAAaD,QAAQE,gBAAR,CAAjB;AACA,IAAIC,YAAYH,QAAQI,oBAAR,CAAhB;;AAEA;;;;;;;;;;;;;;;;AAgBO,SAASpB,SAAT,CAAmBnF,IAAnB,EAAyB0F,QAAzB,EAAmC;AACxC,MAAIjK,UAAUT,MAAV,KAAqB,CAAzB,EAA4B;AAAE,WAAO,UAAUU,CAAV,EAAa;AAAE,aAAOyJ,UAAUnF,IAAV,EAAgBtE,CAAhB,CAAP;AAA4B,KAAlD;AAAqD;AACnF,MAAIqC,IAAIqI,WAAWpG,IAAX,CAAR;AACA,MAAItE,IAAI4K,UAAUZ,QAAV,CAAR;AACA,MAAI3H,MAAM,IAAN,IAAcrC,MAAM,IAAxB,EAA8B;AAAE,WAAO,IAAP;AAAc;AAC9C,MAAI8K,KAAKzI,EAAE/C,MAAF,KAAa,CAAb,GAAiB,CAAC+C,EAAE,CAAF,IAAOrC,EAAE,CAAF,CAAR,CAAjB,GAAiC,CAACqC,EAAE,CAAF,IAAOrC,EAAE,CAAF,CAAR,EAAcqC,EAAE,CAAF,IAAOrC,EAAE,CAAF,CAArB,CAA1C;AACA,SAAO,sBAASwK,OAAOM,GAAG,CAAH,CAAP,EAAcA,GAAG,CAAH,CAAd,CAAT,CAAP;AACD;;AAED;;;;;;;;;;;;;;;;;AAiBO,SAASpB,QAAT,CAAkBpF,IAAlB,EAAwBqF,MAAxB,EAAgC;AACrC,MAAI5J,UAAUT,MAAV,KAAqB,CAAzB,EAA4B;AAAE,WAAO,UAAU6K,CAAV,EAAa;AAAE,aAAOT,SAASpF,IAAT,EAAe6F,CAAf,CAAP;AAA2B,KAAjD;AAAoD;AAClF,MAAI9H,IAAIqI,WAAWpG,IAAX,CAAR;AACA,MAAIjC,MAAM,IAAV,EAAgB;AAAE,WAAO,IAAP;AAAc;AAChC,SAAO,sBAASmI,OAAOnI,EAAE,CAAF,IAAOsH,MAAd,CAAT,CAAP;AACD;;AAED;;;;;;;;AAQO,SAASA,MAAT,CAAgBlE,IAAhB,EAAsBsF,EAAtB,EAA0B;AAC/B,MAAIhL,UAAUT,MAAV,KAAqB,CAAzB,EAA4B;AAAE,WAAO,UAAUyL,EAAV,EAAc;AAAE,aAAOpB,OAAOlE,IAAP,EAAasF,EAAb,CAAP;AAA0B,KAAjD;AAAoD;AAClF,MAAIZ,IAAIO,WAAWjF,IAAX,CAAR;AACA,MAAI+B,IAAIkD,WAAWK,EAAX,CAAR;AACA,MAAIvD,MAAM,IAAN,IAAc2C,MAAM,IAAxB,EAA8B;AAAE,WAAO,IAAP;AAAc;AAC9C,SAAO3C,EAAE,CAAF,IAAO2C,EAAE,CAAF,CAAd;AACD;;AAED;;;;;;;;;;;;AAYO,SAASP,WAAT,CAAqBI,QAArB,EAA+B1F,IAA/B,EAAqC;AAC1C,MAAIvE,UAAUT,MAAV,KAAqB,CAAzB,EAA4B;AAAE,WAAO,UAAU+C,CAAV,EAAa;AAAE,aAAOoH,UAAUpH,CAAV,EAAa2H,QAAb,CAAP;AAAgC,KAAtD;AAAyD;AACvF,SAAOP,UAAUnF,IAAV,EAAgB0F,QAAhB,CAAP;AACD;;AAED,IAAIgB,eAAe,UAAUtM,CAAV,EAAa;AAAE,SAAOA,EAAE,CAAF,IAAO,CAAP,GAAWA,EAAE,CAAF,IAAO,EAAlB,GAAuB,CAA9B;AAAkC,CAApE;AACA,IAAIuM,YAAY,UAAUjL,CAAV,EAAa;AAAE,SAAOgL,aAAahL,CAAb,IAAkBwK,OAAO,CAACxK,EAAE,CAAF,CAAR,EAAc,CAACA,EAAE,CAAF,CAAf,EAAqB,CAAC,CAAtB,CAAlB,GAA6CwK,OAAOxK,EAAE,CAAF,CAAP,EAAaA,EAAE,CAAF,CAAb,EAAmB,CAAnB,CAApD;AAA4E,CAA3G;;AAEO,SAAS6J,YAAT,CAAsBqB,IAAtB,EAA4BC,IAA5B,EAAkCxJ,GAAlC,EAAuC;AAC5C,MAAIyJ,KAAKR,UAAUM,IAAV,CAAT;AACA,MAAIG,KAAKT,UAAUO,IAAV,CAAT;AACA,MAAIC,OAAO,IAAP,IAAeC,OAAO,IAA1B,EAAgC;AAAE,WAAO,IAAP;AAAc;AAChD,MAAIrL,IAAI,CAACoL,GAAG,CAAH,IAAQzJ,MAAM0J,GAAG,CAAH,CAAf,EAAsBD,GAAG,CAAH,IAAQzJ,MAAM0J,GAAG,CAAH,CAApC,CAAR;AACA,SAAO,0BAAOJ,UAAUjL,CAAV,CAAP,CAAP;AACD;;AAED;;;;;;;;;;;;AAYO,SAAS8J,GAAT,CAAaoB,IAAb,EAAmBC,IAAnB,EAAyB;AAC9B,MAAIpL,UAAUT,MAAV,KAAqB,CAAzB,EAA4B;AAAE,WAAO,UAAU+L,EAAV,EAAc;AAAE,aAAOvB,IAAIoB,IAAJ,EAAUG,EAAV,CAAP;AAAuB,KAA9C;AAAiD;AAC/E,SAAOxB,aAAaqB,IAAb,EAAmBC,IAAnB,EAAyB,CAAzB,CAAP;AACD;;AAED;;;;;;;;;AASO,SAASpB,QAAT,CAAkBmB,IAAlB,EAAwBC,IAAxB,EAA8B;AACnC,MAAIpL,UAAUT,MAAV,KAAqB,CAAzB,EAA4B;AAAE,WAAO,UAAU+L,EAAV,EAAc;AAAE,aAAOvB,IAAIoB,IAAJ,EAAUG,EAAV,CAAP;AAAuB,KAA9C;AAAiD;AAC/E,SAAOxB,aAAaqB,IAAb,EAAmBC,IAAnB,EAAyB,CAAC,CAA1B,CAAP;AACD;;AAED;;;;;;;;;;;;;;;;;;;AAmBO,SAASnB,QAAT,CAAkBvE,IAAlB,EAAwBsF,EAAxB,EAA4B;AACjC,MAAIhL,UAAUT,MAAV,KAAqB,CAAzB,EAA4B;AAAE,WAAO,UAAUkI,CAAV,EAAa;AAAE,aAAOwC,SAASvE,IAAT,EAAe+B,CAAf,CAAP;AAA2B,KAAjD;AAAoD;AAClF,MAAI2C,IAAIO,WAAWjF,IAAX,CAAR;AACA,MAAI+B,IAAIkD,WAAWK,EAAX,CAAR;AACA,MAAIZ,MAAM,IAAN,IAAc3C,MAAM,IAApB,IAA4B2C,EAAE7K,MAAF,KAAakI,EAAElI,MAA/C,EAAuD;AAAE,WAAO,IAAP;AAAc;AACvE,MAAI6J,IACFgB,EAAE7K,MAAF,KAAa,CAAb,GACI,CAACkI,EAAE,CAAF,IAAO2C,EAAE,CAAF,CAAR,EAAc,CAAC3F,KAAK0B,KAAL,CAAW,CAACsB,EAAE,CAAF,IAAO2C,EAAE,CAAF,CAAR,IAAgB,CAAhB,GAAoB,EAA/B,CAAf,CADJ,GAEI,CAAC3C,EAAE,CAAF,IAAO2C,EAAE,CAAF,CAAR,EAAc3C,EAAE,CAAF,IAAO2C,EAAE,CAAF,CAArB,CAHN;AAIA,SAAO,0BAAOc,UAAU9B,CAAV,CAAP,CAAP;AACD;;AAED;;;;;;;;;;;;AAYO,SAAST,SAAT,CAAmBjD,IAAnB,EAAyBsF,EAAzB,EAA6B;AAClC,MAAIhL,UAAUT,MAAV,KAAqB,CAAzB,EAA4B;AAAE,WAAO,UAAUkI,CAAV,EAAa;AAAE,aAAOkB,UAAUjD,IAAV,EAAgB+B,CAAhB,CAAP;AAA4B,KAAlD;AAAqD;AACnF,MAAI2C,IAAI,sBAAU1E,IAAV,CAAR;AACA,MAAI+B,IAAI,sBAAUuD,EAAV,CAAR;AACA,SAAOZ,EAAE1G,IAAF,KAAW,IAAX,IAAmB+D,EAAE/D,IAAF,KAAW,IAA9B,GACH+D,EAAE/D,IAAF,GAAS0G,EAAE1G,IADR,GAEH0G,EAAE3G,MAAF,KAAa,IAAb,IAAqBgE,EAAEhE,MAAF,KAAa,IAAlC,GACE,CAACgE,EAAEhE,MAAF,GAAW2G,EAAE3G,MAAb,GAAsB,EAAvB,IAA6B,EAD/B,GAEE,IAJN;AAKD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QC3NeA,SAAAA;QAiBA8H,UAAAA;QAqBAC,QAAAA;QAoBAC,WAAAA;QAYAC,YAAAA;QAkBAC,UAAAA;QAmBAC,aAAAA;QAqBAC,eAAAA;QAkBAC,WAAAA;QAmBAzJ,SAAAA;;AAzLhB;;AACA;;AACA;;AAEA,IAAI0J,MAAM,UAAUnJ,GAAV,EAAe;AAAE,SAAO,uBAAQA,GAAR,KAAgB,2BAAOA,GAAP,CAAhB,IAA+B,CAAtC;AAA0C,CAArE,EA3BA;;;;;;;;;;;;;;;;;;;;;;;;AA4BA,IAAIoJ,WAAW,UAAUC,GAAV,EAAe;AAAE,SAAOC,SAASzI,OAAOwI,GAAP,CAAT,EAAsB,CAAtB,CAAP;AAAkC,CAAlE;AACA,IAAIE,OAAO,UAAU1I,MAAV,EAAkB;AAAE,SAAOA,OAAOT,OAAP,CAAe,IAAf,EAAqB,EAArB,EAAyBzD,MAAhC;AAAyC,CAAxE;;AAEA;;;;;;;;;;;;AAYO,SAASkE,MAAT,CAAgBwI,GAAhB,EAAqB;AAC1B,MAAIR,SAASQ,GAAT,CAAJ,EAAmB;AAAE,WAAOA,GAAP;AAAa;AAClC,MAAI,CAAClM,MAAMqM,OAAN,CAAcH,GAAd,CAAL,EAAyB;AAAE,WAAO,EAAP;AAAY;AACvC,MAAIpF,IAAI,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+B,CAA/B,EAAkC,CAAlC,CAAR;AACAoF,MAAI5E,GAAJ,CAAQ0E,GAAR,EAAaM,OAAb,CAAqB,UAAUpM,CAAV,EAAa;AAChC4G,MAAE5G,CAAF,IAAO,CAAP;AACD,GAFD;AAGA,SAAO4G,EAAExB,IAAF,CAAO,EAAP,CAAP;AACD;;AAED,IAAIiH,MAAM,IAAV;AACA;;;;;;AAMO,SAASf,OAAT,CAAiBjJ,CAAjB,EAAoB;AACzBgK,QAAMA,OAAO,uBAAM,IAAN,EAAY,IAAZ,EAAkBjF,GAAlB,CAAsB,UAAU/E,CAAV,EAAa;AAAE,WAAOA,EAAEiK,QAAF,CAAW,CAAX,CAAP;AAAuB,GAA5D,CAAb;AACA,SAAO,OAAOjK,CAAP,KAAa,QAAb,GACHgK,IAAIjK,MAAJ,CAAW,UAAUoB,MAAV,EAAkB;AAAE,WAAO0I,KAAK1I,MAAL,MAAiBnB,CAAxB;AAA4B,GAA3D,CADG,GAEHgK,IAAIlK,KAAJ,EAFJ;AAGD;;AAED;;;;;;;;;;;;;;AAcO,SAASoJ,KAAT,CAAeS,GAAf,EAAoBO,SAApB,EAA+B;AACpCA,cAAYA,cAAc,KAA1B;AACA,MAAIC,SAAShJ,OAAOwI,GAAP,EAAYhK,KAAZ,CAAkB,EAAlB,CAAb;AACA,SAAO,yBACLwK,OAAOpF,GAAP,CAAW,UAASqF,CAAT,EAAYzM,CAAZ,EAAe;AACxB,QAAI0M,IAAI,wBAAO1M,CAAP,EAAUwM,MAAV,CAAR;AACA,WAAOD,aAAaG,EAAE,CAAF,MAAS,GAAtB,GAA4B,IAA5B,GAAmCA,EAAEtH,IAAF,CAAO,EAAP,CAA1C;AACD,GAHD,CADK,CAAP;AAMD;;AAED,IAAI1C,QAAQ,YAAZ;AACA;;;;;;;;AAQO,SAAS8I,QAAT,CAAkBQ,GAAlB,EAAuB;AAC5B,SAAOtJ,MAAMmG,IAAN,CAAWmD,GAAX,CAAP;AACD;;AAED,IAAIW,OAAO,sCAAsC3K,KAAtC,CAA4C,GAA5C,CAAX;AACA;;;;;;;AAOO,SAASyJ,SAAT,CAAmBO,GAAnB,EAAwB;AAC7B,MAAI,CAACR,SAASQ,GAAT,CAAL,EAAoB;AAAE,WAAO,EAAP;AAAY;AAClC,SAAO,yBACLA,IAAIhK,KAAJ,CAAU,EAAV,EAAcoF,GAAd,CAAkB,UAAS+B,CAAT,EAAYnJ,CAAZ,EAAe;AAC/B,WAAOmJ,MAAM,GAAN,GAAYwD,KAAK3M,CAAL,CAAZ,GAAsB,IAA7B;AACD,GAFD,CADK,CAAP;AAKD;;AAED;;;;;;;;;AASO,SAAS0L,OAAT,CAAiBkB,EAAjB,EAAqBC,EAArB,EAAyB;AAC9B,MAAI9M,UAAUT,MAAV,KAAqB,CAAzB,EAA4B;AAAE,WAAO,UAAU6F,CAAV,EAAa;AAAE,aAAOuG,QAAQkB,EAAR,EAAYzH,CAAZ,CAAP;AAAwB,KAA9C;AAAiD;AAC/E,SAAO3B,OAAOoJ,EAAP,MAAepJ,OAAOqJ,EAAP,CAAtB;AACD;;AAED;;;;;;;;;;;;;;AAcO,SAASlB,UAAT,CAAoBK,GAApB,EAAyBc,KAAzB,EAAgC;AACrC,MAAI/M,UAAUT,MAAV,GAAmB,CAAvB,EAA0B;AAAE,WAAOqM,WAAWK,GAAX,EAAgBc,KAAhB,CAAP;AAAgC;AAC5Dd,QAAMD,SAASC,GAAT,CAAN;AACA,SAAO,UAASc,KAAT,EAAgB;AACrBA,YAAQf,SAASe,KAAT,CAAR;AACA,WAAOA,UAAUd,GAAV,IAAiB,CAACc,QAAQd,GAAT,MAAkBc,KAA1C;AACD,GAHD;AAID;;AAED;;;;;;;;;;;;AAYO,SAASlB,YAAT,CAAsBI,GAAtB,EAA2Bc,KAA3B,EAAkC;AACvC,MAAI/M,UAAUT,MAAV,GAAmB,CAAvB,EAA0B;AAAE,WAAOsM,aAAaI,GAAb,EAAkBc,KAAlB,CAAP;AAAkC;AAC9Dd,QAAMD,SAASC,GAAT,CAAN;AACA,SAAO,UAASc,KAAT,EAAgB;AACrBA,YAAQf,SAASe,KAAT,CAAR;AACA,WAAOA,UAAUd,GAAV,IAAiB,CAACc,QAAQd,GAAT,MAAkBc,KAA1C;AACD,GAHD;AAID;;AAED;;;;;;;;;AASO,SAASjB,QAAT,CAAkBG,GAAlB,EAAuB1H,IAAvB,EAA6B;AAClC,MAAIvE,UAAUT,MAAV,GAAmB,CAAvB,EAA0B;AAAE,WAAOuM,SAASG,GAAT,EAAc1H,IAAd,CAAP;AAA6B;AACzD0H,QAAMxI,OAAOwI,GAAP,CAAN;AACA,SAAO,UAAS1H,IAAT,EAAe;AACpB,WAAO0H,IAAIF,IAAIxH,IAAJ,CAAJ,MAAmB,GAA1B;AACD,GAFD;AAGD;;AAED;;;;;;;;;;;AAWO,SAASlC,MAAT,CAAgB4J,GAAhB,EAAqBc,KAArB,EAA4B;AACjC,MAAI/M,UAAUT,MAAV,KAAqB,CAAzB,EAA4B;AAAE,WAAO,UAAU+C,CAAV,EAAa;AAAE,aAAOD,OAAO4J,GAAP,EAAY3J,CAAZ,CAAP;AAAwB,KAA9C;AAAiD;AAC/E,SAAOyK,MAAM1K,MAAN,CAAayJ,SAASG,GAAT,CAAb,CAAP;AACD;;;;;;;;;ACjMD;;;;AACA;;;;AACA;;;;AAEO,IAAIe,kCAAa,UAAUC,GAAV,EAAe;AACrC,MAAIC,OAAOhK,OAAOgK,IAAP,CAAYD,GAAZ,EAAiBvG,IAAjB,EAAX;AACA,MAAIyG,OAAO,EAAX;AACA,MAAIC,QAAQ,EAAZ;;AAEA,MAAIrD,MAAM,UAAUvI,IAAV,EAAgB6L,IAAhB,EAAsB5J,MAAtB,EAA8B;AACtC0J,SAAK3L,IAAL,IAAa6L,IAAb;AACAD,UAAM3J,MAAN,IAAgB2J,MAAM3J,MAAN,KAAiB,EAAjC;AACA2J,UAAM3J,MAAN,EAAcvD,IAAd,CAAmBsB,IAAnB;AACD,GAJD;;AAMA0L,OAAKb,OAAL,CAAa,UAAUiB,GAAV,EAAe;AAC1B,QAAID,OAAOJ,IAAIK,GAAJ,EAAS,CAAT,EAAYrL,KAAZ,CAAkB,GAAlB,CAAX;AACA,QAAIsL,QAAQN,IAAIK,GAAJ,EAAS,CAAT,CAAZ;AACA,QAAIvB,MAAM,wBAAOsB,IAAP,CAAV;;AAEAtD,QAAIuD,GAAJ,EAASD,IAAT,EAAetB,GAAf;AACA,QAAIwB,KAAJ,EAAW;AAAEA,YAAMlB,OAAN,CAAc,UAAUvF,CAAV,EAAa;AAAE,eAAOiD,IAAIjD,CAAJ,EAAOuG,IAAP,EAAatB,GAAb,CAAP;AAA2B,OAAxD;AAA4D;AAC1E,GAPD;AAQA,MAAIyB,UAAUtK,OAAOgK,IAAP,CAAYC,IAAZ,EAAkBzG,IAAlB,EAAd;;AAEA,MAAI+G,OAAO,UAAUjM,IAAV,EAAgB;AAAE,WAAO2L,KAAK3L,IAAL,CAAP;AAAoB,GAAjD;AACAiM,OAAKvL,KAAL,GAAa,UAAU8B,CAAV,EAAa;AACxB,QAAI,OAAOA,CAAP,KAAa,QAAjB,EAA2B;AAAE,aAAO,CAACoJ,MAAMpJ,CAAN,KAAY,EAAb,EAAiB5B,KAAjB,EAAP;AAAkC,KAA/D,MACK;AAAE,aAAO,CAAC4B,MAAM,IAAN,GAAawJ,OAAb,GAAuBN,IAAxB,EAA8B9K,KAA9B,EAAP;AAA+C;AACvD,GAHD;AAIA,SAAOqL,IAAP;AACD,CA3BM,EAtBP;;;;;;;;;;;;;;;;;;AAmDO,IAAIC,4BAAU,UAAU5G,CAAV,EAAaD,CAAb,EAAgB;AACnC,MAAI4G,OAAO,UAAUjM,IAAV,EAAgB;AAAE,WAAOsF,EAAEtF,IAAF,KAAWqF,EAAErF,IAAF,CAAlB;AAA4B,GAAzD;AACAiM,OAAKvL,KAAL,GAAa,UAAU8B,CAAV,EAAa;AAAE,WAAO8C,EAAE5E,KAAF,CAAQ8B,CAAR,EAAWxE,MAAX,CAAkBqH,EAAE3E,KAAF,CAAQ8B,CAAR,CAAlB,CAAP;AAAuC,GAAnE;AACA,SAAOyJ,IAAP;AACD,CAJM;;AAMP;;;;;;;;;;;;AAYO,IAAIE,wBAAQX,WAAWY,gBAAX,CAAZ;;AAEP;;;;;;;;;;;;AAYO,IAAIC,wBAAQb,WAAWc,gBAAX,CAAZ;AACA,IAAIC,wBAAQL,QAAQC,KAAR,EAAeE,KAAf,CAAZ;;;;;;;;QC2BSd,QAAAA;QAaAiB,SAAAA;QAqBAlM,WAAAA;;AA/HhB;;AACA;;AAMA;;AACA;;AACA;;AAEA,IAAImM,WAAW/K,OAAOC,MAAP,CAAc;AAC3B3B,QAAM,IADqB;AAE3BkK,aAAW,EAFgB;AAG3BxJ,SAAO,EAHoB;AAI3BuB,UAAQ,IAJmB;AAK3ByK,UAAQ;AALmB,CAAd,CAAf,EA7BA;;;;;;;;;;;;;;;;;;;;AAqCA,IAAIrK,aAAa,UAAUrC,IAAV,EAAgB;AAC/B,MAAIkK,YAAY,4BAAMlK,IAAN,CAAhB;AACA,MAAI,CAACkK,SAAL,EAAgB;AAAE,WAAOuC,QAAP;AAAkB;AACpC,MAAI7I,IAAI,EAAEsG,WAAWA,SAAb,EAAwBlK,MAAMA,IAA9B,EAAR;AACA4D,IAAE3B,MAAF,GAAW,wBAAOiI,SAAP,CAAX;AACAtG,IAAE8I,MAAF,GAAWhC,SAAS9G,EAAE3B,MAAX,EAAmB,CAAnB,CAAX;AACA2B,IAAElD,KAAF,GAAUyL,uBAAMzL,KAAN,CAAYkD,EAAE3B,MAAd,CAAV;AACA,SAAOP,OAAOC,MAAP,CAAciC,CAAd,CAAP;AACD,CARD;;AAUA,IAAI+I,UAAU,UAAU/J,EAAV,EAAcC,KAAd,EAAqB;AAAE,SAAO,UAAUzB,GAAV,EAAe;AAAE,WAAOyB,MAAMzB,GAAN,MAAeyB,MAAMzB,GAAN,IAAawB,GAAGxB,GAAH,CAA5B,CAAP;AAA8C,GAAtE;AAAyE,CAA9G;;AAEA;;;;;;;;;;;;AAYO,IAAI0B,wBAAQ6J,QAAQtK,UAAR,EAAoB,EAApB,CAAZ;;AAEP;;;;;;;;;;AAUO,IAAI3B,wBAAQyL,uBAAMzL,KAAlB;;AAEP;;;;;;;;;;;;;AAaO,IAAIwJ,gCAAY,UAAUlK,IAAV,EAAgB;AACrC,MAAIwC,IAAIlC,SAASN,IAAT,CAAR;AACA,SAAO8C,MAAMN,EAAE,CAAF,CAAN,EAAY0H,SAAnB;AACD,CAHM;;AAKP;;;;;;;;;;;;;;;;;;AAkBO,SAASqB,KAAT,CAAeqB,WAAf,EAA4B5M,IAA5B,EAAkC;AACvC,MAAIwC,IAAIlC,SAASsM,WAAT,CAAR;AACA5M,SAAOA,QAAQwC,EAAE,CAAF,CAAf;AACA,SAAO0H,UAAUlK,IAAV,EAAgB6F,GAAhB,CAAoB,8BAAUrD,EAAE,CAAF,CAAV,CAApB,CAAP;AACD;;AAED;;;;;;;AAOO,SAASgK,MAAT,CAAgBxM,IAAhB,EAAsB;AAC3B,MAAIwC,IAAIlC,SAASN,IAAT,CAAR;AACA,SAAO,4BAAMwC,EAAE,CAAF,CAAN,MAAgBmF,SAAvB;AACD;;AAED;;;;;;;;;;;;;;;;AAgBO,SAASrH,QAAT,CAAkBc,GAAlB,EAAuB;AAC5B,MAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;AAAE,WAAO,CAAC,EAAD,EAAK,EAAL,CAAP;AAAkB;AACjD,MAAI3C,IAAI2C,IAAIJ,OAAJ,CAAY,GAAZ,CAAR;AACA,MAAI6L,QAAQ,qBAASzL,IAAI0L,SAAJ,CAAc,CAAd,EAAiBrO,CAAjB,CAAT,KAAiC,qBAAS2C,GAAT,CAAjC,IAAkD,EAA9D;AACA,MAAIpB,OAAO6M,UAAU,EAAV,GAAezL,IAAI0L,SAAJ,CAAcD,MAAM9O,MAAN,GAAe,CAA7B,CAAf,GAAiDqD,GAA5D;AACA,SAAO,CAACyL,KAAD,EAAQ7M,KAAKjC,MAAL,GAAciC,IAAd,GAAqB,EAA7B,CAAP;AACD;;AAED;;;;;;AAMO,IAAI+M,gCAAY,UAAU/M,IAAV,EAAgB;AACrC,MAAI6L,OAAO3B,UAAUlK,IAAV,CAAX;AACA,MAAIgN,SAASzB,MAAMvL,IAAN,CAAb;;AAEA,SAAO,uBAAW6L,IAAX,EACJhG,GADI,CACA,UAAU5D,MAAV,EAAkBxD,CAAlB,EAAqB;AACxB,QAAIuB,OAAOmM,uBAAMzL,KAAN,CAAYuB,MAAZ,EAAoB,CAApB,CAAX;AACA,QAAIjC,IAAJ,EAAU;AAAE,aAAO,CAACgN,OAAOvO,CAAP,KAAaoN,KAAKpN,CAAL,CAAd,EAAuBuB,IAAvB,CAAP;AAAsC;AACnD,GAJI,EAKJa,MALI,CAKG,UAAUoM,CAAV,EAAa;AAAE,WAAOA,CAAP;AAAW,GAL7B,CAAP;AAMD,CAVM;;AAYP;;;;;;AAMO,IAAIC,0BAAS,UAAUlN,IAAV,EAAgB;AAClC,MAAImN,UAAU,4BAAWjD,UAAUlK,IAAV,CAAX,CAAd;AACA,SAAOqM,uBAAM3L,KAAN,GAAcG,MAAd,CAAqB,UAAUb,IAAV,EAAgB;AAAE,WAAOmN,QAAQ,4BAAMnN,IAAN,CAAR,CAAP;AAA8B,GAArE,CAAP;AACD,CAHM;;AAKP;;;;;;;;AAQO,IAAIoN,4BAAU,UAAU7B,KAAV,EAAiB;AACpC,MAAIgB,QAAQ,yBAAQhB,MAAM1F,GAAN,CAAUjE,aAAV,CAAR,CAAZ;AACA,MAAI,CAAC2K,MAAMxO,MAAX,EAAmB;AAAE,WAAOwO,KAAP;AAAe;AACpC,MAAIM,QAAQN,MAAM,CAAN,CAAZ;AACA,MAAIJ,QAAQ,wBAAOI,KAAP,CAAZ;AACA,SAAO,wBAAOJ,MAAMnL,OAAN,CAAc6L,KAAd,CAAP,EAA6BV,KAA7B,CAAP;AACD,CANM;;AAQP;;;;;;;;AAQO,IAAIkB,gCAAY,UAAUrN,IAAV,EAAgB;AACrC,MAAI,CAACkK,UAAUlK,IAAV,EAAgBjC,MAArB,EAA6B;AAAE,WAAO,EAAP;AAAY;AAC3C,MAAIuP,aAAa,8BAAapD,UAAUlK,IAAV,CAAb,CAAjB;AACA,SAAOmM,uBAAMzL,KAAN,GAAcG,MAAd,CAAqB,UAAUb,IAAV,EAAgB;AAAE,WAAOsN,WAAW,4BAAMtN,IAAN,CAAX,CAAP;AAAiC,GAAxE,CAAP;AACD,CAJM;;AAMP;;;;;;;;AAQO,IAAIuN,4BAAU,UAAUvN,IAAV,EAAgB;AACnC,MAAIwN,WAAW,4BAAWtD,UAAUlK,IAAV,CAAX,CAAf;AACA,SAAOmM,uBAAMzL,KAAN,GAAcG,MAAd,CAAqB,UAAUb,IAAV,EAAgB;AAAE,WAAOwN,SAAS,4BAAMxN,IAAN,CAAT,CAAP;AAA+B,GAAtE,CAAP;AACD,CAHM;;;;;;;;QCxHSuL,QAAAA;QAiEAjL,WAAAA;;AAlJhB;;AACA;;AACA;;AACA;;AAEA;;;;;;;;;;AAxBA;;;;;;;;;;;;;;;;;;;AAkCO,IAAII,wBAAQ2L,uBAAM3L,KAAlB;;AAEP,IAAI+M,WAAW/L,OAAOC,MAAP,CAAc;AAC3B3B,QAAM,IADqB;AAE3BU,SAAO,EAFoB;AAG3BwJ,aAAW,EAHgB;AAI3BjI,UAAQ,IAJmB;AAK3ByK,UAAQ;AALmB,CAAd,CAAf;;AAQA,IAAIrK,aAAa,UAAUrC,IAAV,EAAgB;AAC/B,MAAIkK,YAAY,4BAAMlK,IAAN,CAAhB;AACA,MAAI,CAACkK,SAAL,EAAgB;AAAE,WAAOuD,QAAP;AAAkB;AACpC,MAAI7J,IAAI,EAAEsG,WAAWA,SAAb,EAAwBlK,MAAMA,IAA9B,EAAR;AACA4D,IAAE3B,MAAF,GAAW,wBAAOiI,SAAP,CAAX;AACAtG,IAAE8I,MAAF,GAAWhC,SAAS9G,EAAE3B,MAAX,EAAmB,CAAnB,CAAX;AACA2B,IAAElD,KAAF,GAAU2L,uBAAM3L,KAAN,CAAYkD,EAAE3B,MAAd,CAAV;AACA,SAAO2B,CAAP;AACD,CARD;;AAUA,IAAIjB,OAAO,UAAUC,EAAV,EAAcC,KAAd,EAAqB;AAC9B,MAAKA,UAAU,KAAK,CAApB,EAAwBA,QAAQ,EAAR;;AAExB,SAAO,UAAUzB,GAAV,EAAe;AAAE,WAAOyB,MAAMzB,GAAN,MAAeyB,MAAMzB,GAAN,IAAawB,GAAGxB,GAAH,CAA5B,CAAP;AAA8C,GAAtE;AACD,CAJD;;AAMA;;;;;;;;;;;;;;AAcO,IAAI0B,wBAAQH,KAAKN,UAAL,CAAZ;;AAEP;;;;;;;AAOO,IAAI6H,gCAAY,UAAUlK,IAAV,EAAgB;AAAE,SAAO8C,MAAMxC,SAASN,IAAT,EAAe,CAAf,CAAN,EAAyBkK,SAAhC;AAA4C,CAA9E;;AAEP;;;;;;;;;;;;;;;AAeO,SAASqB,KAAT,CAAeqB,WAAf,EAA4B5M,IAA5B,EAAkC;AACvC,MAAIwC,IAAIlC,SAASsM,WAAT,CAAR;AACA5M,SAAOA,QAAQwC,EAAE,CAAF,CAAf;AACA,SAAOM,MAAM9C,IAAN,EAAYkK,SAAZ,CAAsBrE,GAAtB,CAA0B,8BAAUrD,EAAE,CAAF,CAAV,CAA1B,CAAP;AACD;;AAED;;;;;;;;;;;AAWO,IAAIgK,0BAAS,UAAUxM,IAAV,EAAgB;AAAE,SAAO,4BAAMM,SAASN,IAAT,EAAe,CAAf,CAAN,MAA6B2H,SAApC;AAAgD,CAA/E;;AAEP;;;;;;;;AAQO,IAAI0F,gCAAY,UAAUrN,IAAV,EAAgB;AACrC,MAAI,CAACkK,UAAUlK,IAAV,EAAgBjC,MAArB,EAA6B;AAAE,WAAO,EAAP;AAAY;AAC3C,MAAIuP,aAAa,8BAAapD,UAAUlK,IAAV,CAAb,CAAjB;AACA,SAAOqM,uBAAM3L,KAAN,GAAcG,MAAd,CAAqB,UAAUb,IAAV,EAAgB;AAAE,WAAOsN,WAAW,4BAAMtN,IAAN,CAAX,CAAP;AAAiC,GAAxE,CAAP;AACD,CAJM;;AAMP;;;;;;;;AAQO,IAAIuN,4BAAU,UAAUvN,IAAV,EAAgB;AACnC,MAAIwN,WAAW,4BAAWtD,UAAUlK,IAAV,CAAX,CAAf;AACA,SAAOqM,uBAAM3L,KAAN,GAAcG,MAAd,CAAqB,UAAUb,IAAV,EAAgB;AAAE,WAAOwN,SAAS,4BAAMxN,IAAN,CAAT,CAAP;AAA+B,GAAtE,CAAP;AACD,CAHM;;AAKP;AACA;AACA,IAAI0N,YAAY,oBAAhB;AACA;;;;;;;;;;;;;;;;AAgBO,SAASpN,QAAT,CAAkBN,IAAlB,EAAwB;AAC7B,MAAIwC,IAAI,yBAAMxC,IAAN,CAAR;AACA,MAAIwC,EAAE,CAAF,MAAS,EAAb,EAAiB;AAAE,WAAO,CAAC,EAAD,EAAKxC,IAAL,CAAP;AAAoB;AACvC;AACA,MAAIwC,EAAE,CAAF,MAAS,GAAT,IAAgBA,EAAE,CAAF,MAAS,IAA7B,EAAmC;AAAE,WAAO,CAAC,EAAD,EAAK,KAAL,CAAP;AAAqB;;AAE1D,MAAIkL,UAAUpG,IAAV,CAAe9E,EAAE,CAAF,CAAf,CAAJ,EAA0B;AACxB,WAAO,CAACA,EAAE,CAAF,IAAOA,EAAE,CAAF,CAAR,EAAcA,EAAE,CAAF,IAAOA,EAAE,CAAF,CAArB,CAAP;AACD,GAFD,MAEO;AACL,WAAO,CAACA,EAAE,CAAF,IAAOA,EAAE,CAAF,CAAP,GAAcA,EAAE,CAAF,CAAf,EAAqBA,EAAE,CAAF,CAArB,CAAP;AACD;AACF;;;;;;;;;AC9ID;;IAAYjE;;AACZ;;IAAYoP;;AACZ;;IAAYC;;AACZ;;IAAYC;;AACZ;;IAAYC;;AACZ;;IAAYC;;AACZ;;IAAYC;;AACZ;;IAAYC;;;;AAzCZ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QA2CS1P,QAAAA;QAAOoP,OAAAA;QAAMC,WAAAA;QAAUC,WAAAA;QAAUE,QAAAA;QAAOC,QAAAA;QAAOC,QAAAA;QAAOH,aAAAA;;AAE/D;;;;;;;;;AAQO,MAAM5F,gCAAY2F,SAAS3F,SAA3B;;AAEP;;;;;;;;AAQO,MAAMO,8BAAWoF,SAASpF,QAA1B;;AAEP;;;;;;;;;AASO,MAAM1F,sBAAO4K,KAAK7K,KAAlB;;AAEP;;;;;;;;;AASO,MAAMZ,sBAAOyL,KAAKzL,IAAlB;;AAEP;;;;;;;;;AASO,MAAMC,sBAAOwL,KAAKxL,IAAlB;;AAEP;;;;;;;;;AASO,MAAMkK,wBAAQyB,WAAWzB,KAAzB;;AAEP;;;;;;;;AAQO,MAAMF,wBAAQ2B,WAAW3B,KAAzB;;;;;ACrHP,IAAA,SAAA,QAAA,SAAA,CAAA;AAEA,IAAA,aAAA,aAAA,YAAA;AASI,aAAA,UAAA,CAAY,EAAZ,EAAwE;YAA5D,KAAA,OAAA,KAAA,CAAA,GAAA,EAAA,GAAA;YAAE,UAAA,GAAA;YAAS,OAAA,GAAA;YAAM,MAAA,GAAA;YAAK,SAAA,GAAA;YAAQ,SAAA,GAAA;YAAQ,aAAA,GAAA;AARlD,aAAA,UAAA,GAAa,CAAb;AAIA,aAAA,IAAA,GAAO,CAAP;AAKI,aAAK,MAAL,GAAc,MAAd;AACA,aAAK,UAAL,GAAkB,cAAc,KAAK,UAArC;AACA,aAAK,MAAL,GAAc,MAAd;AACA,aAAK,IAAL,GAAY,QAAQ,KAAK,IAAzB;AACA,aAAK,IAAL,CAAU,EAAE,SAAO,OAAT,EAAW,KAAG,GAAd,EAAV;AACH;AAED,eAAA,SAAA,CAAA,IAAA,GAAA,UAAK,EAAL,EAAqB;YAAd,UAAA,GAAA;YAAS,MAAA,GAAA;AACZ,YAAI,CAAC,OAAD,KAAa,CAAC,GAAD,IAAQ,CAAC,IAAI,OAA1B,CAAJ,EAAwC;AACpC,oBAAQ,IAAR,CAAa,0JAAb;AAEA;AACH;AACD,aAAK,OAAL,GAAe,WAAW,IAAI,OAA9B;AACA,aAAK,GAAL,GAAW,OAAO,KAAK,OAAL,CAAa,WAA/B;AACH,KARD;AAUA,eAAA,SAAA,CAAA,SAAA,GAAA,UAAU,KAAV,EAA2B,QAA3B,EAAmC;AAAnC,YAAA,QAAA,IAAA;AACI,aAAK,QAAL,CAAc,MAAM,GAAN,CAAU,UAAA,IAAA,EAAI;AAAI,mBAAA,OAAA,OAAA,CAAQ,IAAR,EAAc,MAAK,UAAnB,CAAA;AAA8B,SAAhD,CAAd,EAAiE,QAAjE;AACH,KAFD;AAIA,eAAA,SAAA,CAAA,QAAA,GAAA,UAAS,IAAT,EAAyB,QAAzB,EAAkC;AAC9B,YAAI,KAAK,MAAT,EAAiB;AACb,mBAAO,KAAK,MAAL,CAAY,IAAZ,CAAP;AACH;AACD;AACH,KALD;AAMJ,WAAA,UAAA;AArCA,CAAA,EAAA;AAAa,QAAA,UAAA,GAAA,UAAA;;;;;;;;;;;;;;;;;;;;;;;;ACFb,IAAA,eAAA,QAAA,cAAA,CAAA;AACA,IAAA,UAAA,QAAA,OAAA,CAAA;AACA,IAAA,SAAA,QAAA,SAAA,CAAA;AAEA,IAAA,cAAA,aAAA,UAAA,MAAA,EAAA;AAAiC,cAAA,WAAA,EAAA,MAAA;AAS7B,aAAA,WAAA,CAAY,KAAZ,EAAsB;AAAtB,YAAA,QACI,OAAA,IAAA,CAAA,IAAA,EAAM,KAAN,KAAY,IADhB;AARA,cAAA,QAAA,GAAW,GAAX;AACA,cAAA,IAAA,GAAO,MAAP;AACA,cAAA,IAAA,GAAO,GAAP;AACA,cAAA,MAAA,GAAS,GAAT;AACA,cAAA,KAAA,GAAQ,GAAR;AACA,cAAA,OAAA,GAAU,EAAV;AACA,cAAA,OAAA,GAAU,EAAV;AAII,cAAK,QAAL,GAAgB,MAAM,QAAN,IAAkB,MAAK,QAAvC;AACA,cAAK,IAAL,GAAY,MAAM,IAAN,IAAc,MAAK,IAA/B;AACA,cAAK,IAAL,GAAY,MAAM,IAAN,IAAc,MAAK,IAA/B;;AACH;AAED,gBAAA,SAAA,CAAA,IAAA,GAAA,UAAK,OAAL,EAAY;AACR,eAAA,SAAA,CAAM,IAAN,CAAU,IAAV,CAAU,IAAV,EAAW,OAAX;AACH,KAFD;AAIA,gBAAA,SAAA,CAAA,QAAA,GAAA,UAAS,IAAT,EAAwB,IAAxB,EAAkC,SAAlC,EAAiD;AAAxC,YAAA,SAAA,KAAA,CAAA,EAAA;AAAA,mBAAA,MAAA;AAAa;AAAE,YAAA,SAAA,KAAA,CAAA,EAAA;AAAA,mBAAA,CAAA;AAAQ;AAAE,YAAA,cAAA,KAAA,CAAA,EAAA;AAAA,wBAAA,GAAA;AAAe;AAC7C,YAAM,UAAU,KAAK,OAAL,CAAa,gBAAb,EAAhB;AACA,gBAAQ,IAAR,GAAe,IAAf;AACA,YAAM,WAAW,KAAK,OAAL,CAAa,UAAb,EAAjB;AACA,gBAAQ,OAAR,CAAgB,QAAhB;AACA,iBAAS,IAAT,CAAc,KAAd,GAAsB,OAAO,IAAP,KAAgB,QAAhB,GAA2B,IAA3B,GAAkC,GAAxD;AACA,iBAAS,OAAT,CAAiB,KAAK,GAAtB;AACA,gBAAQ,SAAR,CAAkB,KAAlB,GAA0B,SAA1B;AACA,eAAO,EAAE,SAAO,OAAT,EAAW,UAAQ,QAAnB,EAAP;AACH,KATD;AAWA,gBAAA,SAAA,CAAA,UAAA,GAAA,UAAW,CAAX,EAAc,CAAd,EAAe;AACX,eAAO,EAAE,IAAF,CAAO,IAAP,CAAY,KAAZ,GAAoB,EAAE,IAAF,CAAO,IAAP,CAAY,KAAhC,GAAwC,CAAC,CAAzC,GAA6C,CAApD;AACH,KAFD;AAIA,gBAAA,SAAA,CAAA,QAAA,GAAA,UAAS,IAAT,EAAyB,QAAzB,EAA2C;AAA3C,YAAA,QAAA,IAAA;AAAyB,YAAA,aAAA,KAAA,CAAA,EAAA;AAAA,uBAAA,EAAA;AAAkB;AACvC,eAAA,SAAA,CAAM,QAAN,CAAc,IAAd,CAAc,IAAd,EAAe,IAAf,EAAqB,QAArB,EADuC,CACP;AAChC;AACA,YAAM,OAAO,SAAS,QAAT,IAAqB,KAAK,OAAL,CAAa,WAA/C;AACA,YAAM,WAAW,SAAS,QAAT,IAAqB,CAAtC;AACA,aAAK,GAAL,CAAS,UAAC,GAAD,EAAM,CAAN,EAAO;AACZ,gBAAM,QAAQ,IAAI,QAAlB;AACM,gBAAA,KAAA,gCAAA,+BAAA,mCAAA,mCAAA,8CAAA,mCAAA,CAAA;AAAA,gBAAC,SAAA,GAAA,CAAA,CAAD;AAAA,gBAAS,QAAA,GAAA,CAAA,CAAT;AAAA,gBAAgB,UAAA,GAAA,CAAA,CAAhB;AAAA,gBAAyB,UAAA,GAAA,CAAA,CAAzB;AAAA,gBAAkC,WAAA,GAAA,CAAA,CAAlC;AAAA,gBAA4C,OAAA,GAAA,CAAA,CAA5C;AASN,gBAAM,QAAQ,MAAK,QAAL,CAAc,MAAK,IAAnB,EAAyB,CAAzB,EAA4B,QAAA,IAAA,CAAK,IAAL,CAAU,GAAV,CAA5B,CAAd;AACA,mBAAA,IAAA,CAAK,EAAE,QAAM,MAAR,EAAU,OAAK,KAAf,EAAiB,SAAO,OAAxB,EAA0B,SAAO,OAAjC,EAAmC,MAAI,IAAvC,EAAyC,UAAQ,QAAjD,EAAL,EAA2D,OAAO,KAAlE,EAAyE,MAAM,QAAN,CAAe,IAAxF;AACA,kBAAM,OAAN,CAAc,KAAd,CAAoB,SAAS,QAAT,GAAoB,KAAxC;AACH,SAdD;AAeH,KApBD;AAqBJ,WAAA,WAAA;AAxDA,CAAA,CAAiC,aAAA,UAAjC,CAAA;AAAa,QAAA,WAAA,GAAA,WAAA;;;;;ACJb,IAAA,UAAA,QAAA,OAAA,CAAA;AACA,IAAA,gBAAA,QAAA,2BAAA,CAAA;AAEA,SAAgB,YAAhB,CAA6B,CAA7B,EAA8B;AAC1B,WAAO,KAAK,KAAL,CAAW,KAAK,MAAL,KAAgB,CAA3B,CAAP;AACH;AAFD,QAAA,YAAA,GAAA,YAAA;AAIA,SAAgB,QAAhB,CAAyB,KAAzB,EAA8B;AAC1B,WAAO,MAAM,MAAN,CAAa,UAAC,CAAD,EAAI,CAAJ,EAAK;AAAK,eAAA,IAAI,CAAJ;AAAK,KAA5B,EAA8B,CAA9B,CAAP;AACH;AAFD,QAAA,QAAA,GAAA,QAAA;AAIA,SAAgB,aAAhB,CAA8B,KAA9B,EAAqC,QAArC,EAA8C;AAC1C,QAAI,CAAC,QAAL,EAAe;AACX,eAAO,MAAM,aAAa,MAAM,MAAnB,CAAN,CAAP;AACH;AACD,QAAM,IAAI,aAAa,SAAS,QAAT,CAAb,IAAmC,CAA7C;AACA,QAAM,QAAQ,SACT,MADS,CACF,UAAC,GAAD,EAAM,CAAN,EAAS,CAAT,EAAU;AAAK,eAAA,IAAI,MAAJ,CAAW,KAAK,IAAI,MAAJ,GAAa,IAAI,IAAI,CAAR,CAAb,GAA0B,CAA/B,CAAX,CAAA;AAA6C,KAD1D,EAC4D,EAD5D,CAAd;AAEA,WAAO,MAAM,MAAM,OAAN,CAAc,MAAM,IAAN,CAAW,UAAC,CAAD,EAAI,CAAJ,EAAK;AAAK,eAAA,KAAK,CAAL;AAAM,KAA3B,CAAd,CAAN,CAAP;AACH;AARD,QAAA,aAAA,GAAA,aAAA;AAUA,SAAgB,aAAhB,CAA8B,KAA9B,EAAmC;AAC/B,YAAQ,MACH,OADG,CACK,GADL,EACU,GADV,EAEH,OAFG,CAEK,GAFL,EAEU,GAFV,EAGH,OAHG,CAGK,IAHL,EAGW,MAHX,EAIH,OAJG,CAIK,GAJL,EAIU,KAJV,CAAR;AAKA;;;;;;AAMA,QAAM,SAAS,QAAA,KAAA,CAAM,QAAN,CAAe,KAAf,CAAf;AACA,QAAM,IAAI,OAAO,CAAP,EAAU,KAAV,CAAgB,GAAhB,CAAV;AACA,WAAO,OAAO,CAAP,KAAa,EAAE,CAAF,KAAQ,GAArB,CAAP;AACH;AAfD,QAAA,aAAA,GAAA,aAAA;AAiBA,SAAgB,OAAhB,CAAwB,IAAxB,EAA8B,MAA9B,EAAoC;AAChC,WAAO,QAAA,IAAA,CAAK,KAAL,CAAW,IAAX,EAAiB,IAAjB,GAAwB,MAA/B;AACH;AAFD,QAAA,OAAA,GAAA,OAAA;AAIA;AACA,SAAgB,OAAhB,CAAwB,IAAxB,EAA8B,QAA9B,EAAwC,QAAxC,EAAqD;AAAb,QAAA,aAAA,KAAA,CAAA,EAAA;AAAA,mBAAA,EAAA;AAAa;AACjD,QAAI,CAAC,MAAM,OAAN,CAAc,SAAS,KAAK,CAAL,CAAT,CAAd,CAAD,IAAqC,KAAK,MAAL,KAAgB,CAAzD,EAA4D;AACxD,eAAO,SAAS,KAAK,GAAL,CAAS,KAAK,CAAL,CAAT,EAAkB,SAAS,MAAT,GAAkB,CAApC,CAAT,CAAP;AACH;AACD,WAAO,KAAK,OAAL,CAAa,KAAK,KAAL,CAAW,CAAX,CAAb,EAA4B,SAAS,KAAK,CAAL,CAAT,CAA5B,EAA+C,SAAS,MAAT,CAAgB,KAAK,CAAL,CAAhB,CAA/C,CAAP;AACH;AALD,QAAA,OAAA,GAAA,OAAA;AAOA,SAAgB,aAAhB,CAA8B,OAA9B,EAAuC,QAAvC,EAAiD,IAAjD,EAAuD,SAAvD,EAAqE;AAArE,QAAA,QAAA,IAAA;AAAuD,QAAA,cAAA,KAAA,CAAA,EAAA;AAAA,oBAAA,EAAA;AAAc;AACjE,QAAI,MAAM,OAAN,CAAc,OAAd,CAAJ,EAA4B;AACxB;AACA,oBAAY,GAAG,MAAH,CAAU,SAAV,EAAqB,CAAC,QAAQ,MAAT,CAArB,CAAZ;AACA,eAAO,QAAQ,GAAR,CAAY,UAAC,CAAD,EAAI,CAAJ,EAAK;AAAK,mBAAA,MAAK,aAAL,CAAmB,CAAnB,EAAsB,QAAtB,EAAgC,KAAK,MAAL,CAAY,CAAC,CAAD,CAAZ,CAAhC,EAAkD,SAAlD,CAAA;AAA4D,SAAlF,CAAP;AACH;AACD,QAAI,YAAY,CAAhB,EAAmB;AACf,eAAO,CAAP;AACH;AACD;AACA;AACA;AACA,QAAM,WAAW,UAAU,UAAU,MAAV,CAAiB,UAAC,CAAD,EAAI,CAAJ,EAAK;AAAK,eAAA,IAAI,CAAJ;AAAK,KAAhC,EAAkC,IAAlC,CAA3B,CAZiE,CAYG;AACpE,QAAI,aAAa,CAAjB,EAAoB;AAChB,gBAAQ,IAAR,CAAa,eAAb,EAA8B,OAA9B;AACH;AACD,WAAO,EAAE,OAAO,KAAK,OAAL,CAAa,IAAb,EAAmB,QAAnB,CAAT,EAAuC,SAAO,OAA9C,EAAgD,WAAY,MAAI,IAAhE,EAAkE,WAAS,SAA3E,EAA6E,UAAQ,QAArF,EAAP;AACH;AAjBD,QAAA,aAAA,GAAA,aAAA;AAmBA,SAAgB,MAAhB,CAAuB,OAAvB,EAAgC,QAAhC,EAA4C;AAAZ,QAAA,aAAA,KAAA,CAAA,EAAA;AAAA,mBAAA,CAAA;AAAY;AACxC,WAAO,MAAM,OAAN,CAAc,OAAd,KAA0B,QAAQ,MAAR,KAAmB,QAA7C,IAAyD,QAAQ,WAAW,CAAnB,MAA0B,CAA1F;AACH;AAFD,QAAA,MAAA,GAAA,MAAA;AAIA;AACA,SAAgB,cAAhB,CAA+B,QAA/B,EAAuC;AAAvC,QAAA,QAAA,IAAA;AACI;AACA,WAAO,UAAC,QAAD,EAAW,GAAX,EAAgB,KAAhB,EAAqB;AACxB,YAAM,OAAO,QAAQ,CAAR,GAAY,SAAS,QAAQ,CAAjB,CAAZ,GAAkC,IAA/C;AACA,YAAI,QAAQ,MAAK,MAAL,CAAY,KAAK,SAAS,KAAT,GAAiB,CAAtB,CAAZ,EAAsC,SAAS,QAA/C,CAAZ,EAAsE;AAClE,iBAAK,SAAS,KAAT,GAAiB,CAAtB,EAAyB,SAAS,QAAT,GAAoB,CAA7C,IAAkD,IAAI,CAAJ,CAAlD;AACA,gBAAI,CAAJ,IAAS,CAAT;AACH;AACD,eAAO,SAAS,MAAT,CAAgB,CAAC,GAAD,CAAhB,CAAP;AACH,KAPD;AAQH;AAVD,QAAA,cAAA,GAAA,cAAA;AAYA,SAAgB,cAAhB,CAA+B,QAA/B,EAAuC;AACnC,QAAI,QAAA,QAAA,CAAS,SAAT,CAAmB,QAAnB,IAA+B,CAAnC,EAAsC;AAClC,eAAO,QAAA,QAAA,CAAS,MAAT,CAAgB,SAAS,KAAT,CAAe,CAAf,CAAhB,CAAP;AACH;AACD,WAAO,MAAM,QAAA,QAAA,CAAS,MAAT,CAAgB,QAAhB,CAAb;AACH;AALD,QAAA,cAAA,GAAA,cAAA;AAOA;AACA,SAAgB,gBAAhB,CAAiC,QAAjC,EAAyC;AACrC,eAAW,QAAA,QAAA,CAAS,QAAT,CAAkB,QAAlB,CAAX;AACA,QAAI,aAAa,IAAjB,EAAuB;AACnB,mBAAW,IAAX,CADmB,CACF;AACpB;AACD,QAAI,YAAY,KAAK,cAAL,CAAoB,QAApB,CAAhB;AACA,QAAI,KAAK,GAAL,CAAS,QAAA,QAAA,CAAS,SAAT,CAAmB,SAAnB,CAAT,IAA0C,KAAK,GAAL,CAAS,QAAA,QAAA,CAAS,SAAT,CAAmB,QAAnB,CAAT,CAA9C,EAAsF;AAClF,eAAO,SAAP;AACH;AACD,WAAO,YAAY,EAAnB;AACH;AAVD,QAAA,gBAAA,GAAA,gBAAA;AAYA,SAAgB,WAAhB,CAA4B,CAA5B,EAA+B,CAA/B,EAAkC,mBAAlC,EAAqD;AACjD,QAAM,YAAY,CAAC,KAAK,GAAL,CAAS,QAAA,QAAA,CAAS,SAAT,CAAmB,CAAnB,CAAT,CAAD,EAAkC,KAAK,GAAL,CAAS,QAAA,QAAA,CAAS,SAAT,CAAmB,CAAnB,CAAT,CAAlC,CAAlB;AACA,QAAI,UAAU,CAAV,MAAiB,UAAU,CAAV,CAArB,EAAmC;AAC/B,YAAI,mBAAJ,EAAyB;AACrB,mBAAO,UAAU,CAAV,IAAe,CAAf,GAAmB,CAAC,CAApB,GAAwB,CAA/B;AACH;AACD,eAAO,UAAU,CAAV,IAAe,CAAf,GAAmB,CAAC,CAApB,GAAwB,CAA/B;AACH;AACD,WAAO,UAAU,CAAV,IAAe,UAAU,CAAV,CAAf,GAA8B,CAAC,CAA/B,GAAmC,CAA1C;AACH;AATD,QAAA,WAAA,GAAA,WAAA;AAWA,SAAgB,cAAhB,CAA+B,IAA/B,EAAqC,EAArC,EAAuC;AAAvC,QAAA,QAAA,IAAA;AACI,WAAO,GAAG,GAAH,CAAO,UAAA,IAAA,EAAI;AAAI,eAAA,KACjB,GADiB,CACb,UAAA,CAAA,EAAC;AACF,mBAAO,QAAA,QAAA,CAAS,QAAT,CAAkB,CAAlB,EAAqB,IAArB,CAAP;AACH,SAHiB,EAIjB,GAJiB,CAIb,UAAA,CAAA,EAAC;AAAI,mBAAA,MAAK,gBAAL,CAAsB,CAAtB,CAAA;AAAwB,SAJhB,EAKjB,GALiB,CAKb,UAAA,CAAA,EAAC;AAAI,mBAAA,EAAE,KAAF,CAAQ,CAAR,EAAW,CAAX,MAAkB,IAAlB,GAAyB,EAAE,KAAF,CAAQ,CAAR,CAAzB,GAAsC,CAAtC;AAAuC,SAL/B,CAAA;AAKgC,KAL/C,CAAP;AAOH;AARD,QAAA,cAAA,GAAA,cAAA;AAUA,SAAgB,WAAhB,CAA4B,GAA5B,EAAiC,OAAjC,EAAqF;AAApD,QAAA,YAAA,KAAA,CAAA,EAAA;AAAA,kBAAA,CAAW,MAAX,EAAmB,UAAnB,EAA+B,QAA/B,EAAyC,UAAzC,CAAA;AAAoD;AACjF,QAAM,QAAQ;AACV,cAAM,GADI;AAEV,kBAAU,GAFA;AAGV,gBAAQ,GAHE;AAIV,kBAAU;AAJA,KAAd;AAMA,QAAM,OAAO,cAAc,OAAd,CAAb;AACA,WAAO,IAAI,cAAA,WAAJ,CAAgB,EAAE,MAAM,MAAM,IAAN,CAAR,EAAqB,MAAM,IAA3B,EAAiC,KAAG,GAApC,EAAhB,CAAP;AACH;AATD,QAAA,WAAA,GAAA,WAAA;AAWA,SAAgB,IAAhB,CAAqB,EAArB,EAA0E,IAA1E,EAAgF,KAAhF,EAAqF;QAA9D,SAAA,GAAA;QAAQ,QAAA,GAAA;QAAO,UAAA,GAAA;QAAS,UAAA,GAAA;QAAS,OAAA,GAAA;QAAM,WAAA,GAAA;AAC1D;AACA,UAAM,uBAAN,CAA8B,IAA9B,EAAoC,OAAO,MAA3C;AACA,UAAM,eAAN,CAAsB,UAAU,IAAhC,EAAsC,OAAO,KAAK,GAAL,CAAS,SAAS,KAAlB,EAAyB,QAAzB,CAA7C,EAAiF,KAAjF;AACA,UAAM,eAAN,CAAsB,CAAtB,EAAyB,OAAO,KAAK,GAAL,CAAS,WAAW,MAAX,GAAoB,KAA7B,EAAoC,SAAS,KAA7C,EAAoD,QAApD,CAAhC,EAA+F,OAA/F;AACH;AALD,QAAA,IAAA,GAAA,IAAA;;;;;ACxIA,IAAA,WAAA,aAAA,YAAA;AAGI,aAAA,QAAA,CAAY,UAAZ,EAAsB;AAClB,YAAI,CAAC,UAAL,EAAiB;AACb,oBAAQ,IAAR,CAAa,4BAAb,EAA2C,IAA3C;AACH;AACD,aAAK,UAAL,GAAkB,UAAlB;AACA,aAAK,KAAL,GAAa,KAAK,UAAL,GAAkB,KAAK,UAAL,CAAgB,KAAlC,GAA0C,QAAQ,OAAR,EAAvD;AACH;AACD,aAAA,SAAA,CAAA,IAAA,GAAA,UAAK,EAAL,EAAkC;YAA3B,QAAA,GAAA;YAAO,WAAA,GAAA;YAAU,WAAA,GAAA;AACpB,gBAAQ,GAAR,CAAY,QAAZ,EAAsB,KAAtB,EAA6B,QAA7B,EAAuC,QAAvC;AACH,KAFD;AAGJ,WAAA,QAAA;AAbA,CAAA,EAAA;AAAa,QAAA,QAAA,GAAA,QAAA;;;;;ACFb,IAAA,SAAA,QAAA,SAAA,CAAA;AAEa,QAAA,KAAA,GAAQ;AACjB,YAAQ,gBAAC,EAAD,EAAsB;YAAnB,UAAA,GAAA;YAAS,WAAA,GAAA;AAChB,YAAM,MAAM,SAAN,GAAM,GAAA;AAAM,mBAAA,OAAA,aAAA,CAAc,CAAC,CAAD,EAAI,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAJ,CAAd,EAA8B,CAAC,CAAD,EAAI,CAAJ,CAA9B,CAAA;AAAqC,SAAvD;AACA,YAAM,IAAI,KAAK,MAAL,KAAgB,GAAhB,GAAsB,EAAtB,GAA2B,CAArC;AACA,YAAM,IAAO,SAAS,KAAT,GAAc,GAAd,GAAkB,QAAQ,MAAvC;AACA,YAAI,MAAM,KAAV,EAAiB;AACb,mBAAO,OAAA,aAAA,CAAc,CACjB,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,EAAS,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAT,EAAoB,CAApB,EAAuB,CAAvB,CADiB,EAEjB,CAAC,CAAD,EAAI,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAJ,EAAe,CAAf,EAAkB,KAAlB,CAFiB,EAGjB,CAAC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAD,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAHiB,EAIjB,CAAC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAD,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAJiB,EAKjB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CALiB,EAMjB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CANiB,EAOjB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,KAAV,CAPiB,EAQjB,CAAC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAD,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CARiB,EASjB,CAAC,GAAD,EAAM,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAN,EAAiB,CAAjB,EAAoB,KAApB,CATiB,CAAd,CAAP,CADa,CAWV;AACN;AACD,YAAI,MAAM,KAAV,EAAiB;AACb,mBAAO,OAAA,aAAA,CAAc,CACjB,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,EAAS,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAT,EAAoB,CAApB,EAAuB,CAAvB,CADiB,EAEjB,CAAC,CAAD,EAAI,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAJ,EAAe,CAAf,EAAkB,CAAlB,CAFiB,EAGjB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAHiB,EAIjB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAJiB,EAKjB,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAP,EAAW,KAAX,CALiB,EAMjB,CAAC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAD,EAAY,CAAZ,EAAe,EAAf,EAAmB,KAAnB,CANiB,EAOjB,CAAC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAD,EAAY,CAAC,CAAD,EAAI,CAAJ,EAAO,GAAP,CAAZ,EAAyB,CAAzB,EAA4B,KAA5B,CAPiB,CAAd,CAAP;AASH;AAED,YAAI,MAAM,KAAV,EAAiB;AACb,mBAAO,CAAC,CAAD,EAAI,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAJ,EAAe,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAf,EAA0B,CAA1B,CAAP;AACH;AACD,YAAI,KAAJ,EAAW;AACP,mBAAO,OAAA,aAAA,CAAc,CACjB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CADiB,EAEjB,CAAC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAD,EAAY,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAZ,EAAuB,CAAvB,EAA0B,CAA1B,CAFiB,CAAd,CAAP;AAIH;AACJ,KAvCgB;AAwCjB,UAAM,gBAAA;AAAM,eAAA,OAAA,aAAA,CAAc,CACtB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CADsB,CAAd,CAAA;AAEV,KA1Ce;AA2CjB,WAAO,eAAC,EAAD,EAAoB;YAAjB,WAAA,GAAA;YAAU,QAAA,GAAA;AAChB,YAAM,OAAO,UAAU,CAAV,IAAe,QAAQ,SAAS,MAAjB,KAA4B,CAAxD;AACA,YAAI,IAAJ,EAAU;AACN,mBAAO,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAAP;AACH;AACD,eAAO,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAAP;AACH,KAjDgB;AAkDjB,UAAM,cAAC,EAAD,EAAoB;YAAjB,WAAA,GAAA;YAAU,QAAA,GAAA;AACf,eAAO,OAAA,aAAA,CAAc,CACjB,CAAC,EAAD,EAAK,CAAC,EAAD,EAAK,CAAL,EAAQ,CAAR,CAAL,EAAiB,EAAjB,EAAqB,CAAC,EAAD,EAAK,CAAL,EAAQ,CAAR,CAArB,CADiB,EAEjB,CAAC,EAAD,EAAK,CAAC,EAAD,EAAK,CAAL,EAAQ,CAAR,CAAL,EAAiB,EAAjB,EAAqB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAArB,CAFiB,EAGjB,CAAC,EAAD,EAAK,EAAL,EAAS,CAAC,EAAD,EAAK,CAAL,EAAQ,CAAR,CAAT,EAAqB,CAArB,CAHiB,EAIjB,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,CAAC,EAAD,EAAK,CAAL,EAAQ,CAAR,CAAb,CAJiB,CAAd,EAKJ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CALI,CAAP;AAMH,KAzDgB;AA0DjB,WAAO,iBAAA;AAAM,eAAA,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,CAAA;AAAa;AA1DT,CAAR;;;;;;;;;;;;;;;;;;;;;;;;ACFb,IAAA,UAAA,QAAA,OAAA,CAAA;AACA,IAAA,UAAA,QAAA,OAAA,CAAA;AACA,IAAA,SAAA,QAAA,SAAA,CAAA;AACA,IAAA,aAAA,QAAA,YAAA,CAAA;AAEA,IAAA,UAAA,QAAA,kBAAA,CAAA;AAEA,IAAA,UAAA,aAAA,UAAA,MAAA,EAAA;AAAqC,cAAA,OAAA,EAAA,MAAA;AASjC,aAAA,OAAA,CAAY,UAAZ,EAAwB,KAAxB,EAAkC;AAAV,YAAA,UAAA,KAAA,CAAA,EAAA;AAAA,oBAAA,EAAA;AAAU;AAAlC,YAAA,QACI,OAAA,IAAA,CAAA,IAAA,EAAM,UAAN,KAAiB,IADrB;AARA,cAAA,WAAA,GAAc,EAAd;AACA,cAAA,cAAA,GAAiB,EAAjB;AACA,cAAA,YAAA,GAAe,EAAf;AACA,cAAA,QAAA,GAAW,EAAE,qBAAqB,IAAvB,EAA6B,QAAQ,QAAA,KAArC,EAA4C,SAAS,IAArD,EAAX;AACA,cAAA,GAAA,GAAM,KAAK,GAAX;AACA,cAAA,UAAA,GAAa,CAAb,CAGkC,CAHlB;AAKZ,cAAK,KAAL,GAAa,OAAO,MAAP,CAAc,EAAd,EAAkB,MAAK,QAAvB,EAAiC,SAAS,EAA1C,CAAb;;AACH;AAED,YAAA,SAAA,CAAA,IAAA,GAAA,UAAK,EAAL,EAAkC;AAAlC,YAAA,QAAA,IAAA;YAAO,QAAA,GAAA;YAAO,WAAA,GAAA;YAAU,WAAA,GAAA;AACpB,YAAM,SAAS,SAAS,MAAT,IAAmB,KAAK,QAAL,CAAc,MAAhD;AACA,YAAM,UAAU,OAAO,QAAP,CAAhB;AACA,YAAI,CAAC,OAAL,EAAc;AACV,oBAAQ,IAAR,CAAa,uBAAb;AACA;AACH;AACD,YAAM,gBAAgB,MAAM,gBAAN,EAAtB;AACA,YAAI,SAAS,KAAb,EAAoB;AAChB,mBAAO,MAAM,SAAN,CAAgB,QAAhB,EAA0B,UAAC,CAAD,EAAE;AAC/B,sBAAK,SAAL,CAAe,EAAE,KAAjB,EAAwB,EAAE,UAAU,EAAE,QAAF,GAAa,SAAS,KAAlC,EAAxB;AACH,aAFM,CAAP;AAGH;AACD,mBAAW;AACP;AADO,SAEN,GAFM,CAEF,UAAA,OAAA,EAAO;AAAI,mBAAA,QAAQ,EAAE,UAAQ,QAAV,EAAY,OAAK,KAAjB,EAAmB,SAAO,OAA1B,EAA4B,UAAQ,QAApC,EAAR,EAAgD,KAAhD,CAAsD,CAAtD,EAAyD,KAAK,KAAL,CAAW,SAAS,KAApB,CAAzD,CAAA;AAAoF,SAF7F;AAGP;AAHO,SAIN,GAJM,CAIF,UAAC,OAAD,EAAU,CAAV,EAAW;AAAK,mBAAA,OAAA,aAAA,CAAc,OAAd,EAAuB,QAAvB,EAAiC,CAAC,CAAD,CAAjC,CAAA;AAAqC,SAJnD;AAKP;AALO,SAMN,MANM,CAMC,OAAA,cAAA,CAAe,QAAf,CAND,EAM2B,EAN3B,CAAX;AAOA,cAAM,SAAN,CAAgB,QAAhB,EAA0B,UAAC,EAAD,EAA0B;gBAAvB,OAAA,GAAA;gBAAM,QAAA,GAAA;gBAAO,WAAA,GAAA;AACtC,gBAAM,cAAc,SAAS,GAAT,IAAgB,MAAK,UAAL,IAAmB,CAAnC,CAApB;AACA,gBAAI,WAAW,SAAS,QAAT,GAAoB,gBAAgB,SAAS,KAA7C,GAAqD,KAAK,MAAL,MAAiB,cAAc,EAA/B,CAApE;AACA,gBAAI,KAAK,CAAL,IAAU,CAAV,KAAgB,CAAhB,IAAqB,CAAC,KAAK,CAAL,CAAtB,IAAiC,CAAC,KAAK,CAAL,CAAtC,EAA+C;AAC3C,2BAAW,KAAK,MAAL,KAAgB,WAA3B;AACH;AACD,gBAAM,WAAW,SAAS,QAAT,GAAoB,QAApB,GAA+B,MAAM,QAAN,GAAiB,aAAjE;AACA,gBAAM,QAAQ,SAAS,QAAT,GAAoB,KAAK,IAAL,CAAU,MAAM,QAAN,GAAiB,IAAjB,GAAwB,CAAlC,CAApB,GAA2D,IAAzE;AACA,gBAAM,OAAO,MAAM,IAAN,IAAc,MAAK,UAAL,CAAgB,IAA3C;AACA,kBAAK,SAAL,CAAe,MAAM,KAArB,EAA4B,EAAE,UAAQ,QAAV,EAAY,MAAI,IAAhB,EAAkB,UAAQ,QAA1B,EAA4B,UAAQ,QAApC,EAAsC,OAAK,KAA3C,EAA5B;AACH,SAVD,EAUG,SAAS,QAVZ;AAWH,KA/BD;AAiCA,YAAA,SAAA,CAAA,cAAA,GAAA,YAAA;AACI,eAAO,KAAK,WAAL,CAAiB,MAAjB,GAA0B,KAAK,WAAL,CAAiB,KAAK,WAAL,CAAiB,MAAjB,GAA0B,CAA3C,CAA1B,GAA0E,IAAjF;AACH,KAFD;AAIA,YAAA,SAAA,CAAA,UAAA,GAAA,UAAW,UAAX,EAAuB,MAAvB,EAA+B,KAA/B,EAAqC;AACjC,YAAI,CAAC,MAAL,EAAa;AACT,mBAAO,UAAP;AACH;AACD,YAAM,OAAO,OAAA,cAAA,CAAe,MAAf,EAAuB,UAAvB,EACR,GADQ,CACJ,UAAC,SAAD,EAAY,KAAZ,EAAiB;AAClB,gBAAM,WAAW,GAAG,MAAH,CAAU,SAAV,EACZ,IADY,CACP,UAAC,CAAD,EAAI,CAAJ,EAAK;AAAK,uBAAA,OAAA,WAAA,CAAY,CAAZ,EAAe,CAAf,EAAkB,KAAlB,CAAA;AAAwB,aAD3B,EAC6B,CAD7B,CAAjB;AAEA,gBAAI,CAAC,QAAA,QAAA,CAAS,SAAT,CAAmB,OAAO,UAAU,OAAV,CAAkB,QAAlB,CAAP,CAAnB,EAAwD,QAAxD,CAAL,EAAwE;AACpE,wBAAQ,IAAR,CAAa,OAAb,EAAsB,OAAO,UAAU,OAAV,CAAkB,QAAlB,CAAP,CAAtB,EAA2D,QAA3D,EAAqE,SAArE;AACH;AACD,mBAAO,QAAA,QAAA,CAAS,SAAT,CAAmB,OAAO,UAAU,OAAV,CAAkB,QAAlB,CAAP,CAAnB,EAAwD,QAAxD,CAAP;AACH,SARQ,EAQN,MARM,CAQC,UAAA,CAAA,EAAC;AAAI,mBAAA,CAAC,CAAC,CAAF;AAAG,SART,CAAb;AASA,eAAO,QAAQ,KAAK,MAAb,GAAsB,IAAtB,GAA6B,UAApC;AACH,KAdD;AAgBA;AACA,YAAA,SAAA,CAAA,SAAA,GAAA,UAAU,UAAV,EAAsB,EAAtB,EAAmE;YAA3C,QAAA,GAAA;YAAO,WAAA,GAAA;YAAU,WAAA,GAAA;YAAU,OAAA,GAAA;YAAM,WAAA,GAAA;AACrD,YAAI,KAAK,KAAL,CAAW,mBAAX,IAAkC,KAAK,cAAL,EAAtC,EAA6D;AACzD,yBAAa,KAAK,UAAL,CAAgB,UAAhB,EAA4B,KAAK,cAAL,EAA5B,EAAmD,KAAnD,CAAb;AACH;AACD,aAAK,WAAL,CAAiB,IAAjB,CAAsB,GAAG,MAAH,CAAU,UAAV,CAAtB;AACA,aAAK,UAAL,CAAgB,SAAhB,CAA0B,UAA1B,EAAsC,EAAE,UAAQ,QAAV,EAAY,UAAQ,QAApB,EAAsB,MAAI,IAA1B,EAA4B,UAAQ,QAApC,EAAtC;AACH,KAND;AAQA,YAAA,SAAA,CAAA,SAAA,GAAA,UAAU,KAAV,EAAiB,QAAjB,EAAyB;AACrB,YAAI,UAAU,MAAd,EAAsB;AAClB,oBAAQ,GAAR,CAAY,MAAZ;AACA;AACH;AACD,YAAI,CAAC,KAAD,IAAU,UAAU,GAAxB,EAA6B;AAAE;AAC3B,oBAAQ,KAAK,YAAL,CAAkB,KAAK,YAAL,CAAkB,MAAlB,GAA2B,CAA7C,CAAR;AACH;AACD,aAAK,YAAL,CAAkB,IAAlB,CAAuB,KAAvB;AACA,gBAAQ,QAAA,KAAA,CAAM,QAAN,CAAe,OAAA,aAAA,CAAc,KAAd,CAAf,CAAR;AAEA,YAAI,QAAQ,QAAA,KAAA,CAAM,SAAN,CAAgB,MAAM,CAAN,CAAhB,EACP,GADO,CACH,UAAA,CAAA,EAAC;AAAI,mBAAA,EAAE,OAAF,CAAU,IAAV,EAAgB,GAAhB,CAAA;AAAoB,SADtB,EACwB;AADxB,SAEP,GAFO,CAEH,UAAA,IAAA,EAAI;AAAI,mBAAA,QAAA,QAAA,CAAS,SAAT,CAAmB,MAAM,CAAN,IAAW,GAA9B,EAAmC,IAAnC,CAAA;AAAwC,SAF7C,CAAZ;AAGA,YAAI,MAAM,MAAN,GAAe,CAAf,IAAoB,SAAS,OAAjC,EAA0C;AACtC,oBAAQ,MAAM,KAAN,CAAY,KAAK,KAAL,CAAW,OAAX,GAAqB,CAArB,GAAyB,CAArC,CAAR;AACH;AACD,YAAI,SAAS,KAAb,EAAoB;AAChB,oBAAQ,MAAM,KAAN,CAAY,CAAZ,EAAe,SAAS,KAAT,GAAiB,SAAS,KAA1B,GAAkC,MAAM,MAAvD,CAAR;AACH;AACD,aAAK,SAAL,CAAe,KAAf,EAAsB,QAAtB;AACH,KArBD;AAsBJ,WAAA,OAAA;AAlGA,CAAA,CAAqC,WAAA,QAArC,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;ACPA,IAAA,aAAA,QAAA,YAAA,CAAA;AACA,IAAA,UAAA,QAAA,kBAAA,CAAA;AAEA,IAAA,UAAA,aAAA,UAAA,MAAA,EAAA;AAAqC,cAAA,OAAA,EAAA,MAAA;AAUjC,aAAA,OAAA,CAAY,UAAZ,EAAsB;AAAtB,YAAA,QACI,OAAA,IAAA,CAAA,IAAA,EAAM,UAAN,KAAiB,IADrB;AATA,cAAA,GAAA,GAAM;AACF,kBAAM,CADJ;AAEF,mBAAO,CAFL;AAGF,mBAAO,CAHL;AAIF,kBAAM,CAJJ;AAKF,mBAAO;AALL,SAAN;AAOA,cAAA,QAAA,GAAW,EAAE,QAAQ,QAAA,KAAV,EAAX;;AAIC;AAED,YAAA,SAAA,CAAA,IAAA,GAAA,UAAK,EAAL,EAAkC;AAAlC,YAAA,QAAA,IAAA;YAAO,WAAA,GAAA;YAAU,QAAA,GAAA;YAAO,WAAA,GAAA;AACpB,YAAM,SAAS,SAAS,MAAT,IAAmB,KAAK,QAAL,CAAc,MAAhD;AAEA,eAAO,IAAP,CAAY,MAAZ,EACK,MADL,CACY,UAAA,CAAA,EAAC;AAAI,mBAAA,OAAO,IAAP,CAAY,MAAK,GAAjB,EAAsB,QAAtB,CAA+B,CAA/B,CAAA;AAAiC,SADlD,EACoD;AADpD,SAEK,OAFL,CAEa,UAAA,GAAA,EAAG;AACR,gBAAM,WAAW,SACZ,GADY,CACR,UAAC,OAAD,EAAU,KAAV,EAAe;AAAK,uBAAA,OAAO,GAAP,EAAY,EAAE,UAAQ,QAAV,EAAY,OAAK,KAAjB,EAAmB,SAAO,OAA1B,EAA4B,UAAQ,QAApC,EAAsC,OAAK,KAA3C,EAAZ,EACpB,KADoB,CACd,CADc,EACX,KAAK,KAAL,CAAW,SAAS,KAApB,CADW,CAAA;AACgB,aAF5B,CAAjB;AAGA,kBAAM,SAAN,CAAgB,QAAhB,EAA0B,UAAC,EAAD,EAAoB;oBAAjB,WAAA,GAAA;oBAAU,QAAA,GAAA;AACnC,sBAAK,UAAL,CAAgB,QAAhB,CAAyB,CAAC,MAAK,GAAL,CAAS,GAAT,CAAD,CAAzB,EAA0C,EAAE,UAAQ,QAAV,EAAY,MAAM,KAAlB,EAA1C;AACH,aAFD,EAEG,SAAS,QAFZ;AAGH,SATL;AAUH,KAbD;AAcJ,WAAA,OAAA;AA5BA,CAAA,CAAqC,WAAA,QAArC,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;ACHA,IAAA,SAAA,QAAA,SAAA,CAAA;AACA,IAAA,aAAA,QAAA,YAAA,CAAA;AACA,IAAA,UAAA,QAAA,OAAA,CAAA;AACA,IAAA,UAAA,QAAA,kBAAA,CAAA;AAEA,IAAA,UAAA,aAAA,UAAA,MAAA,EAAA;AAAqC,cAAA,OAAA,EAAA,MAAA;AAKjC,aAAA,OAAA,CAAY,UAAZ,EAAsB;AAAtB,YAAA,QACI,OAAA,IAAA,CAAA,IAAA,EAAM,UAAN,KAAiB,IADrB;AAHA,cAAA,QAAA,GAAW,EAAE,QAAQ,QAAA,KAAV,EAAX;AACA,cAAA,YAAA,GAAyB,EAAzB;;AAIC;AAED,YAAA,SAAA,CAAA,IAAA,GAAA,UAAK,EAAL,EAAkC;AAAlC,YAAA,QAAA,IAAA;YAAO,WAAA,GAAA;YAAU,QAAA,GAAA;YAAO,WAAA,GAAA;AACpB,YAAM,SAAS,SAAS,MAAT,IAAmB,KAAK,QAAL,CAAc,MAAhD;AACA,YAAM,UAAU,OAAO,MAAP,CAAhB;AACA,mBAAW,SACN,GADM,CACF,UAAA,OAAA,EAAO;AAAI,mBAAA,QAAQ,EAAE,UAAQ,QAAV,EAAY,SAAO,OAAnB,EAAqB,UAAQ,QAA7B,EAA+B,OAAK,KAApC,EAAR,EAAgD,KAAhD,CAAsD,CAAtD,EAAyD,KAAK,KAAL,CAAW,SAAS,KAApB,CAAzD,CAAA;AAAoF,SAD7F,EAEN,GAFM,CAEF,UAAC,OAAD,EAAU,CAAV,EAAW;AAAK,mBAAA,OAAA,aAAA,CAAc,OAAd,EAAuB,QAAvB,EAAiC,CAAC,CAAD,CAAjC,CAAA;AAAqC,SAFnD,CAAX;AAGA,cAAM,SAAN,CAAgB,QAAhB,EAA0B,UAAC,IAAD,EAAK;AAC3B,kBAAK,QAAL,CAAc,IAAd,EAAoB,QAApB,EAA8B,KAA9B;AACH,SAFD,EAEG,SAAS,QAFZ;AAGH,KATD;AAWA,YAAA,SAAA,CAAA,OAAA,GAAA,UAAQ,IAAR,EAAc,KAAd,EAAqB,MAArB,EAA+B;AAAV,YAAA,WAAA,KAAA,CAAA,EAAA;AAAA,qBAAA,CAAA;AAAU;AAC3B,YAAM,SAAS,QAAA,KAAA,CAAM,QAAN,CAAe,OAAA,aAAA,CAAc,KAAd,CAAf,CAAf;AACA,YAAM,WAAW,QAAA,KAAA,CAAM,SAAN,CAAgB,OAAO,CAAP,CAAhB,EAA2B,IAA3B,CAAgC,UAAA,CAAA,EAAC;AAAI,mBAAA,SAAS,EAAE,CAAF,CAAT,MAAmB,IAAnB;AAAuB,SAA5D,CAAjB;AACA,eAAO,QAAA,QAAA,CAAS,SAAT,CAAmB,OAAO,CAAP,IAAY,MAA/B,EAAuC,QAAvC,CAAP;AACH,KAJD;AAMA,YAAA,SAAA,CAAA,QAAA,GAAA,UAAS,EAAT,EAAqD,QAArD,EAA+D,KAA/D,EAAoE;YAAzD,QAAA,GAAA;YAAO,QAAA,GAAA;YAAO,OAAA,GAAA;YAAM,WAAA,GAAA;YAAU,WAAA,GAAA;AACrC,YAAI,QAAQ,MAAM,KAAlB;AACA,YAAI,UAAU,MAAd,EAAsB;AAClB;AACH;AACD,YAAI,CAAC,KAAD,IAAU,UAAU,GAAxB,EAA6B;AAAE;AAC3B,oBAAQ,KAAK,YAAL,CAAkB,KAAK,YAAL,CAAkB,MAAlB,GAA2B,CAA7C,CAAR;AACH;AACD,aAAK,YAAL,CAAkB,IAAlB,CAAuB,KAAvB;AACA,YAAI,IAAJ;AACA,YAAM,QAAQ,CAAC,CAAD,EAAI,OAAA,aAAA,CAAc,CAAC,CAAD,EAAI,CAAJ,CAAd,CAAJ,EAA2B,CAA3B,EAA8B,OAAA,aAAA,CAAc,CAAC,CAAD,EAAI,CAAJ,CAAd,CAA9B,CAAd;AACA,YAAM,SAAS,CAAf;AACA,YAAI,MAAM,KAAN,KAAgB,CAAhB,IAAqB,MAAM,KAAN,CAAY,GAAZ,EAAiB,MAAjB,GAA0B,CAAnD,EAAsD;AAClD,mBAAO,MAAM,KAAN,CAAY,GAAZ,EAAiB,CAAjB,IAAsB,MAA7B;AACH,SAFD,MAEO;AACH,mBAAO,KAAK,OAAL,CAAa,MAAM,KAAK,CAAL,CAAN,CAAb,EAA6B,OAAA,aAAA,CAAc,KAAd,CAA7B,EAAmD,MAAnD,CAAP;AACH;AACD,YAAM,WAAW,MAAM,QAAN,GAAiB,MAAM,gBAAN,EAAlC;AACA,aAAK,UAAL,CAAgB,SAAhB,CAA0B,CAAC,IAAD,CAA1B,EAAkC,EAAE,UAAQ,QAAV,EAAY,UAAQ,QAApB,EAAsB,MAAM,GAA5B,EAAiC,UAAQ,QAAzC,EAAlC;AACH,KAnBD;AAoBJ,WAAA,OAAA;AA9CA,CAAA,CAAqC,WAAA,QAArC,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;ACLA,IAAA,eAAA,QAAA,cAAA,CAAA;AACA,IAAA,SAAA,QAAA,SAAA,CAAA;AAEA,IAAA,UAAA,aAAA,UAAA,MAAA,EAAA;AAA6B,cAAA,OAAA,EAAA,MAAA;AAezB,aAAA,OAAA,CAAY,OAAZ,EAA6B;AAAjB,YAAA,YAAA,KAAA,CAAA,EAAA;AAAA,sBAAA,EAAA;AAAiB;AAA7B,YAAA,QACI,OAAA,IAAA,CAAA,IAAA,EAAM,OAAN,KAAc,IADlB;AAdA,cAAA,OAAA,GAAU,EAAV;AAMA,cAAA,QAAA,GAAW,KAAX;AACA,cAAA,IAAA,GAAO,MAAP;AACA,cAAA,IAAA,GAAO,CAAP;AACA,cAAA,MAAA,GAAS,CAAT;AACA,cAAA,KAAA,GAAQ,CAAR;AACA,cAAA,OAAA,GAAU,CAAV;AACA,cAAA,OAAA,GAAU,EAAV;AAII,cAAK,IAAL,GAAY,QAAQ,IAAR,IAAgB,MAAK,IAAjC;AACA,cAAK,QAAL,GAAgB,MAAK,OAAL,CAAa,UAAb,EAAhB;AACA,cAAK,QAAL,CAAc,OAAd,CAAsB,MAAK,OAAL,CAAa,WAAnC;AACA,cAAK,QAAL,GAAgB,QAAQ,QAAR,IAAoB,MAAK,QAAzC;AACA;AACA,YAAI,QAAQ,OAAZ,EAAqB;AACjB,kBAAK,OAAL,GAAe,QAAQ,OAAvB;AACA,kBAAK,KAAL,GAAa,MAAK,WAAL,CAAiB,QAAQ,OAAzB,CAAb;AACH;;AACJ;AAED;AACA,YAAA,SAAA,CAAA,SAAA,GAAA,UAAU,GAAV,EAAe,OAAf,EAAqC;AAArC,YAAA,QAAA,IAAA;AAAe,YAAA,YAAA,KAAA,CAAA,EAAA;AAAA,sBAAU,KAAK,OAAf;AAAsB;AACjC,YAAI,KAAK,OAAL,CAAa,GAAb,KAAqB,KAAK,OAAL,CAAa,GAAb,EAAkB,OAAlB,KAA8B,OAAvD,EAAgE;AAC5D;AACA,mBAAO,QAAQ,OAAR,CAAgB,KAAK,OAAL,CAAa,GAAb,EAAkB,MAAlC,CAAP;AACH;AACD,eAAO,MAAM,GAAN,EACF,IADE,CACG,UAAA,GAAA,EAAG;AAAI,mBAAA,IAAI,WAAJ,EAAA;AAAiB,SAD3B,EAEF,IAFE,CAEG,UAAA,MAAA,EAAM;AACR,mBAAO,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAgB;AAC/B,wBAAQ,eAAR,CAAwB,MAAxB,EAAgC,UAAC,WAAD,EAAY;AACxC,0BAAK,OAAL,CAAa,GAAb,IAAoB,EAAE,QAAQ,WAAV,EAAuB,SAAO,OAA9B,EAApB;AACA,4BAAQ,WAAR;AACH,iBAHD;AAIH,aALM,CAAP;AAMH,SATE,CAAP;AAUH,KAfD;AAiBA,YAAA,SAAA,CAAA,SAAA,GAAA,UAAU,MAAV,EAAkB,OAAlB,EAA0B;AACtB,YAAM,SAAS,KAAK,OAAL,CAAa,kBAAb,EAAf;AACA,kBAAU,WAAW,KAAK,QAA1B;AACA,eAAO,MAAP,GAAgB,MAAhB;AACA,eAAO,OAAP,CAAe,OAAf;AACA,eAAO,MAAP;AACH,KAND;AAQA,YAAA,SAAA,CAAA,UAAA,GAAA,UAAW,OAAX,EAAoB,OAApB,EAA0C;AAA1C,YAAA,QAAA,IAAA;AAAoB,YAAA,YAAA,KAAA,CAAA,EAAA;AAAA,sBAAU,KAAK,OAAf;AAAsB;AACtC,YAAI,CAAC,KAAK,SAAL,CAAe,OAAf,CAAL,EAA8B;AAC1B,oBAAQ,KAAR,CAAc,2BAAd;AACA,mBAAO,EAAP;AACH;AACD,eAAO,QAAQ,GAAR,CAAY,UAAA,MAAA,EAAM;AAAI,mBAAA,MAAK,SAAL,CAAe,MAAK,OAAL,CAAa,MAAb,EAAqB,MAApC,CAAA;AAA2C,SAAjE,CAAP;AACH,KAND;AAQA;AACA,YAAA,SAAA,CAAA,UAAA,GAAA,UAAW,GAAX,EAAgB,OAAhB,EAAsC;AAAtC,YAAA,QAAA,IAAA;AAAgB,YAAA,YAAA,KAAA,CAAA,EAAA;AAAA,sBAAU,KAAK,OAAf;AAAsB;AAClC,eAAO,KAAK,SAAL,CAAe,GAAf,EAAoB,OAApB,EACF,IADE,CACG,UAAA,WAAA,EAAW;AAAI,mBAAA,MAAK,SAAL,CAAe,WAAf,CAAA;AAA2B,SAD7C,CAAP;AAEH,KAHD;AAKA;AACA,YAAA,SAAA,CAAA,WAAA,GAAA,UAAY,OAAZ,EAAqB,OAArB,EAA2C;AAA3C,YAAA,QAAA,IAAA;AAAqB,YAAA,YAAA,KAAA,CAAA,EAAA;AAAA,sBAAU,KAAK,OAAf;AAAsB;AACvC,gBAAQ,OAAR,CAAgB,UAAC,MAAD,EAAS,CAAT,EAAU;AACtB,gBAAI,CAAC,MAAL,EAAa;AACT,wBAAQ,IAAR,CAAa,mBAAiB,CAAjB,GAAkB,oBAA/B;AACH;AACJ,SAJD;AAKA,eAAO,QAAQ,GAAR,CAAY,QAAQ,MAAR,CAAe,UAAA,MAAA,EAAM;AAAI,mBAAA,CAAC,CAAC,MAAF;AAAQ,SAAjC,EAAmC,GAAnC,CAAuC,UAAA,MAAA,EAAM;AAAI,mBAAA,MAAK,UAAL,CAAgB,MAAhB,EAAwB,OAAxB,CAAA;AAAgC,SAAjF,CAAZ,CAAP;AACH,KAPD;AASA,YAAA,SAAA,CAAA,SAAA,GAAA,UAAU,OAAV,EAAmB,OAAnB,EAAyC;AAAzC,YAAA,QAAA,IAAA;AAAmB,YAAA,YAAA,KAAA,CAAA,EAAA;AAAA,sBAAU,KAAK,OAAf;AAAsB;AACrC,eAAO,QAAQ,MAAR,CAAe,UAAC,SAAD,EAAY,GAAZ,EAAe;AACjC,mBAAO,aAAa,MAAK,OAAL,CAAa,GAAb,CAAb,IAAkC,MAAK,OAAL,CAAa,GAAb,EAAkB,OAAlB,KAA8B,OAAvE;AACH,SAFM,EAEJ,IAFI,CAAP;AAGH,KAJD;AAMA,YAAA,SAAA,CAAA,UAAA,GAAA,UAAW,MAAX,EAAmB,QAAnB,EAAiC,QAAjC,EAA6C;AAA1B,YAAA,aAAA,KAAA,CAAA,EAAA;AAAA,uBAAA,CAAA;AAAY;AAAE,YAAA,aAAA,KAAA,CAAA,EAAA;AAAA,uBAAA,CAAA;AAAY;AACzC,eAAO,OAAP,CAAe,UAAC,KAAD,EAAQ,CAAR,EAAS;AAAK,mBAAA,MAAM,KAAN,CAAY,WAAW,WAAW,CAAlC,CAAA;AAAoC,SAAjE;AACH,KAFD;AAIA,YAAA,SAAA,CAAA,UAAA,GAAA,UAAW,MAAX,EAAmB,QAAnB,EAA2B;AACvB,YAAM,WAAW,KAAK,OAAL,CAAa,UAAb,EAAjB;AACA,YAAM,QAAQ,KAAK,SAAL,CAAe,KAAK,OAAL,CAAa,MAAb,EAAqB,MAApC,EAA4C,QAA5C,CAAd;AACM,YAAA,KAAA,+BAAA,8BAAA,kCAAA,kCAAA,6CAAA,kCAAA,CAAA;AAAA,YAAC,SAAA,GAAA,CAAA,CAAD;AAAA,YAAS,QAAA,GAAA,CAAA,CAAT;AAAA,YAAgB,UAAA,GAAA,CAAA,CAAhB;AAAA,YAAyB,UAAA,GAAA,CAAA,CAAzB;AAAA,YAAkC,WAAA,GAAA,CAAA,CAAlC;AAAA,YAA4C,OAAA,GAAA,CAAA,CAA5C;AASN,YAAM,OAAO,SAAS,QAAT,IAAqB,KAAK,OAAL,CAAa,WAA/C;AACA;AACA,iBAAS,OAAT,CAAiB,KAAK,GAAtB;AACA,eAAA,IAAA,CAAK,EAAE,QAAM,MAAR,EAAU,OAAK,KAAf,EAAiB,SAAO,OAAxB,EAA0B,SAAO,OAAjC,EAAmC,MAAI,IAAvC,EAAyC,UAAQ,QAAjD,EAAL,EAA2D,IAA3D,EAAiE,SAAS,IAA1E;AACA,aAAK,UAAL,CAAgB,CAAC,KAAD,CAAhB,EAAyB,SAAS,QAAT,IAAqB,CAA9C,EAAiD,CAAjD;AACH,KAjBD;AAmBA;;;;;;;;;AAUA,YAAA,SAAA,CAAA,QAAA,GAAA,UAAS,IAAT,EAAyB,QAAzB,EAAiC;AAAjC,YAAA,QAAA,IAAA;AACI,eAAA,SAAA,CAAM,QAAN,CAAc,IAAd,CAAc,IAAd,EAAe,IAAf,EAAqB,QAArB;AACA,aAAK,GAAL,CAAS,UAAA,GAAA,EAAG;AACR,kBAAK,UAAL,CAAgB,MAAK,OAAL,CAAa,GAAb,CAAhB,EAAmC,QAAnC;AACH,SAFD;AAGH,KALD;AAMJ,WAAA,OAAA;AA3HA,CAAA,CAA6B,aAAA,UAA7B,CAAA;AAAa,QAAA,OAAA,GAAA,OAAA;;;;;ACHb,IAAA,OAAA,aAAA,YAAA;AAII,aAAA,IAAA,CAAY,OAAZ,EAAmB;AACf,aAAK,OAAL,GAAe,OAAf;AACH;AACD,SAAA,SAAA,CAAA,KAAA,GAAA,YAAA;AACI,aAAK,GAAL,GAAW,KAAK,OAAL,CAAa,gBAAb,EAAX;AACA,aAAK,IAAL,GAAY,KAAK,OAAL,CAAa,UAAb,EAAZ;AACA,aAAK,GAAL,CAAS,OAAT,CAAiB,KAAK,IAAtB;AACA,aAAK,IAAL,CAAU,OAAV,CAAkB,KAAK,OAAL,CAAa,WAA/B;AACH,KALD;AAMA,SAAA,SAAA,CAAA,OAAA,GAAA,UAAQ,IAAR,EAAY;AACR,aAAK,KAAL;AAEA,aAAK,GAAL,CAAS,SAAT,CAAmB,cAAnB,CAAkC,GAAlC,EAAuC,IAAvC;AACA,aAAK,IAAL,CAAU,IAAV,CAAe,cAAf,CAA8B,CAA9B,EAAiC,IAAjC;AAEA,aAAK,GAAL,CAAS,SAAT,CAAmB,4BAAnB,CAAgD,IAAhD,EAAsD,OAAO,GAA7D;AACA,aAAK,IAAL,CAAU,IAAV,CAAe,4BAAf,CAA4C,IAA5C,EAAkD,OAAO,GAAzD;AAEA,aAAK,GAAL,CAAS,KAAT,CAAe,IAAf;AAEA,aAAK,GAAL,CAAS,IAAT,CAAc,OAAO,GAArB;AACH,KAZD;AAaJ,WAAA,IAAA;AA1BA,CAAA,EAAA;AAAa,QAAA,IAAA,GAAA,IAAA;;;;;ACAb,IAAA,QAAA,aAAA,YAAA;AAMI,aAAA,KAAA,CAAY,OAAZ,EAAmB;AACf,aAAK,OAAL,GAAe,OAAf;AACH;AACD,UAAA,SAAA,CAAA,WAAA,GAAA,YAAA;AACI,YAAI,aAAa,KAAK,OAAL,CAAa,UAA9B;AACA,YAAI,SAAS,KAAK,OAAL,CAAa,YAAb,CAA0B,CAA1B,EAA6B,UAA7B,EAAyC,KAAK,OAAL,CAAa,UAAtD,CAAb;AACA,YAAI,SAAS,OAAO,cAAP,CAAsB,CAAtB,CAAb;AAEA,aAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,UAApB,EAAgC,GAAhC,EAAqC;AACjC,mBAAO,CAAP,IAAY,KAAK,MAAL,KAAgB,CAAhB,GAAoB,CAAhC;AACH;AAED,eAAO,MAAP;AACH,KAVD;AAWA,UAAA,SAAA,CAAA,KAAA,GAAA,YAAA;AACI,aAAK,KAAL,GAAa,KAAK,OAAL,CAAa,kBAAb,EAAb;AACA,aAAK,KAAL,CAAW,MAAX,GAAoB,KAAK,WAAL,EAApB;AACA,YAAI,cAAc,KAAK,OAAL,CAAa,kBAAb,EAAlB;AACA,oBAAY,IAAZ,GAAmB,UAAnB;AACA,oBAAY,SAAZ,CAAsB,KAAtB,GAA8B,IAA9B;AACA,aAAK,KAAL,CAAW,OAAX,CAAmB,WAAnB;AAEA,aAAK,aAAL,GAAqB,KAAK,OAAL,CAAa,UAAb,EAArB;AACA,oBAAY,OAAZ,CAAoB,KAAK,aAAzB;AAEA,aAAK,aAAL,CAAmB,OAAnB,CAA2B,KAAK,OAAL,CAAa,WAAxC;AACA,aAAK,GAAL,GAAW,KAAK,OAAL,CAAa,gBAAb,EAAX;AACA,aAAK,GAAL,CAAS,IAAT,GAAgB,UAAhB;AAEA,aAAK,WAAL,GAAmB,KAAK,OAAL,CAAa,UAAb,EAAnB;AACA,aAAK,GAAL,CAAS,OAAT,CAAiB,KAAK,WAAtB;AACA,aAAK,WAAL,CAAiB,OAAjB,CAAyB,KAAK,OAAL,CAAa,WAAtC;AACH,KAlBD;AAkBC;AACD,UAAA,SAAA,CAAA,OAAA,GAAA,UAAQ,IAAR,EAAY;AACR,aAAK,KAAL;AAEA,aAAK,aAAL,CAAmB,IAAnB,CAAwB,cAAxB,CAAuC,CAAvC,EAA0C,IAA1C;AACA,aAAK,aAAL,CAAmB,IAAnB,CAAwB,4BAAxB,CAAqD,IAArD,EAA2D,OAAO,GAAlE;AACA,aAAK,KAAL,CAAW,KAAX,CAAiB,IAAjB;AAEA,aAAK,GAAL,CAAS,SAAT,CAAmB,cAAnB,CAAkC,GAAlC,EAAuC,IAAvC;AACA,aAAK,WAAL,CAAiB,IAAjB,CAAsB,cAAtB,CAAqC,GAArC,EAA0C,IAA1C;AACA,aAAK,WAAL,CAAiB,IAAjB,CAAsB,4BAAtB,CAAmD,IAAnD,EAAyD,OAAO,GAAhE;AACA,aAAK,GAAL,CAAS,KAAT,CAAe,IAAf;AAEA,aAAK,GAAL,CAAS,IAAT,CAAc,OAAO,GAArB;AACA,aAAK,KAAL,CAAW,IAAX,CAAgB,OAAO,GAAvB;AACH,KAdD;AAcC;AACL,WAAA,KAAA;AAtDA,CAAA,EAAA;AAAa,QAAA,KAAA,GAAA,KAAA;;;;;;;;;;;;;;;;;;;;;;;;ACAb,IAAA,eAAA,QAAA,cAAA,CAAA;AACA,IAAA,SAAA,QAAA,QAAA,CAAA;AACA,IAAA,UAAA,QAAA,SAAA,CAAA;AAEA,IAAA,eAAA,aAAA,UAAA,MAAA,EAAA;AAAkC,cAAA,YAAA,EAAA,MAAA;AAK9B,aAAA,YAAA,CAAY,OAAZ,EAAmB;AAAnB,YAAA,QACI,OAAA,IAAA,CAAA,IAAA,EAAM,OAAN,KAAc,IADlB;AAEI,cAAK,IAAL,GAAY,CACR,IAAI,OAAA,IAAJ,CAAS,MAAK,OAAd,CADQ,EAER,IAAI,QAAA,KAAJ,CAAU,MAAK,OAAf,CAFQ,CAAZ;;AAIH;AAED,iBAAA,SAAA,CAAA,QAAA,GAAA,UAAS,IAAT,EAAe,EAAf,EAAwC;AAAxC,YAAA,QAAA,IAAA;YAAiB,WAAA,GAAA;YAAU,OAAA,GAAA;YAAM,QAAA,GAAA;AAC7B,YAAM,SAAS,KAAK,MAAL,CAAY,UAAA,GAAA,EAAG;AAAI,mBAAA,CAAC,CAAC,MAAK,IAAL,CAAU,GAAV,CAAF;AAAgB,SAAnC,EAAqC,GAArC,CAAyC,UAAA,GAAA,EAAG;AAAI,mBAAA,MAAK,IAAL,CAAU,GAAV,CAAA;AAAc,SAA9D,CAAf;AACA,YAAI,OAAO,MAAP,GAAgB,KAAK,MAAzB,EAAiC;AAC7B,gBAAM,UAAU,KAAK,MAAL,CAAY,UAAA,GAAA,EAAG;AAAI,uBAAA,CAAC,MAAK,IAAL,CAAU,GAAV,CAAD;AAAe,aAAlC,CAAhB;AACA,oBAAQ,IAAR,CAAa,4BAAb,EAA2C,OAA3C;AACH;AACD,eAAO,OAAP,CAAe,UAAA,KAAA,EAAK;AAAI,mBAAA,MAAM,OAAN,CAAc,QAAd,CAAA;AAAuB,SAA/C;AACH,KAPD;AAQJ,WAAA,YAAA;AArBA,CAAA,CAAkC,aAAA,UAAlC,CAAA;AAAa,QAAA,YAAA,GAAA,YAAA;;;;;ACJb,IAAA,gBAAA,QAAA,2BAAA,CAAA;AAEA,IAAA,YAAA,aAAA,YAAA;AAKI,aAAA,SAAA,CAAY,GAAZ,EAAe;AACX,aAAK,KAAL,GAAa,IAAI,cAAA,WAAJ,CAAgB,EAAE,MAAM,MAAR,EAAgB,MAAM,CAAtB,EAAyB,KAAG,GAA5B,EAAhB,CAAb;AACA,aAAK,KAAL,GAAa,KAAK,KAAL,CAAW,KAAxB;AACH;AACD,cAAA,SAAA,CAAA,KAAA,GAAA,UAAM,KAAN,EAAa,IAAb,EAAqB;AAArB,YAAA,QAAA,IAAA;AAAa,YAAA,SAAA,KAAA,CAAA,EAAA;AAAA,mBAAA,CAAA;AAAQ;AACjB,YAAM,QAAQ,IAAI,KAAJ,CAAU,IAAV,EAAgB,IAAhB,CACV,CAAC,IAAI,KAAJ,CAAU,MAAM,KAAN,CAAY,KAAtB,EAA6B,IAA7B,CAAkC,CAAlC,CAAD,CADU,CAAd;AAGA,eAAO,MAAM,SAAN,CAAgB,KAAhB,EAAuB,UAAC,EAAD,EAAmB;gBAAhB,OAAA,GAAA;gBAAM,WAAA,GAAA;AACnC,kBAAK,KAAL,CAAW,QAAX,CAAoB,CAAC,KAAK,CAAL,MAAY,CAAZ,GAAgB,EAAhB,GAAqB,EAAtB,CAApB,EAA+C,EAAE,UAAQ,QAAV,EAAY,UAAU,IAAtB,EAA4B,QAAQ,GAApC,EAAyC,SAAS,GAAlD,EAAuD,OAAO,GAA9D,EAAmE,SAAS,CAA5E,EAA/C;AACH,SAFM,CAAP;AAGH,KAPD;AAQJ,WAAA,SAAA;AAjBA,CAAA,EAAA;AAAa,QAAA,SAAA,GAAA,SAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFb,IAAA,SAAA,QAAA,QAAA,CAAA;AACA,IAAA,SAAA,gBAAA,QAAA,QAAA,CAAA,CAAA;AACA,IAAA,YAAA,gBAAA,QAAA,qBAAA,CAAA,CAAA;AACA,IAAA,YAAA,gBAAA,QAAA,qBAAA,CAAA,CAAA;AACA,IAAA,YAAA,gBAAA,QAAA,qBAAA,CAAA,CAAA;AACA,IAAA,iBAAA,QAAA,4BAAA,CAAA;AACA,IAAA,cAAA,QAAA,aAAA,CAAA;AACA,IAAA,UAAA,QAAA,SAAA,CAAA;AAEA,IAAA,OAAA,aAAA,UAAA,MAAA,EAAA;AAA0B,cAAA,IAAA,EAAA,MAAA;AAOtB,aAAA,IAAA,CAAY,EAAZ,EAA2C;YAA7B,UAAA,GAAA;YAAS,QAAA,GAAA;YAAO,OAAA,GAAA;YAAM,QAAA,GAAA;AAApC,YAAA,QACI,OAAA,IAAA,CAAA,IAAA,EAAM,EAAE,SAAO,OAAT,EAAN,KAAkB,IADtB;AAEI,cAAK,GAAL,GAAW,MAAK,QAAL,CAAc,MAAK,OAAnB,CAAX;AACA,YAAM,cAAc,MAAK,gBAAL,CAAsB,EAAE,OAAK,KAAP,EAAS,MAAI,IAAb,EAAe,OAAK,KAApB,EAAtB,CAApB;AACA,cAAK,OAAL,GAAe,IAAI,UAAA,OAAJ,CAAY,YAAY,KAAxB,CAAf;AACA,cAAK,OAAL,GAAe,IAAI,UAAA,OAAJ,CAAY,YAAY,IAAxB,CAAf;AACA,cAAK,OAAL,GAAe,IAAI,UAAA,OAAJ,CAAY,YAAY,KAAxB,CAAf;AACA,cAAK,SAAL,GAAiB,CAAC,MAAK,OAAN,EAAe,MAAK,OAApB,EAA6B,MAAK,OAAlC,CAAjB;AACA,cAAK,SAAL,GAAiB,IAAI,YAAA,SAAJ,CAAc,MAAK,GAAnB,CAAjB;;AACH;AAED,SAAA,SAAA,CAAA,QAAA,GAAA,UAAS,OAAT,EAAgB;AACZ,YAAM,MAAM,QAAQ,UAAR,EAAZ;AACA,YAAI,IAAJ,CAAS,KAAT,GAAiB,GAAjB;AACA,YAAI,OAAJ,CAAY,QAAQ,WAApB;AACA,eAAO,GAAP;AACH,KALD;AAOA,SAAA,SAAA,CAAA,gBAAA,GAAA,UAAiB,EAAjB,EAAuC;YAApB,QAAA,GAAA;YAAO,OAAA,GAAA;YAAM,QAAA,GAAA;AAC5B,eAAO,QAAQ,OAAA,WAAA,CAAY,KAAK,GAAjB,CAAf;AACA,gBAAQ,SAAS,OAAA,WAAA,CAAY,KAAK,GAAjB,CAAjB;AACA,gBAAQ,SAAS,IAAI,eAAA,YAAJ,CAAiB,EAAE,KAAK,KAAK,GAAZ,EAAjB,CAAjB;AACA,eAAO,EAAE,OAAK,KAAP,EAAS,MAAI,IAAb,EAAe,OAAK,KAApB,EAAP;AACH,KALD;AAOA,SAAA,SAAA,CAAA,IAAA,GAAA,UAAK,QAAL,EAAe,QAAf,EAAuB;AAAvB,YAAA,QAAA,IAAA;AACI,aAAK,KAAL,GAAa,SAAS,KAAT,IAAkB,IAAI,QAAA,KAAJ,CAAU,QAAV,CAA/B;AACA,eAAO,KAAK,KAAL,CAAW,KAAK,KAAhB,EAAuB,SAAS,SAAT,GAAqB,IAArB,GAA4B,CAAnD,EAAsD,IAAtD,CAA2D,UAAC,IAAD,EAAK;AACnE,qBAAS,QAAT,GAAoB,KAAK,QAAzB;AACA;AACA,mBAAA,SAAA,CAAM,IAAN,CAAU,IAAV,CAAU,KAAV,EAAW,QAAX,EAAqB,QAArB;AACH,SAJM,CAAP;AAKH,KAPD;AASA,SAAA,SAAA,CAAA,KAAA,GAAA,UAAM,KAAN,EAAa,IAAb,EAAqB;AAAR,YAAA,SAAA,KAAA,CAAA,EAAA;AAAA,mBAAA,CAAA;AAAQ;AACjB,YAAI,MAAM,gBAAN,KAA2B,GAA/B,EAAoC;AAChC,oBAAQ,CAAR,CADgC,CACrB;AACd;AACD,eAAO,KAAK,SAAL,CAAe,KAAf,CAAqB,KAArB,EAA4B,IAA5B,CAAP;AACH,KALD;AAMJ,WAAA,IAAA;AA/CA,CAAA,CAA0B,OAAA,OAA1B,CAAA;AAAa,QAAA,IAAA,GAAA,IAAA;;;;;;;;;;;;;;;;ACTb,IAAA,SAAA,gBAAA,QAAA,QAAA,CAAA,CAAA;AAae,QAAA,IAAA,GAbR,OAAA,OAaQ;AAZf,IAAA,YAAA,gBAAA,QAAA,qBAAA,CAAA,CAAA;AAYqB,QAAA,OAAA,GAZd,UAAA,OAYc;AAXrB,IAAA,YAAA,gBAAA,QAAA,qBAAA,CAAA,CAAA;AAWuC,QAAA,OAAA,GAXhC,UAAA,OAWgC;AAVvC,IAAA,YAAA,gBAAA,QAAA,qBAAA,CAAA,CAAA;AAU8B,QAAA,OAAA,GAVvB,UAAA,OAUuB;AAT9B,IAAA,eAAA,QAAA,0BAAA,CAAA;AASgD,QAAA,UAAA,GATvC,aAAA,UASuC;AARhD,IAAA,aAAA,QAAA,sBAAA,CAAA;AAQ4D,QAAA,QAAA,GARnD,WAAA,QAQmD;AAP5D,IAAA,gBAAA,QAAA,2BAAA,CAAA;AAOsE,QAAA,WAAA,GAP7D,cAAA,WAO6D;AANtE,IAAA,YAAA,QAAA,uBAAA,CAAA;AAMmF,QAAA,OAAA,GAN1E,UAAA,OAM0E;AALnF,IAAA,iBAAA,QAAA,4BAAA,CAAA;AAK4F,QAAA,YAAA,GALnF,eAAA,YAKmF;AAJ5F,IAAA,SAAA,QAAA,QAAA,CAAA;AAIS,QAAA,IAAA,GAJA,OAAA,IAIA;AAHT,IAAA,OAAA,aAAA,QAAA,QAAA,CAAA,CAAA;AAGiH,QAAA,IAAA,GAAA,IAAA;AAFjH,IAAA,UAAA,QAAA,SAAA,CAAA;AAE0G,QAAA,KAAA,GAFjG,QAAA,KAEiG","file":"index.map","sourceRoot":"../src","sourcesContent":["// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","var isBrowser = (typeof window !== 'undefined')\n\nvar CLOCK_DEFAULTS = {\n  toleranceLate: 0.10,\n  toleranceEarly: 0.001\n}\n\n// ==================== Event ==================== //\nvar Event = function(clock, deadline, func) {\n  this.clock = clock\n  this.func = func\n  this._cleared = false // Flag used to clear an event inside callback\n\n  this.toleranceLate = clock.toleranceLate\n  this.toleranceEarly = clock.toleranceEarly\n  this._latestTime = null\n  this._earliestTime = null\n  this.deadline = null\n  this.repeatTime = null\n\n  this.schedule(deadline)\n}\n\n// Unschedules the event\nEvent.prototype.clear = function() {\n  this.clock._removeEvent(this)\n  this._cleared = true\n  return this\n}\n\n// Sets the event to repeat every `time` seconds.\nEvent.prototype.repeat = function(time) {\n  if (time === 0)\n    throw new Error('delay cannot be 0')\n  this.repeatTime = time\n  if (!this.clock._hasEvent(this))\n    this.schedule(this.deadline + this.repeatTime)\n  return this\n}\n\n// Sets the time tolerance of the event.\n// The event will be executed in the interval `[deadline - early, deadline + late]`\n// If the clock fails to execute the event in time, the event will be dropped.\nEvent.prototype.tolerance = function(values) {\n  if (typeof values.late === 'number')\n    this.toleranceLate = values.late\n  if (typeof values.early === 'number')\n    this.toleranceEarly = values.early\n  this._refreshEarlyLateDates()\n  if (this.clock._hasEvent(this)) {\n    this.clock._removeEvent(this)\n    this.clock._insertEvent(this)\n  }\n  return this\n}\n\n// Returns true if the event is repeated, false otherwise\nEvent.prototype.isRepeated = function() { return this.repeatTime !== null }\n\n// Schedules the event to be ran before `deadline`.\n// If the time is within the event tolerance, we handle the event immediately.\n// If the event was already scheduled at a different time, it is rescheduled.\nEvent.prototype.schedule = function(deadline) {\n  this._cleared = false\n  this.deadline = deadline\n  this._refreshEarlyLateDates()\n\n  if (this.clock.context.currentTime >= this._earliestTime) {\n    this._execute()\n  \n  } else if (this.clock._hasEvent(this)) {\n    this.clock._removeEvent(this)\n    this.clock._insertEvent(this)\n  \n  } else this.clock._insertEvent(this)\n}\n\nEvent.prototype.timeStretch = function(tRef, ratio) {\n  if (this.isRepeated())\n    this.repeatTime = this.repeatTime * ratio\n\n  var deadline = tRef + ratio * (this.deadline - tRef)\n  // If the deadline is too close or past, and the event has a repeat,\n  // we calculate the next repeat possible in the stretched space.\n  if (this.isRepeated()) {\n    while (this.clock.context.currentTime >= deadline - this.toleranceEarly)\n      deadline += this.repeatTime\n  }\n  this.schedule(deadline)\n}\n\n// Executes the event\nEvent.prototype._execute = function() {\n  if (this.clock._started === false) return\n  this.clock._removeEvent(this)\n\n  if (this.clock.context.currentTime < this._latestTime)\n    this.func(this)\n  else {\n    if (this.onexpired) this.onexpired(this)\n    console.warn('event expired')\n  }\n  // In the case `schedule` is called inside `func`, we need to avoid\n  // overrwriting with yet another `schedule`.\n  if (!this.clock._hasEvent(this) && this.isRepeated() && !this._cleared)\n    this.schedule(this.deadline + this.repeatTime) \n}\n\n// Updates cached times\nEvent.prototype._refreshEarlyLateDates = function() {\n  this._latestTime = this.deadline + this.toleranceLate\n  this._earliestTime = this.deadline - this.toleranceEarly\n}\n\n// ==================== WAAClock ==================== //\nvar WAAClock = module.exports = function(context, opts) {\n  var self = this\n  opts = opts || {}\n  this.tickMethod = opts.tickMethod || 'ScriptProcessorNode'\n  this.toleranceEarly = opts.toleranceEarly || CLOCK_DEFAULTS.toleranceEarly\n  this.toleranceLate = opts.toleranceLate || CLOCK_DEFAULTS.toleranceLate\n  this.context = context\n  this._events = []\n  this._started = false\n}\n\n// ---------- Public API ---------- //\n// Schedules `func` to run after `delay` seconds.\nWAAClock.prototype.setTimeout = function(func, delay) {\n  return this._createEvent(func, this._absTime(delay))\n}\n\n// Schedules `func` to run before `deadline`.\nWAAClock.prototype.callbackAtTime = function(func, deadline) {\n  return this._createEvent(func, deadline)\n}\n\n// Stretches `deadline` and `repeat` of all scheduled `events` by `ratio`, keeping\n// their relative distance to `tRef`. In fact this is equivalent to changing the tempo.\nWAAClock.prototype.timeStretch = function(tRef, events, ratio) {\n  events.forEach(function(event) { event.timeStretch(tRef, ratio) })\n  return events\n}\n\n// Removes all scheduled events and starts the clock \nWAAClock.prototype.start = function() {\n  if (this._started === false) {\n    var self = this\n    this._started = true\n    this._events = []\n\n    if (this.tickMethod === 'ScriptProcessorNode') {\n      var bufferSize = 256\n      // We have to keep a reference to the node to avoid garbage collection\n      this._clockNode = this.context.createScriptProcessor(bufferSize, 1, 1)\n      this._clockNode.connect(this.context.destination)\n      this._clockNode.onaudioprocess = function () {\n        process.nextTick(function() { self._tick() })\n      }\n    } else if (this.tickMethod === 'manual') null // _tick is called manually\n\n    else throw new Error('invalid tickMethod ' + this.tickMethod)\n  }\n}\n\n// Stops the clock\nWAAClock.prototype.stop = function() {\n  if (this._started === true) {\n    this._started = false\n    this._clockNode.disconnect()\n  }  \n}\n\n// ---------- Private ---------- //\n\n// This function is ran periodically, and at each tick it executes\n// events for which `currentTime` is included in their tolerance interval.\nWAAClock.prototype._tick = function() {\n  var event = this._events.shift()\n\n  while(event && event._earliestTime <= this.context.currentTime) {\n    event._execute()\n    event = this._events.shift()\n  }\n\n  // Put back the last event\n  if(event) this._events.unshift(event)\n}\n\n// Creates an event and insert it to the list\nWAAClock.prototype._createEvent = function(func, deadline) {\n  return new Event(this, deadline, func)\n}\n\n// Inserts an event to the list\nWAAClock.prototype._insertEvent = function(event) {\n  this._events.splice(this._indexByTime(event._earliestTime), 0, event)\n}\n\n// Removes an event from the list\nWAAClock.prototype._removeEvent = function(event) {\n  var ind = this._events.indexOf(event)\n  if (ind !== -1) this._events.splice(ind, 1)\n}\n\n// Returns true if `event` is in queue, false otherwise\nWAAClock.prototype._hasEvent = function(event) {\n return this._events.indexOf(event) !== -1\n}\n\n// Returns the index of the first event whose deadline is >= to `deadline`\nWAAClock.prototype._indexByTime = function(deadline) {\n  // performs a binary search\n  var low = 0\n    , high = this._events.length\n    , mid\n  while (low < high) {\n    mid = Math.floor((low + high) / 2)\n    if (this._events[mid]._earliestTime < deadline)\n      low = mid + 1\n    else high = mid\n  }\n  return low\n}\n\n// Converts from relative time to absolute time\nWAAClock.prototype._absTime = function(relTime) {\n  return relTime + this.context.currentTime\n}\n\n// Converts from absolute time to relative time \nWAAClock.prototype._relTime = function(absTime) {\n  return absTime - this.context.currentTime\n}","var WAAClock = require('./lib/WAAClock')\n\nmodule.exports = WAAClock\nif (typeof window !== 'undefined') window.WAAClock = WAAClock\n","import WAAClock from 'waaclock';\n\nexport class Pulse {\n    defaults = {\n        bpm: 120,\n        cycle: 4,\n        delay: 0\n    }\n    props: any;\n    context: any;\n    clock: any;\n    events = [];\n    callbackAtTime = false;\n    constructor(\n        props = {}\n    ) {\n        this.props = Object.assign({}, this.defaults, props);\n        this.context = this.props.context || new AudioContext();\n        this.clock = this.props.clock || new WAAClock(this.context, { toleranceEarly: 0.1, toleranceLate: 0.1 });\n    }\n\n    getMeasureLength(bpm = this.props.bpm, beatsPerMeasure = this.props.cycle) {\n        return 60 / bpm * beatsPerMeasure;\n    }\n\n    arrayPulse(children, length = 1, path = [], start = 0, callback, deadline?) {\n        //TODO: return promise on next one (for chaining)\n        if (!Array.isArray(children)) {\n            if (children === 0) {\n                return 0;\n            }\n            const item = {\n                value: children,\n                length,\n                path,\n                start,\n                pulse: this,\n                cycle: this.props.cycle,\n                timeout: null\n            };\n\n            start += this.props.delay; // TODO: be able to add delay from arrayPulse fn directly\n            if (this.callbackAtTime) {\n                start += deadline ? deadline : this.context.currentTime;\n                item.timeout = this.clock.callbackAtTime((event) =>\n                    callback(Object.assign(item, { event, deadline: event.deadline })), start);\n            } else {\n                start += (deadline || this.context.currentTime) - this.context.currentTime;\n                item.timeout = this.clock.setTimeout((event) =>\n                    callback(Object.assign(item, { event, deadline: event.deadline })), start);\n            }\n            this.events.push(item.timeout);\n            return item;\n        }\n        const childLength = length / children.length;\n        return {\n            length,\n            children: children.map((el, i) =>\n                this.arrayPulse(\n                    el,\n                    childLength,\n                    path.concat([i]),\n                    start + i * childLength,\n                    callback,\n                    deadline\n                )\n            )\n        };\n    }\n\n    tickArray(array, callback, deadline?, length?) {\n        array.push(1);\n        const l = length || this.getMeasureLength() * array.length;\n        this.start();\n        return new Promise((resolve, reject) => {\n            this.arrayPulse(array, l, [], 0, (tick, start) => {\n                if (tick.path[0] === array.length - 1) {\n                    resolve(tick);\n                } else {\n                    callback(tick, start);\n                }\n            }, deadline);\n        });\n    }\n\n\n    start() {\n        // console.log('start with', this.events.length, 'events');\n        const criticalEvents = 6000;\n        if (this.events.length > criticalEvents) {\n            console.warn('more than ', criticalEvents, 'events received. Consider using less \"times\" to keep the timing precies');\n        }\n        this.clock.start();\n    }\n\n    stop() {\n        this.clock.stop();\n    }\n\n    changeTempo(newTempo, timeout = 0.2) {\n        const factor = this.props.bpm / newTempo;\n        this.props.bpm = newTempo;\n        const events = this.events.filter(e => {\n            return e.deadline - this.context.currentTime > timeout;\n        });\n        // TODO: stretch durations?!\n        this.clock.timeStretch(this.context.currentTime, events, factor)\n    }\n}","import { Pulse } from './Pulse';\nimport { Musician } from './musicians/Musician';\n\nexport default class Band {\n    props: any;\n    pulse: Pulse;\n    musicians: Musician[];\n    defaults = {\n        cycle: 4,\n        division: 3, // rhythm division (3=ternary,2=binary)\n        transpose: 0,\n        style: 'Medium Swing'\n    }\n    context: AudioContext;\n    constructor({ context, musicians }: any = {}) {\n        this.context = context || new AudioContext();\n        this.musicians = musicians || [];\n    }\n\n    ready(): Promise<any[]> {\n        return Promise.all([this.resume()].concat(this.musicians.map(m => m.ready)));\n    }\n\n    resume() { // https://goo.gl/7K7WLu\n        return this.context.resume().then(() => this.context);\n    }\n\n    comp(measures, settings) {\n        if (this.pulse) {\n            this.pulse.stop();\n        }\n        settings = Object.assign(this.defaults, settings, { context: this.context });\n        measures = measures.map(m => !Array.isArray(m) ? [m] : m);\n        this.play(measures, settings);\n    }\n\n    play(measures, settings) {\n        this.ready().then(() => {\n            this.pulse = settings.pulse || new Pulse(settings);\n            this.musicians.forEach(musician => musician.play({ pulse: this.pulse, measures, settings }));\n            this.pulse.start();\n        });\n    }\n}\n","/**\n * [![npm version](https://img.shields.io/npm/v/tonal-note.svg)](https://www.npmjs.com/package/tonal-note)\n * [![tonal](https://img.shields.io/badge/tonal-note-yellow.svg)](https://www.npmjs.com/browse/keyword/tonal)\n *\n * `tonal-note` is a collection of functions to manipulate musical notes in scientific notation\n *\n * This is part of [tonal](https://www.npmjs.com/package/tonal) music theory library.\n *\n * ## Usage\n *\n * ```js\n * import * as Note from \"tonal-note\"\n * // or const Note = require(\"tonal-note\")\n * Note.name(\"bb2\") // => \"Bb2\"\n * Note.chroma(\"bb2\") // => 10\n * Note.midi(\"a4\") // => 69\n * Note.freq(\"a4\") // => 440\n * Note.oct(\"G3\") // => 3\n *\n * // part of tonal\n * const Tonal = require(\"tonal\")\n * // or import Note from \"tonal\"\n * Tonal.Note.midi(\"d4\") // => 62\n * ```\n *\n * ## Install\n *\n * [![npm install tonal-note](https://nodei.co/npm/tonal-note.png?mini=true)](https://npmjs.org/package/tonal-note/)\n *\n * ## API Documentation\n *\n * @module Note\n */\n\nvar NAMES = \"C C# Db D D# Eb E F F# Gb G G# Ab A A# Bb B\".split(\" \");\n\n/**\n * Get a list of note names (pitch classes) within a octave\n *\n * @param {string} accTypes - (Optional, by default \" b#\"). A string with the\n * accidentals types: \" \" means no accidental, \"#\" means sharps, \"b\" mean flats,\n * can be conbined (see examples)\n * @return {Array}\n * @example\n * Note.names(\" b\") // => [ \"C\", \"Db\", \"D\", \"Eb\", \"E\", \"F\", \"Gb\", \"G\", \"Ab\", \"A\", \"Bb\", \"B\" ]\n * Note.names(\" #\") // => [ \"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \"F#\", \"G\", \"G#\", \"A\", \"A#\", \"B\" ]\n */\nexport var names = function (accTypes) { return typeof accTypes !== \"string\"\n    ? NAMES.slice()\n    : NAMES.filter(function (n) {\n        var acc = n[1] || \" \";\n        return accTypes.indexOf(acc) !== -1;\n      }); };\n\nvar SHARPS = names(\" #\");\nvar FLATS = names(\" b\");\nvar REGEX = /^([a-gA-G]?)(#{1,}|b{1,}|x{1,}|)(-?\\d*)\\s*(.*)$/;\n\n/**\n * Split a string into tokens related to note parts.\n * It returns an array of strings `[letter, accidental, octave, modifier]`\n *\n * It always returns an array\n *\n * @param {String} str\n * @return {Array} an array of note tokens\n * @example\n * Note.tokenize(\"C#2\") // => [\"C\", \"#\", \"2\", \"\"]\n * Note.tokenize(\"Db3 major\") // => [\"D\", \"b\", \"3\", \"major\"]\n * Note.tokenize(\"major\") // => [\"\", \"\", \"\", \"major\"]\n * Note.tokenize(\"##\") // => [\"\", \"##\", \"\", \"\"]\n * Note.tokenize() // => [\"\", \"\", \"\", \"\"]\n */\nexport function tokenize(str) {\n  if (typeof str !== \"string\") { str = \"\"; }\n  var m = REGEX.exec(str);\n  if (!m) { return null; }\n  return [m[1].toUpperCase(), m[2].replace(/x/g, \"##\"), m[3], m[4]];\n}\n\nvar NO_NOTE = Object.freeze({\n  pc: null,\n  name: null,\n  step: null,\n  alt: null,\n  oct: null,\n  octStr: null,\n  chroma: null,\n  midi: null,\n  freq: null\n});\n\nvar SEMI = [0, 2, 4, 5, 7, 9, 11];\nvar properties = function (str) {\n  var tokens = tokenize(str);\n  if (tokens[0] === \"\" || tokens[3] !== \"\") { return NO_NOTE; }\n  var letter = tokens[0];\n  var acc = tokens[1];\n  var octStr = tokens[2];\n  var p = { letter: letter, acc: acc, octStr: octStr };\n  p.pc = p.letter + p.acc;\n  p.name = p.pc + octStr;\n  p.step = (p.letter.charCodeAt(0) + 3) % 7;\n  p.alt = p.acc[0] === \"b\" ? -p.acc.length : p.acc.length;\n  p.oct = octStr.length ? +octStr : null;\n  p.chroma = (SEMI[p.step] + p.alt + 120) % 12;\n  p.midi = p.oct !== null ? SEMI[p.step] + p.alt + 12 * (p.oct + 1) : null;\n  p.freq = midiToFreq(p.midi);\n  return Object.freeze(p);\n};\n\nvar memo = function (fn, cache) {\n  if ( cache === void 0 ) cache = {};\n\n  return function (str) { return cache[str] || (cache[str] = fn(str)); };\n};\n\n/**\n * Get note properties. It returns an object with the following information:\n *\n * - name {String}: the note name. The letter is always in uppercase\n * - letter {String}: the note letter, always in uppercase\n * - acc {String}: the note accidentals\n * - octave {Number}: the octave or null if not present\n * - pc {String}: the pitch class (letter + accidentals)\n * - step {Number}: number equivalent of the note letter. 0 means C ... 6 means B.\n * - alt {Number}: number equivalent of accidentals (negative are flats, positive sharps)\n * - chroma {Number}: number equivalent of the pitch class, where 0 is C, 1 is C# or Db, 2 is D...\n * - midi {Number}: the note midi number\n * - freq {Number}: the frequency using an equal temperament at 440Hz\n *\n * This function *always* returns an object with all this properties, but if it\"s\n * not a valid note all properties will be null.\n *\n * The returned object can\"t be mutated.\n *\n * @param {String} note - the note name in scientific notation\n * @return {Object} an object with the properties (or an object will all properties\n * set to null if not valid note)\n * @example\n * Note.props(\"fx-3\").name // => \"F##-3\"\n * Note.props(\"invalid\").name // => null\n * Note.props(\"C#3\").oct // => 3\n * Note.props().oct // => null\n */\nexport var props = memo(properties);\n\n/**\n * Given a note name, return the note name or null if not valid note.\n * The note name will ALWAYS have the letter in upercase and accidentals\n * using # or b\n *\n * Can be used to test if a string is a valid note name.\n *\n * @function\n * @param {Pitch|string}\n * @return {string}\n *\n * @example\n * Note.name(\"cb2\") // => \"Cb2\"\n * [\"c\", \"db3\", \"2\", \"g+\", \"gx4\"].map(Note.name) // => [\"C\", \"Db3\", null, null, \"G##4\"]\n */\nexport var name = function (str) { return props(str).name; };\n\n/**\n * Get pitch class of a note. The note can be a string or a pitch array.\n *\n * @function\n * @param {string|Pitch}\n * @return {string} the pitch class\n * @example\n * Note.pc(\"Db3\") // => \"Db\"\n * [\"db3\", \"bb6\", \"fx2\"].map(Note.pc) // => [ \"Db\", \"Bb\", \"F##\"]\n */\nexport var pc = function (str) { return props(str).pc; };\n\n/**\n * Get the note midi number\n * (an alias of tonal-midi `toMidi` function)\n *\n * @function\n * @param {string|Number} note - the note to get the midi number from\n * @return {Integer} the midi number or null if not valid pitch\n * @example\n * Note.midi(\"C4\") // => 60\n * Note.midi(60) // => 60\n * @see midi.toMidi\n */\nexport var midi = function (note) { return props(note).midi || +note || null; };\n\n/**\n * Get the frequency from midi number\n *\n * @param {Number} midi - the note midi number\n * @param {Number} tuning - (Optional) 440 by default\n * @return {Number} the frequency or null if not valid note midi\n */\nexport var midiToFreq = function (midi, tuning) {\n    if ( tuning === void 0 ) tuning = 440;\n\n    return typeof midi === \"number\" ? Math.pow(2, (midi - 69) / 12) * tuning : null;\n};\n\n/**\n * Get the frequency of a note\n *\n * @function\n * @param {string|Number} note - the note name or midi note number\n * @return {Number} the frequency\n * @example\n * Note.freq(\"A4\") // => 440\n * Note.freq(69) // => 440\n */\nexport var freq = function (note) { return props(note).freq || midiToFreq(note); };\n\nvar L2 = Math.log(2);\nvar L440 = Math.log(440);\n/**\n * Get the midi number from a frequency in hertz. The midi number can\n * contain decimals (with two digits precission)\n *\n * @param {Number} frequency\n * @return {Number}\n * @example\n * Note.freqToMidi(220)); //=> 57;\n * Note.freqToMidi(261.62)); //=> 60;\n * Note.freqToMidi(261)); //=> 59.96;\n */\nexport var freqToMidi = function (freq) {\n  var v = 12 * (Math.log(freq) - L440) / L2 + 69;\n  return Math.round(v * 100) / 100;\n};\n\n/**\n * Return the chroma of a note. The chroma is the numeric equivalent to the\n * pitch class, where 0 is C, 1 is C# or Db, 2 is D... 11 is B\n *\n * @param {string} note - the note name\n * @return {Integer} the chroma number\n * @example\n * Note.chroma(\"Cb\") // => 11\n * [\"C\", \"D\", \"E\", \"F\"].map(Note.chroma) // => [0, 2, 4, 5]\n */\nexport var chroma = function (str) { return props(str).chroma; };\n\n/**\n * Get the octave of the given pitch\n *\n * @function\n * @param {string} note - the note\n * @return {Integer} the octave or null if doesn\"t have an octave or not a valid note\n * @example\n * Note.oct(\"C#4\") // => 4\n * Note.oct(\"C\") // => null\n * Note.oct(\"blah\") // => undefined\n */\nexport var oct = function (str) { return props(str).oct; };\n\nvar LETTERS = \"CDEFGAB\";\n/**\n * Given a step number return it\"s letter (0 = C, 1 = D, 2 = E)\n * @param {number} step\n * @return {string} the letter\n * @example\n * Note.stepToLetter(3) // => \"F\"\n */\nexport var stepToLetter = function (step) { return LETTERS[step]; };\n\nvar fillStr = function (s, n) { return Array(n + 1).join(s); };\nvar numToStr = function (num, op) { return (typeof num !== \"number\" ? \"\" : op(num)); };\n\n/**\n * Given an alteration number, return the accidentals\n * @param {Number} alt\n * @return {String}\n * @example\n * Note.altToAcc(-3) // => \"bbb\"\n */\nexport var altToAcc = function (alt) { return numToStr(alt, function (alt) { return (alt < 0 ? fillStr(\"b\", -alt) : fillStr(\"#\", alt)); }); };\n\n/**\n * Creates a note name in scientific notation from note properties,\n * and optionally another note name.\n * It receives an object with:\n * - step: the note step (0 = C, 1 = D, ... 6 = B)\n * - alt: (optional) the alteration. Negative numbers are flats, positive sharps\n * - oct: (optional) the octave\n *\n * Optionally it receives another note as a \"base\", meaning that any prop not explicitly\n * received on the first parameter will be taken from that base note. That way it can be used\n * as an immutable \"set\" operator for a that base note\n *\n * @function\n * @param {Object} props - the note properties\n * @param {String} [baseNote] - note to build the result from. If given, it returns\n * the result of applying the given props to this note.\n * @return {String} the note name in scientific notation or null if not valid properties\n * @example\n * Note.from({ step: 5 }) // => \"A\"\n * Note.from({ step: 1, acc: -1 }) // => \"Db\"\n * Note.from({ step: 2, acc: 2, oct: 2 }) // => \"E##2\"\n * Note.from({ step: 7 }) // => null\n * Note.from({alt: 1, oct: 3}, \"C4\") // => \"C#3\"\n */\nexport var from = function (fromProps, baseNote) {\n  if ( fromProps === void 0 ) fromProps = {};\n  if ( baseNote === void 0 ) baseNote = null;\n\n  var ref = baseNote\n    ? Object.assign({}, props(baseNote), fromProps)\n    : fromProps;\n  var step = ref.step;\n  var alt = ref.alt;\n  var oct = ref.oct;\n  var letter = stepToLetter(step);\n  if (!letter) { return null; }\n  var pc = letter + altToAcc(alt);\n  return oct || oct === 0 ? pc + oct : pc;\n};\n\n/**\n * Deprecated. This is kept for backwards compatibility only.\n * Use Note.from instead\n */\nexport var build = from;\n\n/**\n * Given a midi number, returns a note name. The altered notes will have\n * flats unless explicitly set with the optional `useSharps` parameter.\n *\n * @function\n * @param {number} midi - the midi note number\n * @param {boolean} useSharps - (Optional) set to true to use sharps instead of flats\n * @return {string} the note name\n * @example\n * Note.fromMidi(61) // => \"Db4\"\n * Note.fromMidi(61, true) // => \"C#4\"\n * // it rounds to nearest note\n * Note.fromMidi(61.7) // => \"D4\"\n */\nexport function fromMidi(num, sharps) {\n  num = Math.round(num);\n  var pcs = sharps === true ? SHARPS : FLATS;\n  var pc = pcs[num % 12];\n  var o = Math.floor(num / 12) - 1;\n  return pc + o;\n}\n\n/**\n * Simplify the note: find an enhramonic note with less accidentals.\n *\n * @param {String} note - the note to be simplified\n * @param {boolean} useSameAccType - (optional, true by default) set to true\n * to ensure the returned note has the same accidental types that the given note\n * @return {String} the simplfiied note or null if not valid note\n * @example\n * Note.simplify(\"C##\") // => \"D\"\n * Note.simplify(\"C###\") // => \"D#\"\n * Note.simplify(\"C###\", false) // => \"Eb\"\n * Note.simplify(\"B#4\") // => \"C5\"\n */\nexport var simplify = function (note, sameAcc) {\n  var ref = props(note);\n  var alt = ref.alt;\n  var chroma = ref.chroma;\n  var midi = ref.midi;\n  if (chroma === null) { return null; }\n  var useSharps = sameAcc === false ? alt < 0 : alt > 0;\n  return midi === null\n    ? pc(fromMidi(chroma, useSharps))\n    : fromMidi(midi, useSharps);\n};\n\n/**\n * Get the simplified and enhramonic note of the given one.\n *\n * @param {String} note\n * @return {String} the enhramonic note\n * @example\n * Note.enharmonic(\"Db\") // => \"C#\"\n * Note.enhramonic(\"C\") // => \"C\"\n */\nexport var enharmonic = function (note) { return simplify(note, false); };\n","/**\n * [![npm version](https://img.shields.io/npm/v/tonal-array.svg?style=flat-square)](https://www.npmjs.com/package/tonal-array)\n *\n * Tonal array utilities. Create ranges, sort notes, ...\n *\n * @example\n * import * as Array;\n * Array.sort([\"f\", \"a\", \"c\"]) // => [\"C\", \"F\", \"A\"]\n *\n * @example\n * const Array = require(\"tonal-array)\n * Array.range(1, 4) // => [1, 2, 3, 4]\n *\n * @module Array\n */\nimport { midi, name } from \"tonal-note\";\n\n// ascending range\nfunction ascR(b, n) {\n  for (var a = []; n--; a[n] = n + b){ ; }\n  return a;\n}\n// descending range\nfunction descR(b, n) {\n  for (var a = []; n--; a[n] = b - n){ ; }\n  return a;\n}\n\n/**\n * Create a numeric range\n *\n * @param {Number} from\n * @param {Number} to\n * @return {Array}\n *\n * @example\n * Array.range(-2, 2) // => [-2, -1, 0, 1, 2]\n * Array.range(2, -2) // => [2, 1, 0, -1, -2]\n */\nexport function range(a, b) {\n  return a === null || b === null\n    ? []\n    : a < b ? ascR(a, b - a + 1) : descR(a, a - b + 1);\n}\n/**\n *\n * Rotates a list a number of times. It\"s completly agnostic about the\n * contents of the list.\n *\n * @param {Integer} times - the number of rotations\n * @param {Array} array\n * @return {Array} the rotated array\n * @example\n * Array.rotate(1, [1, 2, 3]) // => [2, 3, 1]\n */\nexport function rotate(times, arr) {\n  var len = arr.length;\n  var n = (times % len + len) % len;\n  return arr.slice(n, len).concat(arr.slice(0, n));\n}\n\n/**\n * Return a copy of the array with the null values removed\n * @function\n * @param {Array} array\n * @return {Array}\n *\n * @example\n * Array.compact([\"a\", \"b\", null, \"c\"]) // => [\"a\", \"b\", \"c\"]\n */\nexport var compact = function (arr) { return arr.filter(function (n) { return n === 0 || n; }); };\n\n// a function that get note heights (with negative number for pitch classes)\nvar height = function (n) {\n  var m = midi(n);\n  return m !== null ? m : midi(n + \"-100\");\n};\n\n/**\n * Sort an array of notes in ascending order\n *\n * @param {String|Array} notes\n * @return {Array} sorted array of notes\n */\nexport function sort(src) {\n  return compact(src.map(name)).sort(function (a, b) { return height(a) > height(b); });\n}\n\n/**\n * Get sorted notes with duplicates removed\n *\n * @function\n * @param {Array} notes\n */\nexport function unique(arr) {\n  return sort(arr).filter(function (n, i, a) { return i === 0 || n !== a[i - 1]; });\n}\n\n/**\n * Randomizes the order of the specified array in-place, using the Fisher–Yates shuffle.\n *\n * @private\n * @function\n * @param {Array|String} arr - the array\n * @return {Array} the shuffled array\n *\n * @example\n * Array.shuffle([\"C\", \"D\", \"E\", \"F\"])\n */\nexport var shuffle = function (arr, rnd) {\n  if ( rnd === void 0 ) rnd = Math.random;\n\n  var i, t;\n  var m = arr.length;\n  while (m) {\n    i = (rnd() * m--) | 0;\n    t = arr[m];\n    arr[m] = arr[i];\n    arr[i] = t;\n  }\n  return arr;\n};\n\n/**\n * Get all permutations of an array\n * http://stackoverflow.com/questions/9960908/permutations-in-javascript\n *\n * @param {Array} array - the array\n * @return {Array<Array>} an array with all the permutations\n */\nexport var permutations = function (arr) {\n  if (arr.length === 0) { return [[]]; }\n  return permutations(arr.slice(1)).reduce(function(acc, perm) {\n    return acc.concat(\n      arr.map(function(e, pos) {\n        var newPerm = perm.slice();\n        newPerm.splice(pos, 0, arr[0]);\n        return newPerm;\n      })\n    );\n  }, []);\n};\n","/**\n * [![npm version](https://img.shields.io/npm/v/tonal-interval.svg)](https://www.npmjs.com/package/tonal-interval)\n * [![tonal](https://img.shields.io/badge/tonal-interval-yellow.svg)](https://www.npmjs.com/browse/keyword/tonal)\n *\n * `tonal-interval` is a collection of functions to create and manipulate music intervals.\n *\n * The intervals are strings in shorthand notation. Two variations are supported:\n *\n * - standard shorthand notation: type and number, for example: \"M3\", \"d-4\"\n * - inverse shorthand notation: number and then type, for example: \"3M\", \"-4d\"\n *\n * The problem with the standard shorthand notation is that some strings can be\n * parsed as notes or intervals, for example: \"A4\" can be note A in 4th octave\n * or an augmented four. To remove ambiguity, the prefered notation in tonal is the\n * inverse shortand notation.\n *\n * This is part of [tonal](https://www.npmjs.com/package/tonal) music theory library.\n *\n * ## Usage\n *\n * ```js\n * // es6\n * import * as Interval from \"tonal-interval\"\n * // es5\n * const Interval = require(\"tonal-interval\")\n * // part of tonal\n * import { Interval } from \"tonal\"\n *\n * Interval.semitones(\"4P\") // => 5\n * Interval.invert(\"3m\") // => \"6M\"\n * Interval.simplify(\"9m\") // => \"2m\"\n * ```\n *\n * ## Install\n *\n * [![npm install tonal-interval](https://nodei.co/npm/tonal-interval.png?mini=true)](https://npmjs.org/package/tonal-interval/)\n *\n * ## API Documentation\n *\n * @module Interval\n */\n// shorthand tonal notation (with quality after number)\nvar IVL_TNL = \"([-+]?\\\\d+)(d{1,4}|m|M|P|A{1,4})\";\n// standard shorthand notation (with quality before number)\nvar IVL_STR = \"(AA|A|P|M|m|d|dd)([-+]?\\\\d+)\";\nvar REGEX = new RegExp(\"^\" + IVL_TNL + \"|\" + IVL_STR + \"$\");\nvar SIZES = [0, 2, 4, 5, 7, 9, 11];\nvar TYPES = \"PMMPPMM\";\nvar CLASSES = [0, 1, 2, 3, 4, 5, 6, 5, 4, 3, 2, 1];\nvar NAMES = \"1P 2m 2M 3m 3M 4P 5P 6m 6M 7m 7M 8P\".split(\" \");\n\n/**\n * List basic (perfect, major, minor) interval names within a octave\n * @param {String} qualities - (Optional, default \"PMm\") the valid types\n * @return {Array} the interval names\n * @example\n * Interval.names() // => [ \"1P\", \"2m\", \"2M\", \"3m\", \"3M\", \"4P\", \"5P\", \"6m\", \"6M\", \"7m\", \"7M\", \"8P\" ]\n * Interval.names(\"P\") // => [ \"1P\", \"4P\", \"5P\", \"8P\" ]\n * Interval.names(\"PM\") // => [ \"1P\", \"2M\", \"3M\", \"4P\", \"5P\", \"6M\", \"7M\", \"8P\" ]\n * Interval.names(\"Pm\") // => [ \"1P\", \"2m\", \"3m\", \"4P\", \"5P\", \"6m\", \"7m\", \"8P\" ]\n * Interval.names(\"d\") // => []\n */\nexport var names = function (types) { return typeof types !== \"string\"\n    ? NAMES.slice()\n    : NAMES.filter(function (n) { return types.indexOf(n[1]) !== -1; }); };\n\nexport var tokenize = function (str) {\n  var m = REGEX.exec(str);\n  return m === null ? null : m[1] ? [m[1], m[2]] : [m[4], m[3]];\n};\n\nvar NO_IVL = Object.freeze({\n  name: null,\n  num: null,\n  q: null,\n  step: null,\n  alt: null,\n  dir: null,\n  type: null,\n  simple: null,\n  semitones: null,\n  chroma: null\n});\n\nvar fillStr = function (s, n) { return Array(Math.abs(n) + 1).join(s); };\n\nvar qToAlt = function (type, q) {\n  if (q === \"M\" && type === \"M\") { return 0; }\n  if (q === \"P\" && type === \"P\") { return 0; }\n  if (q === \"m\" && type === \"M\") { return -1; }\n  if (/^A+$/.test(q)) { return q.length; }\n  if (/^d+$/.test(q)) { return type === \"P\" ? -q.length : -q.length - 1; }\n  return null;\n};\n\nvar altToQ = function (type, alt) {\n  if (alt === 0) { return type === \"M\" ? \"M\" : \"P\"; }\n  else if (alt === -1 && type === \"M\") { return \"m\"; }\n  else if (alt > 0) { return fillStr(\"A\", alt); }\n  else if (alt < 0) { return fillStr(\"d\", type === \"P\" ? alt : alt + 1); }\n  else { return null; }\n};\n\nvar numToStep = function (num) { return (Math.abs(num) - 1) % 7; };\n\nvar properties = function (str) {\n  var t = tokenize(str);\n  if (t === null) { return NO_IVL; }\n  var p = { num: +t[0], q: t[1] };\n  p.step = numToStep(p.num);\n  p.type = TYPES[p.step];\n  if (p.type === \"M\" && p.q === \"P\") { return NO_IVL; }\n\n  p.name = \"\" + p.num + p.q;\n  p.dir = p.num < 0 ? -1 : 1;\n  p.simple = p.num === 8 || p.num === -8 ? p.num : p.dir * (p.step + 1);\n  p.alt = qToAlt(p.type, p.q);\n  p.oct = Math.floor((Math.abs(p.num) - 1) / 7);\n  p.semitones = p.dir * (SIZES[p.step] + p.alt + 12 * p.oct);\n  p.chroma = ((p.dir * (SIZES[p.step] + p.alt)) % 12 + 12) % 12;\n  return Object.freeze(p);\n};\n\nvar cache = {};\n/**\n * Get interval properties. It returns an object with:\n *\n * - name: name\n * - num: number\n * - q: quality\n * - step: step\n * - alt: alteration\n * - dir: direction (1 ascending, -1 descending)\n * - type: \"P\" or \"M\" for perfectable or majorable\n * - simple: the simplified number\n * - semitones: the size in semitones\n * - chroma: the interval chroma\n * - ic: the interval class\n *\n * @function\n * @param {String} interval - the interval\n * @return {Object} the interval in the form [number, alt]\n */\nexport function props(str) {\n  if (typeof str !== \"string\") { return NO_IVL; }\n  return cache[str] || (cache[str] = properties(str));\n}\n\n/**\n * Get the number of the interval\n *\n * @function\n * @param {String} interval - the interval\n * @return {Integer}\n * @example\n * Interval.num(\"m2\") // => 2\n * Interval.num(\"P9\") // => 9\n * Interval.num(\"P-4\") // => -4\n */\nexport var num = function (str) { return props(str).num; };\n\n/**\n * Get interval name. Can be used to test if it\"s an interval. It accepts intervals\n * as pitch or string in shorthand notation or tonal notation. It returns always\n * intervals in tonal notation.\n *\n * @function\n * @param {String} interval - the interval string or array\n * @return {String} the interval name or null if not valid interval\n * @example\n * Interval.name(\"m-3\") // => \"-3m\"\n * Interval.name(\"3\") // => null\n */\nexport var name = function (str) { return props(str).name; };\n\n/**\n * Get size in semitones of an interval\n *\n * @function\n * @param {String} ivl\n * @return {Integer} the number of semitones or null if not an interval\n * @example\n * import { semitones } from \"tonal-interval\"\n * semitones(\"P4\") // => 5\n * // or using tonal\n * Tonal.Interval.semitones(\"P5\") // => 7\n */\nexport var semitones = function (str) { return props(str).semitones; };\n\n/**\n * Get the chroma of the interval. The chroma is a number between 0 and 7\n * that represents the position within an octave (pitch set)\n *\n * @function\n * @param {String} str\n * @return {Number}\n */\nexport var chroma = function (str) { return props(str).chroma; };\n\n/**\n * Get the [interval class](https://en.wikipedia.org/wiki/Interval_class)\n * number of a given interval.\n *\n * In musical set theory, an interval class is the shortest distance in\n * pitch class space between two unordered pitch classes\n *\n * @function\n * @param {String|Integer} interval - the interval or the number of semitones\n * @return {Integer} A value between 0 and 6\n *\n * @example\n * Interval.ic(\"P8\") // => 0\n * Interval.ic(\"m6\") // => 4\n * Interval.ic(10) // => 2\n * [\"P1\", \"M2\", \"M3\", \"P4\", \"P5\", \"M6\", \"M7\"].map(ic) // => [0, 2, 4, 5, 5, 3, 1]\n */\nexport var ic = function (ivl) {\n  if (typeof ivl === \"string\") { ivl = props(ivl).chroma; }\n  return typeof ivl === \"number\" ? CLASSES[ivl % 12] : null;\n};\n\n/**\n * Given a interval property object, get the interval name\n *\n * The properties must contain a `num` *or* `step`, and `alt`:\n *\n * - num: the interval number\n * - step: the interval step (overrides the num property)\n * - alt: the interval alteration\n * - oct: (Optional) the number of octaves\n * - dir: (Optional) the direction\n *\n * @function\n * @param {Object} props - the interval property object\n *\n * @return {String} the interval name\n * @example\n * Interval.build({ step: 1, alt: -1, oct: 0, dir: 1 }) // => \"1d\"\n * Interval.build({ num: 9, alt: -1 }) // => \"9m\"\n */\nexport var build = function (ref) {\n  if ( ref === void 0 ) ref = {};\n  var num = ref.num;\n  var step = ref.step;\n  var alt = ref.alt;\n  var oct = ref.oct; if ( oct === void 0 ) oct = 1;\n  var dir = ref.dir;\n\n  if (step !== undefined) { num = step + 1 + 7 * oct; }\n  if (num === undefined) { return null; }\n\n  var d = dir < 0 ? \"-\" : \"\";\n  var type = TYPES[numToStep(num)];\n  return d + num + altToQ(type, alt);\n};\n\n/**\n * Get the simplified version of an interval.\n *\n * @function\n * @param {String} interval - the interval to simplify\n * @return {String} the simplified interval\n *\n * @example\n * Interval.simplify(\"9M\") // => \"2M\"\n * [\"8P\", \"9M\", \"10M\", \"11P\", \"12P\", \"13M\", \"14M\", \"15P\"].map(Interval.simplify)\n * // => [ \"8P\", \"2M\", \"3M\", \"4P\", \"5P\", \"6M\", \"7M\", \"8P\" ]\n * Interval.simplify(\"2M\") // => \"2M\"\n * Interval.simplify(\"-2M\") // => \"7m\"\n */\nexport var simplify = function (str) {\n  var p = props(str);\n  if (p === NO_IVL) { return null; }\n  return p.simple + p.q;\n};\n\n/**\n * Get the inversion (https://en.wikipedia.org/wiki/Inversion_(music)#Intervals)\n * of an interval.\n *\n * @function\n * @param {String} interval - the interval to invert in interval shorthand\n * notation or interval array notation\n * @return {String} the inverted interval\n *\n * @example\n * Interval.invert(\"3m\") // => \"6M\"\n * Interval.invert(\"2M\") // => \"7m\"\n */\nexport var invert = function (str) {\n  var p = props(str);\n  if (p === NO_IVL) { return null; }\n  var step = (7 - p.step) % 7;\n  var alt = p.type === \"P\" ? -p.alt : -(p.alt + 1);\n  return build({ step: step, alt: alt, oct: p.oct, dir: p.dir });\n};\n\n// interval numbers\nvar IN = [1, 2, 2, 3, 3, 4, 5, 5, 6, 6, 7, 7];\n// interval qualities\nvar IQ = \"P m M m M P d P m M m M\".split(\" \");\n\n/**\n * Get interval name from semitones number. Since there are several interval\n * names for the same number, the name it\"s arbitraty, but deterministic.\n *\n * @function\n * @param {Integer} num - the number of semitones (can be negative)\n * @return {String} the interval name\n * @example\n * import { fromSemitones } from \"tonal-interval\"\n * fromSemitones(7) // => \"5P\"\n * // or using tonal\n * Tonal.Distance.fromSemitones(-7) // => \"-5P\"\n */\nexport var fromSemitones = function (num) {\n  var d = num < 0 ? -1 : 1;\n  var n = Math.abs(num);\n  var c = n % 12;\n  var o = Math.floor(n / 12);\n  return d * (IN[c] + 7 * o) + IQ[c];\n};\n","/**\n * [![npm version](https://img.shields.io/npm/v/tonal-distance.svg)](https://www.npmjs.com/package/tonal-distance)\n * [![tonal](https://img.shields.io/badge/tonal-distance-yellow.svg)](https://github.com/danigb/tonal/tree/master/packages/tonal/distance)\n *\n * Transpose notes by intervals and find distances between notes\n *\n * @example\n * // es6\n * import * as Distance from \"tonal-distance\"\n * Distance.interval(\"C3\", \"C4\") // => \"1P\"\n *\n * @example\n * // es6 import selected functions\n * import { interval, semitones, transpose } from \"tonal-distance\"\n *\n * semitones(\"C\" ,\"D\") // => 2\n * interval(\"C4\", \"G4\") // => \"5P\"\n * transpose(\"C4\", \"P5\") // => \"G4\"\n *\n * @example\n * // included in tonal facade\n * const Tonal = require(\"tonal\");\n * Tonal.Distance.transpose(\"C4\", \"P5\")\n * Tonal.Distance.transposeBy(\"P5\", \"C4\")\n *\n * @module Distance\n */\nimport { props as noteProps, build as fromNote } from \"tonal-note\";\nimport { props as iprops, build as ibuild } from \"tonal-interval\";\n\n// Map from letter step to number of fifths starting from \"C\":\n// { C: 0, D: 2, E: 4, F: -1, G: 1, A: 3, B: 5 }\nvar FIFTHS = [0, 2, 4, -1, 1, 3, 5];\n\n// Given a number of fifths, return the octaves they span\nvar fOcts = function (f) { return Math.floor(f * 7 / 12); };\n\n// Get the number of octaves it span each step\nvar FIFTH_OCTS = FIFTHS.map(fOcts);\n\nvar encode = function (ref) {\n  var step = ref.step;\n  var alt = ref.alt;\n  var oct = ref.oct;\n  var dir = ref.dir; if ( dir === void 0 ) dir = 1;\n\n  var f = FIFTHS[step] + 7 * alt;\n  if (oct === null) { return [dir * f]; }\n  var o = oct - FIFTH_OCTS[step] - 4 * alt;\n  return [dir * f, dir * o];\n};\n\n// We need to get the steps from fifths\n// Fifths for CDEFGAB are [ 0, 2, 4, -1, 1, 3, 5 ]\n// We add 1 to fifths to avoid negative numbers, so:\n// for [\"F\", \"C\", \"G\", \"D\", \"A\", \"E\", \"B\"] we have:\nvar STEPS = [3, 0, 4, 1, 5, 2, 6];\n\n// Return the number of fifths as if it were unaltered\nfunction unaltered(f) {\n  var i = (f + 1) % 7;\n  return i < 0 ? 7 + i : i;\n}\n\nvar decode = function (f, o, dir) {\n  var step = STEPS[unaltered(f)];\n  var alt = Math.floor((f + 1) / 7);\n  if (o === undefined) { return { step: step, alt: alt, dir: dir }; }\n  var oct = o + 4 * alt + FIFTH_OCTS[step];\n  return { step: step, alt: alt, oct: oct, dir: dir };\n};\n\nvar memo = function (fn, cache) {\n  if ( cache === void 0 ) cache = {};\n\n  return function (str) { return cache[str] || (cache[str] = fn(str)); };\n};\n\nvar encoder = function (props) { return memo(function (str) {\n    var p = props(str);\n    return p.name === null ? null : encode(p);\n  }); };\n\nvar encodeNote = encoder(noteProps);\nvar encodeIvl = encoder(iprops);\n\n/**\n * Transpose a note by an interval. The note can be a pitch class.\n *\n * This function can be partially applied.\n *\n * @param {String} note\n * @param {String} interval\n * @return {String} the transposed note\n * @example\n * import { tranpose } from \"tonal-distance\"\n * transpose(\"d3\", \"3M\") // => \"F#3\"\n * // it works with pitch classes\n * transpose(\"D\", \"3M\") // => \"F#\"\n * // can be partially applied\n * [\"C\", \"D\", \"E\", \"F\", \"G\"].map(transpose(\"M3)) // => [\"E\", \"F#\", \"G#\", \"A\", \"B\"]\n */\nexport function transpose(note, interval) {\n  if (arguments.length === 1) { return function (i) { return transpose(note, i); }; }\n  var n = encodeNote(note);\n  var i = encodeIvl(interval);\n  if (n === null || i === null) { return null; }\n  var tr = n.length === 1 ? [n[0] + i[0]] : [n[0] + i[0], n[1] + i[1]];\n  return fromNote(decode(tr[0], tr[1]));\n}\n\n/**\n * Transpose a pitch class by a number of perfect fifths.\n *\n * It can be partially applied.\n *\n * @function\n * @param {String} pitchClass - the pitch class\n * @param {Integer} fifhts - the number of fifths\n * @return {String} the transposed pitch class\n *\n * @example\n * import { trFifths } from \"tonal-transpose\"\n * [0, 1, 2, 3, 4].map(trFifths(\"C\")) // => [\"C\", \"G\", \"D\", \"A\", \"E\"]\n * // or using tonal\n * Distance.trFifths(\"G4\", 1) // => \"D\"\n */\n\nexport function trFifths(note, fifths) {\n  if (arguments.length === 1) { return function (f) { return trFifths(note, f); }; }\n  var n = encodeNote(note);\n  if (n === null) { return null; }\n  return fromNote(decode(n[0] + fifths));\n}\n\n/**\n * Get the distance in fifths between pitch classes\n *\n * Can be partially applied.\n *\n * @param {String} to - note or pitch class\n * @param {String} from - note or pitch class\n */\nexport function fifths(from, to) {\n  if (arguments.length === 1) { return function (to) { return fifths(from, to); }; }\n  var f = encodeNote(from);\n  var t = encodeNote(to);\n  if (t === null || f === null) { return null; }\n  return t[0] - f[0];\n}\n\n/**\n * The same as transpose with the arguments inverted.\n *\n * Can be partially applied.\n *\n * @param {String} note\n * @param {String} interval\n * @return {String} the transposed note\n * @example\n * import { tranposeBy } from \"tonal-distance\"\n * transposeBy(\"3m\", \"5P\") // => \"7m\"\n */\nexport function transposeBy(interval, note) {\n  if (arguments.length === 1) { return function (n) { return transpose(n, interval); }; }\n  return transpose(note, interval);\n}\n\nvar isDescending = function (e) { return e[0] * 7 + e[1] * 12 < 0; };\nvar decodeIvl = function (i) { return isDescending(i) ? decode(-i[0], -i[1], -1) : decode(i[0], i[1], 1); };\n\nexport function addIntervals(ivl1, ivl2, dir) {\n  var i1 = encodeIvl(ivl1);\n  var i2 = encodeIvl(ivl2);\n  if (i1 === null || i2 === null) { return null; }\n  var i = [i1[0] + dir * i2[0], i1[1] + dir * i2[1]];\n  return ibuild(decodeIvl(i));\n}\n\n/**\n * Add two intervals\n *\n * Can be partially applied.\n *\n * @param {String} interval1\n * @param {String} interval2\n * @return {String} the resulting interval\n * @example\n * import { add } from \"tonal-distance\"\n * add(\"3m\", \"5P\") // => \"7m\"\n */\nexport function add(ivl1, ivl2) {\n  if (arguments.length === 1) { return function (i2) { return add(ivl1, i2); }; }\n  return addIntervals(ivl1, ivl2, 1);\n}\n\n/**\n * Subtract two intervals\n *\n * Can be partially applied\n *\n * @param {String} minuend\n * @param {String} subtrahend\n * @return {String} interval diference\n */\nexport function subtract(ivl1, ivl2) {\n  if (arguments.length === 1) { return function (i2) { return add(ivl1, i2); }; }\n  return addIntervals(ivl1, ivl2, -1);\n}\n\n/**\n * Find the interval between two pitches. It works with pitch classes\n * (both must be pitch classes and the interval is always ascending)\n *\n * Can be partially applied\n *\n * @param {String} from - distance from\n * @param {String} to - distance to\n * @return {String} the interval distance\n *\n * @example\n * import { interval } from \"tonal-distance\"\n * interval(\"C2\", \"C3\") // => \"P8\"\n * interval(\"G\", \"B\") // => \"M3\"\n *\n * @example\n * import * as Distance from \"tonal-distance\"\n * Distance.interval(\"M2\", \"P5\") // => \"P4\"\n */\nexport function interval(from, to) {\n  if (arguments.length === 1) { return function (t) { return interval(from, t); }; }\n  var f = encodeNote(from);\n  var t = encodeNote(to);\n  if (f === null || t === null || f.length !== t.length) { return null; }\n  var d =\n    f.length === 1\n      ? [t[0] - f[0], -Math.floor((t[0] - f[0]) * 7 / 12)]\n      : [t[0] - f[0], t[1] - f[1]];\n  return ibuild(decodeIvl(d));\n}\n\n/**\n * Get the distance between two notes in semitones\n *\n * @param {String|Pitch} from - first note\n * @param {String|Pitch} to - last note\n * @return {Integer} the distance in semitones or null if not valid notes\n * @example\n * import { semitones } from \"tonal-distance\"\n * semitones(\"C3\", \"A2\") // => -3\n * // or use tonal\n * Tonal.Distance.semitones(\"C3\", \"G3\") // => 7\n */\nexport function semitones(from, to) {\n  if (arguments.length === 1) { return function (t) { return semitones(from, t); }; }\n  var f = noteProps(from);\n  var t = noteProps(to);\n  return f.midi !== null && t.midi !== null\n    ? t.midi - f.midi\n    : f.chroma !== null && t.chroma !== null\n      ? (t.chroma - f.chroma + 12) % 12\n      : null;\n}\n","/**\n * [![npm version](https://img.shields.io/npm/v/tonal-pcset.svg?style=flat-square)](https://www.npmjs.com/package/tonal-pcset)\n * [![tonal](https://img.shields.io/badge/tonal-pcset-yellow.svg?style=flat-square)](https://www.npmjs.com/browse/keyword/tonal)\n *\n * `tonal-pcset` is a collection of functions to work with pitch class sets, oriented\n * to make comparations (isEqual, isSubset, isSuperset)\n *\n * This is part of [tonal](https://www.npmjs.com/package/tonal) music theory library.\n *\n * You can install via npm: `npm i --save tonal-pcset`\n *\n * ```js\n * // es6\n * import PcSet from \"tonal-pcset\"\n * var PcSet = require(\"tonal-pcset\")\n *\n * PcSet.isEqual(\"c2 d5 e6\", \"c6 e3 d1\") // => true\n * ```\n *\n * ## API documentation\n *\n * @module PcSet\n */\nimport { chroma as notechr } from \"tonal-note\";\nimport { chroma as ivlchr } from \"tonal-interval\";\nimport { rotate, range, compact } from \"tonal-array\";\n\nvar chr = function (str) { return notechr(str) || ivlchr(str) || 0; };\nvar pcsetNum = function (set) { return parseInt(chroma(set), 2); };\nvar clen = function (chroma) { return chroma.replace(/0/g, \"\").length; };\n\n/**\n * Get chroma of a pitch class set. A chroma identifies each set uniquely.\n * It\"s a 12-digit binary each presenting one semitone of the octave.\n *\n * Note that this function accepts a chroma as parameter and return it\n * without modification.\n *\n * @param {Array|String} set - the pitch class set\n * @return {String} a binary representation of the pitch class set\n * @example\n * PcSet.chroma([\"C\", \"D\", \"E\"]) // => \"1010100000000\"\n */\nexport function chroma(set) {\n  if (isChroma(set)) { return set; }\n  if (!Array.isArray(set)) { return \"\"; }\n  var b = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n  set.map(chr).forEach(function (i) {\n    b[i] = 1;\n  });\n  return b.join(\"\");\n}\n\nvar all = null;\n/**\n * Get a list of all possible chromas (all possible scales)\n * More information: http://allthescales.org/\n * @return {Array} an array of possible chromas from '10000000000' to '11111111111'\n *\n */\nexport function chromas(n) {\n  all = all || range(2048, 4095).map(function (n) { return n.toString(2); });\n  return typeof n === \"number\"\n    ? all.filter(function (chroma) { return clen(chroma) === n; })\n    : all.slice();\n}\n\n/**\n * Given a a list of notes or a pcset chroma, produce the rotations\n * of the chroma discarding the ones that starts with \"0\"\n *\n * This is used, for example, to get all the modes of a scale.\n *\n * @param {Array|String} set - the list of notes or pitchChr of the set\n * @param {Boolean} normalize - (Optional, true by default) remove all\n * the rotations that starts with \"0\"\n * @return {Array<String>} an array with all the modes of the chroma\n *\n * @example\n * PcSet.modes([\"C\", \"D\", \"E\"]).map(PcSet.intervals)\n */\nexport function modes(set, normalize) {\n  normalize = normalize !== false;\n  var binary = chroma(set).split(\"\");\n  return compact(\n    binary.map(function(_, i) {\n      var r = rotate(i, binary);\n      return normalize && r[0] === \"0\" ? null : r.join(\"\");\n    })\n  );\n}\n\nvar REGEX = /^[01]{12}$/;\n/**\n * Test if the given string is a pitch class set chroma.\n * @param {String} chroma - the pitch class set chroma\n * @return {Boolean} true if its a valid pcset chroma\n * @example\n * PcSet.isChroma(\"101010101010\") // => true\n * PcSet.isChroma(\"101001\") // => false\n */\nexport function isChroma(set) {\n  return REGEX.test(set);\n}\n\nvar IVLS = \"1P 2m 2M 3m 3M 4P 5d 5P 6m 6M 7m 7M\".split(\" \");\n/**\n * Given a pcset (notes or chroma) return it\"s intervals\n * @param {String|Array} pcset - the pitch class set (notes or chroma)\n * @return {Array} intervals or empty array if not valid pcset\n * @example\n * PcSet.intervals(\"1010100000000\") => [\"1P\", \"2M\", \"3M\"]\n */\nexport function intervals(set) {\n  if (!isChroma(set)) { return []; }\n  return compact(\n    set.split(\"\").map(function(d, i) {\n      return d === \"1\" ? IVLS[i] : null;\n    })\n  );\n}\n\n/**\n * Test if two pitch class sets are identical\n *\n * @param {Array|String} set1 - one of the pitch class sets\n * @param {Array|String} set2 - the other pitch class set\n * @return {Boolean} true if they are equal\n * @example\n * PcSet.isEqual([\"c2\", \"d3\"], [\"c5\", \"d2\"]) // => true\n */\nexport function isEqual(s1, s2) {\n  if (arguments.length === 1) { return function (s) { return isEqual(s1, s); }; }\n  return chroma(s1) === chroma(s2);\n}\n\n/**\n * Create a function that test if a collection of notes is a\n * subset of a given set\n *\n * The function can be partially applied\n *\n * @param {Array|String} set - an array of notes or a chroma set string to test against\n * @param {Array|String} notes - an array of notes or a chroma set\n * @return {boolean} true if notes is a subset of set, false otherwise\n * @example\n * const inCMajor = PcSet.isSubsetOf([\"C\", \"E\", \"G\"])\n * inCMajor([\"e6\", \"c4\"]) // => true\n * inCMajor([\"e6\", \"c4\", \"d3\"]) // => false\n */\nexport function isSubsetOf(set, notes) {\n  if (arguments.length > 1) { return isSubsetOf(set)(notes); }\n  set = pcsetNum(set);\n  return function(notes) {\n    notes = pcsetNum(notes);\n    return notes !== set && (notes & set) === notes;\n  };\n}\n\n/**\n * Create a function that test if a collectio of notes is a\n * superset of a given set (it contains all notes and at least one more)\n *\n * @param {Array|String} set - an array of notes or a chroma set string to test against\n * @param {Array|String} notes - an array of notes or a chroma set\n * @return {boolean} true if notes is a superset of set, false otherwise\n * @example\n * const extendsCMajor = PcSet.isSupersetOf([\"C\", \"E\", \"G\"])\n * extendsCMajor([\"e6\", \"a\", \"c4\", \"g2\"]) // => true\n * extendsCMajor([\"c6\", \"e4\", \"g3\"]) // => false\n */\nexport function isSupersetOf(set, notes) {\n  if (arguments.length > 1) { return isSupersetOf(set)(notes); }\n  set = pcsetNum(set);\n  return function(notes) {\n    notes = pcsetNum(notes);\n    return notes !== set && (notes | set) === notes;\n  };\n}\n\n/**\n * Test if a given pitch class set includes a note\n * @param {Array|String} set - the base set to test against\n * @param {String|Pitch} note - the note to test\n * @return {Boolean} true if the note is included in the pcset\n * @example\n * PcSet.includes([\"C\", \"D\", \"E\"], \"C4\") // => true\n * PcSet.includes([\"C\", \"D\", \"E\"], \"C#4\") // => false\n */\nexport function includes(set, note) {\n  if (arguments.length > 1) { return includes(set)(note); }\n  set = chroma(set);\n  return function(note) {\n    return set[chr(note)] === \"1\";\n  };\n}\n\n/**\n * Filter a list with a pitch class set\n *\n * @param {Array|String} set - the pitch class set notes\n * @param {Array|String} notes - the note list to be filtered\n * @return {Array} the filtered notes\n *\n * @example\n * PcSet.filter([\"C\", \"D\", \"E\"], [\"c2\", \"c#2\", \"d2\", \"c3\", \"c#3\", \"d3\"]) // => [ \"c2\", \"d2\", \"c3\", \"d3\" ])\n * PcSet.filter([\"C2\"], [\"c2\", \"c#2\", \"d2\", \"c3\", \"c#3\", \"d3\"]) // => [ \"c2\", \"c3\" ])\n */\nexport function filter(set, notes) {\n  if (arguments.length === 1) { return function (n) { return filter(set, n); }; }\n  return notes.filter(includes(set));\n}\n","/**\n * [![npm version](https://img.shields.io/npm/v/tonal-dictionary.svg)](https://www.npmjs.com/package/tonal-dictionary)\n *\n * `tonal-dictionary` contains a dictionary of musical scales and chords\n *\n * This is part of [tonal](https://www.npmjs.com/package/tonal) music theory library.\n *\n * @example\n * // es6\n * import * as Dictionary from \"tonal-dictionary\"\n * // es5\n * const Dictionary = require(\"tonal-dictionary\")\n *\n * @example\n * Dictionary.chord(\"Maj7\") // => [\"1P\", \"3M\", \"5P\", \"7M\"]\n *\n * @module Dictionary\n */\nimport sdata from \"./data/scales.json\";\nimport cdata from \"./data/chords.json\";\nimport { chroma } from \"tonal-pcset\";\n\nexport var dictionary = function (raw) {\n  var keys = Object.keys(raw).sort();\n  var data = [];\n  var index = [];\n\n  var add = function (name, ivls, chroma) {\n    data[name] = ivls;\n    index[chroma] = index[chroma] || [];\n    index[chroma].push(name);\n  };\n\n  keys.forEach(function (key) {\n    var ivls = raw[key][0].split(\" \");\n    var alias = raw[key][1];\n    var chr = chroma(ivls);\n\n    add(key, ivls, chr);\n    if (alias) { alias.forEach(function (a) { return add(a, ivls, chr); }); }\n  });\n  var allKeys = Object.keys(data).sort();\n\n  var dict = function (name) { return data[name]; };\n  dict.names = function (p) {\n    if (typeof p === \"string\") { return (index[p] || []).slice(); }\n    else { return (p === true ? allKeys : keys).slice(); }\n  };\n  return dict;\n};\n\nexport var combine = function (a, b) {\n  var dict = function (name) { return a(name) || b(name); };\n  dict.names = function (p) { return a.names(p).concat(b.names(p)); };\n  return dict;\n};\n\n/**\n * A dictionary of scales: a function that given a scale name (without tonic)\n * returns an array of intervals\n *\n * @function\n * @param {String} name\n * @return {Array} intervals\n * @example\n * import { scale } from \"tonal-dictionary\"\n * scale(\"major\") // => [\"1P\", \"2M\", ...]\n * scale.names(); // => [\"major\", ...]\n */\nexport var scale = dictionary(sdata);\n\n/**\n * A dictionary of chords: a function that given a chord type\n * returns an array of intervals\n *\n * @function\n * @param {String} type\n * @return {Array} intervals\n * @example\n * import { chord } from \"tonal-dictionary\"\n * chord(\"Maj7\") // => [\"1P\", \"3M\", ...]\n * chord.names(); // => [\"Maj3\", ...]\n */\nexport var chord = dictionary(cdata);\nexport var pcset = combine(scale, chord);\n","/**\n * [![npm version](https://img.shields.io/npm/v/tonal-scale.svg?style=flat-square)](https://www.npmjs.com/package/tonal-scale)\n *\n * A scale is a collection of pitches in ascending or descending order.\n *\n * This module provides functions to get and manipulate scales.\n *\n * @example\n * // es6\n * import * as Scale from \"tonal-scale\"\n * // es5\n * const Scale = require(\"tonal-scale\");\n *\n * @example\n * Scale.notes(\"Ab bebop\") // => [ \"Ab\", \"Bb\", \"C\", \"Db\", \"Eb\", \"F\", \"Gb\", \"G\" ]\n * Scale.names() => [\"major\", \"minor\", ...]\n * @module Scale\n */\nimport { name as noteName, pc } from \"tonal-note\";\nimport {\n  modes as pcsetModes,\n  chroma,\n  isSubsetOf,\n  isSupersetOf\n} from \"tonal-pcset\";\nimport { transpose } from \"tonal-distance\";\nimport { scale, chord } from \"tonal-dictionary\";\nimport { compact, unique, rotate } from \"tonal-array\";\n\nvar NO_SCALE = Object.freeze({\n  name: null,\n  intervals: [],\n  names: [],\n  chroma: null,\n  setnum: null\n});\n\nvar properties = function (name) {\n  var intervals = scale(name);\n  if (!intervals) { return NO_SCALE; }\n  var s = { intervals: intervals, name: name };\n  s.chroma = chroma(intervals);\n  s.setnum = parseInt(s.chroma, 2);\n  s.names = scale.names(s.chroma);\n  return Object.freeze(s);\n};\n\nvar memoize = function (fn, cache) { return function (str) { return cache[str] || (cache[str] = fn(str)); }; };\n\n/**\n * Get scale properties. It returns an object with:\n * - name: the scale name\n * - names: a list with all possible names (includes the current)\n * - intervals: an array with the scale intervals\n * - chroma:  scale croma (see pcset)\n * - setnum: scale chroma number\n *\n * @function\n * @param {String} name - the scale name (without tonic)\n * @return {Object}\n */\nexport var props = memoize(properties, {});\n\n/**\n * Return the available scale names\n *\n * @function\n * @param {boolean} aliases - true to include aliases\n * @return {Array} the scale names\n *\n * @example\n * Scale.names() // => [\"maj7\", ...]\n */\nexport var names = scale.names;\n\n/**\n * Given a scale name, return its intervals. The name can be the type and\n * optionally the tonic (which is ignored)\n *\n * It retruns an empty array when no scale found\n *\n * @function\n * @param {String} name - the scale name (tonic and type, tonic is optional)\n * @return {Array<String>} the scale intervals if is a known scale or an empty\n * array if no scale found\n * @example\n * Scale.intervals(\"major\") // => [ \"1P\", \"2M\", \"3M\", \"4P\", \"5P\", \"6M\", \"7M\" ]\n */\nexport var intervals = function (name) {\n  var p = tokenize(name);\n  return props(p[1]).intervals;\n};\n\n/**\n * Get the notes (pitch classes) of a scale.\n *\n * Note that it always returns an array, and the values are only pitch classes.\n *\n * @function\n * @param {String} tonic\n * @param {String} nameOrTonic - the scale name or tonic (if 2nd param)\n * @param {String} [name] - the scale name without tonic\n * @return {Array} a pitch classes array\n *\n * @example\n * Scale.notes(\"C\", \"major\") // => [ \"C\", \"D\", \"E\", \"F\", \"G\", \"A\", \"B\" ]\n * Scale.notes(\"C major\") // => [ \"C\", \"D\", \"E\", \"F\", \"G\", \"A\", \"B\" ]\n * Scale.notes(\"C4\", \"major\") // => [ \"C\", \"D\", \"E\", \"F\", \"G\", \"A\", \"B\" ]\n * Scale.notes(\"A4\", \"no-scale\") // => []\n * Scale.notes(\"blah\", \"major\") // => []\n */\nexport function notes(nameOrTonic, name) {\n  var p = tokenize(nameOrTonic);\n  name = name || p[1];\n  return intervals(name).map(transpose(p[0]));\n}\n\n/**\n * Check if the given name is a known scale from the scales dictionary\n *\n * @function\n * @param {String} name - the scale name\n * @return {Boolean}\n */\nexport function exists(name) {\n  var p = tokenize(name);\n  return scale(p[1]) !== undefined;\n}\n\n/**\n * Given a string with a scale name and (optionally) a tonic, split\n * that components.\n *\n * It retuns an array with the form [ name, tonic ] where tonic can be a\n * note name or null and name can be any arbitrary string\n * (this function doesn\"t check if that scale name exists)\n *\n * @function\n * @param {String} name - the scale name\n * @return {Array} an array [tonic, name]\n * @example\n * Scale.tokenize(\"C mixolydean\") // => [\"C\", \"mixolydean\"]\n * Scale.tokenize(\"anything is valid\") // => [\"\", \"anything is valid\"]\n * Scale.tokenize() // => [\"\", \"\"]\n */\nexport function tokenize(str) {\n  if (typeof str !== \"string\") { return [\"\", \"\"]; }\n  var i = str.indexOf(\" \");\n  var tonic = noteName(str.substring(0, i)) || noteName(str) || \"\";\n  var name = tonic !== \"\" ? str.substring(tonic.length + 1) : str;\n  return [tonic, name.length ? name : \"\"];\n}\n\n/**\n * Find mode names of a scale\n *\n * @function\n * @param {String} name - scale name\n */\nexport var modeNames = function (name) {\n  var ivls = intervals(name);\n  var tonics = notes(name);\n\n  return pcsetModes(ivls)\n    .map(function (chroma, i) {\n      var name = scale.names(chroma)[0];\n      if (name) { return [tonics[i] || ivls[i], name]; }\n    })\n    .filter(function (x) { return x; });\n};\n\n/**\n * Get all chords that fits a given scale\n *\n * @function\n * @param {String} name\n */\nexport var chords = function (name) {\n  var inScale = isSubsetOf(intervals(name));\n  return chord.names().filter(function (name) { return inScale(chord(name)); });\n};\n\n/**\n * Given an array of notes, return the scale: a pitch class set starting from\n * the first note of the array\n *\n * @function\n * @param {Array} notes\n * @return {Array}\n */\nexport var toScale = function (notes) {\n  var pcset = compact(notes.map(pc));\n  if (!pcset.length) { return pcset; }\n  var tonic = pcset[0];\n  var scale = unique(pcset);\n  return rotate(scale.indexOf(tonic), scale);\n};\n\n/**\n * Get all scales names that are a superset of the given one\n * (has the same notes and at least one more)\n *\n * @function\n * @param {String} name\n * @return {Array} a list of scale names\n */\nexport var supersets = function (name) {\n  if (!intervals(name).length) { return []; }\n  var isSuperset = isSupersetOf(intervals(name));\n  return scale.names().filter(function (name) { return isSuperset(scale(name)); });\n};\n\n/**\n * Find all scales names that are a subset of the given one\n * (has less notes but all from the given scale)\n *\n * @function\n * @param {String} name\n * @return {Array} a list of scale names\n */\nexport var subsets = function (name) {\n  var isSubset = isSubsetOf(intervals(name));\n  return scale.names().filter(function (name) { return isSubset(scale(name)); });\n};\n","/**\n * [![npm version](https://img.shields.io/npm/v/tonal-chord.svg)](https://www.npmjs.com/package/tonal-chord)\n * [![tonal](https://img.shields.io/badge/tonal-chord-yellow.svg)](https://www.npmjs.com/browse/keyword/tonal)\n *\n * `tonal-chord` is a collection of functions to manipulate musical chords\n *\n * This is part of [tonal](https://www.npmjs.com/package/tonal) music theory library.\n *\n * @example\n * // es6\n * import * as Chord from \"tonal-chord\"\n * // es5\n * const Chord = require(\"tonal-chord\")\n *\n * @example\n * Chord.notes(\"CMaj7\") // => [\"C\", \"E\", \"G\", \"B\"]\n *\n * @module Chord\n */\nimport { tokenize as split } from \"tonal-note\";\nimport { transpose } from \"tonal-distance\";\nimport { chord } from \"tonal-dictionary\";\nimport { chroma, isSubsetOf, isSupersetOf } from \"tonal-pcset\";\n\n/**\n * Return the available chord names\n *\n * @function\n * @param {boolean} aliases - true to include aliases\n * @return {Array} the chord names\n *\n * @example\n * Chord.names() // => [\"maj7\", ...]\n */\nexport var names = chord.names;\n\nvar NO_CHORD = Object.freeze({\n  name: null,\n  names: [],\n  intervals: [],\n  chroma: null,\n  setnum: null\n});\n\nvar properties = function (name) {\n  var intervals = chord(name);\n  if (!intervals) { return NO_CHORD; }\n  var s = { intervals: intervals, name: name };\n  s.chroma = chroma(intervals);\n  s.setnum = parseInt(s.chroma, 2);\n  s.names = chord.names(s.chroma);\n  return s;\n};\n\nvar memo = function (fn, cache) {\n  if ( cache === void 0 ) cache = {};\n\n  return function (str) { return cache[str] || (cache[str] = fn(str)); };\n};\n\n/**\n * Get chord properties. It returns an object with:\n *\n * - name: the chord name\n * - names: a list with all possible names (includes the current)\n * - intervals: an array with the chord intervals\n * - chroma:  chord croma (see pcset)\n * - setnum: chord chroma number\n *\n * @function\n * @param {String} name - the chord name (without tonic)\n * @return {Object} an object with the properties or a object with all properties\n * set to null if not valid chord name\n */\nexport var props = memo(properties);\n\n/**\n * Get chord intervals. It always returns an array\n *\n * @function\n * @param {String} name - the chord name (optionally a tonic and type)\n * @return {Array<String>} a list of intervals or null if the type is not known\n */\nexport var intervals = function (name) { return props(tokenize(name)[1]).intervals; };\n\n/**\n * Get the chord notes of a chord. This function accepts either a chord name\n * (for example: \"Cmaj7\") or a list of notes.\n *\n * It always returns an array, even if the chord is not found.\n *\n * @function\n * @param {String} nameOrTonic - name of the chord or the tonic (if the second parameter is present)\n * @param {String} [name] - (Optional) name if the first parameter is the tonic\n * @return {Array} an array of notes or an empty array\n *\n * @example\n * Chord.notes(\"Cmaj7\") // => [\"C\", \"E\", \"G\", \"B\"]\n * Chord.notes(\"C\", \"maj7\") // => [\"C\", \"E\", \"G\", \"B\"]\n */\nexport function notes(nameOrTonic, name) {\n  var p = tokenize(nameOrTonic);\n  name = name || p[1];\n  return props(name).intervals.map(transpose(p[0]));\n}\n\n/**\n * Check if a given name correspond to a chord in the dictionary\n *\n * @function\n * @param {String} name\n * @return {Boolean}\n * @example\n * Chord.exists(\"CMaj7\") // => true\n * Chord.exists(\"Maj7\") // => true\n * Chord.exists(\"Ablah\") // => false\n */\nexport var exists = function (name) { return chord(tokenize(name)[1]) !== undefined; };\n\n/**\n * Get all chords names that are a superset of the given one\n * (has the same notes and at least one more)\n *\n * @function\n * @param {String} name\n * @return {Array} a list of chord names\n */\nexport var supersets = function (name) {\n  if (!intervals(name).length) { return []; }\n  var isSuperset = isSupersetOf(intervals(name));\n  return chord.names().filter(function (name) { return isSuperset(chord(name)); });\n};\n\n/**\n * Find all chords names that are a subset of the given one\n * (has less notes but all from the given chord)\n *\n * @function\n * @param {String} name\n * @return {Array} a list of chord names\n */\nexport var subsets = function (name) {\n  var isSubset = isSubsetOf(intervals(name));\n  return chord.names().filter(function (name) { return isSubset(chord(name)); });\n};\n\n// 6, 64, 7, 9, 11 and 13 are consider part of the chord\n// (see https://github.com/danigb/tonal/issues/55)\nvar NUM_TYPES = /^(6|64|7|9|11|13)$/;\n/**\n * Tokenize a chord name. It returns an array with the tonic and chord type\n * If not tonic is found, all the name is considered the chord name.\n *\n * This function does NOT check if the chord type exists or not. It only tries\n * to split the tonic and chord type.\n *\n * @function\n * @param {String} name - the chord name\n * @return {Array} an array with [type, tonic]\n * @example\n * Chord.tokenize(\"Cmaj7\") // => [ \"C\", \"maj7\" ]\n * Chord.tokenize(\"C7\") // => [ \"C\", \"7\" ]\n * Chord.tokenize(\"mMaj7\") // => [ \"\", \"mMaj7\" ]\n * Chord.tokenize(\"Cnonsense\") // => [ \"C\", \"nonsense\" ]\n */\nexport function tokenize(name) {\n  var p = split(name);\n  if (p[0] === \"\") { return [\"\", name]; }\n  // aug is augmented (see https://github.com/danigb/tonal/issues/55)\n  if (p[0] === \"A\" && p[3] === \"ug\") { return [\"\", \"aug\"]; }\n\n  if (NUM_TYPES.test(p[2])) {\n    return [p[0] + p[1], p[2] + p[3]];\n  } else {\n    return [p[0] + p[1] + p[2], p[3]];\n  }\n}\n","/**\n * [![npm version](https://img.shields.io/npm/v/tonal-key.svg?style=flat-square)](https://www.npmjs.com/package/tonal-key)\n *\n * The `Tonal` module is a facade to the rest of the modules. They are namespaced,\n * so for example to use `pc` function from `tonal-note` you have to write:\n * `Tonal.Note.pc`\n *\n * It exports the following modules:\n * - Note\n * - Interval\n * - Distance\n * - Scale\n * - Chord\n * - PcSet\n *\n * Additionally this facade exports some functions without namespace (see \"Methods\" below)\n *\n * @example\n * // es6 modules\n * import * as Tonal from \"tonal\"\n * Tonal.Note.name(\"cx\") // => \"C##\"\n *\n * @example\n * import { Note } from \"tonal\"\n * Note.name(\"bb\") // => \"Bb\"\n *\n * @example\n * // es5 node modules\n * var Tonal = require(\"tonal\");\n * Tonal.Distance.transpose(Tonal.Note.pc(\"C#2\"), \"M3\") // => \"E#\"\n * Tonal.Chord.notes(\"Dmaj7\") // => [\"D\", \"F#\", \"A\", \"C#\"]\n *\n * @module Tonal\n */\nimport * as Array from \"tonal-array\";\nimport * as Note from \"tonal-note\";\nimport * as Interval from \"tonal-interval\";\nimport * as Distance from \"tonal-distance\";\nimport * as Dictionary from \"tonal-dictionary\";\nimport * as Scale from \"tonal-scale\";\nimport * as Chord from \"tonal-chord\";\nimport * as PcSet from \"tonal-pcset\";\n\nexport { Array, Note, Interval, Distance, Scale, Chord, PcSet, Dictionary };\n\n/**\n * Transpose a note by an interval\n * @function\n * @param {String} note\n * @param {String} interval\n * @return {String} the transported note\n * @see Distance.transpose\n */\nexport const transpose = Distance.transpose;\n\n/**\n * Get the interval from two notes\n * @function\n * @param {String} from\n * @param {String} to\n * @return {String} the interval in reverse shorthand notation\n * @see Distance.interval\n */\nexport const interval = Distance.interval;\n\n/**\n * Get note properties\n * @function\n * @param {String} note - the note name\n * @return {Object}\n * @see Note.props\n * @example\n * Tonal.note(\"A4\").chroma // => 9\n */\nexport const note = Note.props;\n\n/**\n * Get midi note number\n * @function\n * @param {String} note\n * @return {Number}\n * @see Note.midi\n * @example\n * Tonal.midi(\"A4\") // => 49\n */\nexport const midi = Note.midi;\n\n/**\n * Get note frequency using equal tempered tuning at 440\n * @function\n * @param {String} note\n * @return {Number}\n * @see Note.freq\n * @example\n * Tonal.freq(\"A4\") // => 440\n */\nexport const freq = Note.freq;\n\n/**\n * Get intervals from a chord type\n * @function\n * @param {String} type - the chord type (no tonic)\n * @return {Array} an array of intervals or undefined if the chord type is not known\n * @see Dictionary.chord\n * @example\n * Tonal.chord(\"m7b5\") // => [\"1P\", \"3m\", \"5d\", \"7m\"]\n */\nexport const chord = Dictionary.chord;\n\n/**\n * Get intervals from scale name\n * @function\n * @param {String} name - the scale name (without tonic)\n * @return {Array} an array of intervals or undefiend if the scale is not kown\n * @example\n * Tonal.scale(\"major\") // => [\"1P\", \"2M\", \"3M\"...]\n */\nexport const scale = Dictionary.scale;\n","import { getMidi } from \"../util\";\n\nexport class Instrument {\n    midiOffset = 0;\n    onPlay: (keys: number[]) => any;\n    onStop: (keys: number[]) => any;\n    ready: Promise<any>;\n    gain = 1;\n\n    context: any;\n    mix: any;\n    constructor({ context, gain, mix, onPlay, onStop, midiOffset }: any = {}) {\n        this.onPlay = onPlay;\n        this.midiOffset = midiOffset || this.midiOffset;\n        this.onStop = onStop;\n        this.gain = gain || this.gain;\n        this.init({ context, mix });\n    }\n\n    init({ context, mix }) {\n        if (!context && (!mix || !mix.context)) {\n            console.warn(`you should pass a context or a mix (gainNode) to a new Instrument. \n            You can also Call init with {context,mix} to setup the Instrument later`);\n            return;\n        }\n        this.context = context || mix.context;\n        this.mix = mix || this.context.destination;\n    }\n\n    playNotes(notes: string[], settings) {\n        this.playKeys(notes.map(note => getMidi(note, this.midiOffset)), settings);\n    }\n\n    playKeys(keys: number[], settings?) {\n        if (this.onPlay) {\n            return this.onPlay(keys);\n        }\n        // TODO: fire callbacks after keys.map((key,i)=>i*settings.interval)?\n    }\n}","import { Instrument } from './Instrument';\nimport { Note } from 'tonal';\nimport { adsr } from '../util';\n\nexport class Synthesizer extends Instrument {\n    duration = 200;\n    type = 'sine';\n    gain = 0.9;\n    attack = .05;\n    decay = .05;\n    sustain = .4;\n    release = .1;\n\n    constructor(props: any) {\n        super(props);\n        this.duration = props.duration || this.duration;\n        this.type = props.type || this.type;\n        this.gain = props.gain || this.gain;\n    }\n\n    init(context) {\n        super.init(context);\n    }\n\n    getVoice(type = 'sine', gain = 0, frequency = 440) {\n        const oscNode = this.context.createOscillator();\n        oscNode.type = type;\n        const gainNode = this.context.createGain();\n        oscNode.connect(gainNode);\n        gainNode.gain.value = typeof gain === 'number' ? gain : 0.8;\n        gainNode.connect(this.mix);\n        oscNode.frequency.value = frequency;\n        return { oscNode, gainNode };\n    }\n\n    lowestGain(a, b) {\n        return a.gain.gain.value < b.gain.gain.value ? -1 : 0;\n    }\n\n    playKeys(keys: number[], settings: any = {}) {\n        super.playKeys(keys, settings); // fires callback   \n        //const time = this.context.currentTime + settings.deadline / 1000;\n        const time = settings.deadline || this.context.currentTime;\n        const interval = settings.interval || 0;\n        keys.map((key, i) => {\n            const delay = i * interval;\n            const [attack, decay, sustain, release, duration, gain] =\n                [\n                    settings.attack || this.attack,\n                    settings.decay || this.decay,\n                    settings.sustain || this.sustain,\n                    settings.release || this.release,\n                    (settings.duration || this.duration) / 1000,\n                    (settings.gain || 1) * this.gain\n                ]\n            const voice = this.getVoice(this.type, 0, Note.freq(key));\n            adsr({ attack, decay, sustain, release, gain, duration, }, time + delay, voice.gainNode.gain);\n            voice.oscNode.start(settings.deadline + delay);\n        })\n    }\n}","import { Chord, Distance, Interval, Note } from 'tonal';\nimport { Synthesizer } from './instruments/Synthesizer';\n\nexport function randomNumber(n) {\n    return Math.floor(Math.random() * n)\n}\n\nexport function arraySum(array) {\n    return array.reduce((s, i) => s + i, 0);\n}\n\nexport function randomElement(array, weighted?) {\n    if (!weighted) {\n        return array[randomNumber(array.length)];\n    }\n    const r = randomNumber(arraySum(weighted)) + 1;\n    const total = weighted\n        .reduce((abs, w, i) => abs.concat(w + (abs.length ? abs[i - 1] : 0)), []);\n    return array[total.indexOf(total.find((s, i) => s >= r))];\n}\n\nexport function getTonalChord(chord) {\n    chord = chord\n        .replace('-', 'm')\n        .replace('^', 'M')\n        .replace('h7', 'm7b5')\n        .replace('h', 'dim');\n    /**\n     * Chords that dont work:\n     * slash cords are ignored\n     * 7b9b5 does not work\n     * \n     */\n    const tokens = Chord.tokenize(chord);\n    const s = tokens[1].split('/');\n    return tokens[0] + (s[0] || 'M');\n}\n\nexport function getMidi(note, offset) {\n    return Note.props(note).midi - offset;\n}\n\n/** Travels path along measures */\nexport function getPath(path, measures, traveled = []) {\n    if (!Array.isArray(measures[path[0]]) || path.length === 1) {\n        return measures[Math.min(path[0], measures.length - 1)];\n    }\n    return this.getPath(path.slice(1), measures[path[0]], traveled.concat(path[0]));\n}\n\nexport function resolveChords(pattern, measures, path, divisions = []) {\n    if (Array.isArray(pattern)) {\n        // division: array of children lengths down the path (to calculate fraction)\n        divisions = [].concat(divisions, [pattern.length]);\n        return pattern.map((p, i) => this.resolveChords(p, measures, path.concat([i]), divisions));\n    }\n    if (pattern === 0) {\n        return 0;\n    }\n    //const split = (pattern + '').split('.');\n    //const gain = parseFloat('0.' + split[1]); //digit(s) after .\n    //const fraction = (parseInt(split[0]) || 1) * divisions.reduce((f, d) => f / d, 1000); // fraction of one\n    const fraction = pattern * divisions.reduce((f, d) => f / d, 1000); // fraction of one\n    if (fraction === 0) {\n        console.warn('fraction is 0', pattern);\n    }\n    return { chord: this.getPath(path, measures), pattern, /* gain, */ path, divisions, fraction };\n}\n\nexport function hasOff(pattern, division = 3) {\n    return Array.isArray(pattern) && pattern.length === division && pattern[division - 1] !== 0;\n}\n\n// replaces offs on last beat with next chord + erases next one\nexport function offbeatReducer(settings) {\n    // TODO: find out why some offbeats sound sketchy\n    return (measures, bar, index) => {\n        const last = index > 0 ? measures[index - 1] : null;\n        if (last && this.hasOff(last[settings.cycle - 1], settings.division)) {\n            last[settings.cycle - 1][settings.division - 1] = bar[0];\n            bar[0] = 0;\n        }\n        return measures.concat([bar]);\n    };\n}\n\nexport function invertInterval(interval) {\n    if (Interval.semitones(interval) < 0) {\n        return Interval.invert(interval.slice(1));\n    }\n    return '-' + Interval.invert(interval);\n}\n\n// use Interval.ic?\nexport function smallestInterval(interval) {\n    interval = Interval.simplify(interval);\n    if (interval === '0A') {\n        interval = '1P'; // TODO: issue for tonal-interval (0A does not support invert and is not simple)\n    }\n    let inversion = this.invertInterval(interval);\n    if (Math.abs(Interval.semitones(inversion)) < Math.abs(Interval.semitones(interval))) {\n        return inversion;\n    }\n    return interval || '';\n}\n\nexport function minInterval(a, b, preferRightMovement) {\n    const semitones = [Math.abs(Interval.semitones(a)), Math.abs(Interval.semitones(b))];\n    if (semitones[0] === semitones[1]) {\n        if (preferRightMovement) {\n            return semitones[0] < 0 ? -1 : 1;\n        }\n        return semitones[0] > 0 ? -1 : 1;\n    }\n    return semitones[0] < semitones[1] ? -1 : 1;\n}\n\nexport function intervalMatrix(from, to) {\n    return to.map(note => from\n        .map(n => {\n            return Distance.interval(n, note)\n        })\n        .map(d => this.smallestInterval(d))\n        .map(i => i.slice(0, 2) === '--' ? i.slice(1) : i)\n    )\n}\n\nexport function randomSynth(mix, allowed = ['sine', 'triangle', 'square', 'sawtooth']) {\n    const gains = {\n        sine: 0.9,\n        triangle: 0.8,\n        square: 0.2,\n        sawtooth: 0.3\n    }\n    const wave = randomElement(allowed);\n    return new Synthesizer({ gain: gains[wave], type: wave, mix });\n}\n\nexport function adsr({ attack, decay, sustain, release, gain, duration }, time, param) {\n    // console.log('adsr', attack, decay, sustain, release, gain, duration, time);\n    param.linearRampToValueAtTime(gain, time + attack);\n    param.setTargetAtTime(sustain * gain, time + Math.min(attack + decay, duration), decay);\n    param.setTargetAtTime(0, time + Math.max(duration - attack - decay, attack + decay, duration), release);\n}\n","import { Instrument } from \"../instruments/Instrument\";\n\nexport class Musician {\n    ready: Promise<any>;\n    instrument: Instrument;\n    constructor(instrument) {\n        if (!instrument) {\n            console.warn('musician has no instrument', this);\n        }\n        this.instrument = instrument;\n        this.ready = this.instrument ? this.instrument.ready : Promise.resolve();\n    }\n    play({ pulse, measures, settings }) {\n        console.log('play..', pulse, measures, settings);\n    }\n}","import { randomElement } from \"../util\";\n\nexport const swing = {\n    chords: ({ measure, settings }) => {\n        const off = () => randomElement([0, [0, 0, 2]], [6, 1]);\n        const r = Math.random() > 0.5 ? .6 : 0;\n        const t = `${settings.cycle}/${measure.length}`;\n        if (t === '4/1') {\n            return randomElement([\n                [[1, 0], [0, 0, 7], 0, 0],\n                [1, [0, 0, 2], 0, off()],\n                [[0, 0, 1], 0, 2, 0],\n                [[0, 0, 4], 0, 1, 0],\n                [2, 0, 0, 0],\n                [3, 0, 0, 0],\n                [1, 0, r, off()],\n                [[0, 0, 2], 0, r, 0],\n                [1.5, [0, 0, 2], 0, off()],\n            ]);//, [2, 1, 1]\n        }\n        if (t === '4/2') {\n            return randomElement([\n                [[1, 0], [0, 0, 7], 0, 0],\n                [1, [0, 0, 2], 0, 0],\n                [1, 0, 2, 0],\n                [2, 0, 1, 0],\n                [1, 0, .7, off()],\n                [[1, 0, 0], 0, .7, off()],\n                [[4, 0, 0], [0, 0, 2.8], 0, off()],\n            ],/*  [1, 2] */);\n        }\n\n        if (t === '4/3') {\n            return [1, [0, 0, 2], [0, 0, 4], 0];\n        }\n        if ('4/4') {\n            return randomElement([\n                [1, 1, 1, 1],\n                [[1, 0, 2], [0, 0, 2], 0, 1]\n            ]);\n        }\n    },\n    bass: () => randomElement([\n        [1, 1, 1, 1],\n    ]),\n    crash: ({ measures, index }) => {\n        const fill = index !== 0 && index % measures.length === 0;\n        if (fill) {\n            return [4, 0, 0, 0];\n        }\n        return [0, 0, 0, 0];\n    },\n    ride: ({ measures, index }) => {\n        return randomElement([\n            [.6, [.9, 0, 1], .6, [.9, 0, 1]],\n            [.6, [.4, 0, 1], .8, [0, 0, 1],],\n            [.6, .9, [.6, 0, 1], 1],\n            [.6, .9, .6, [.9, 0, 1]],\n        ], [3, 2, 1, 2])\n    },\n    hihat: () => [0, .8, 0, 1]\n};","import { Distance } from 'tonal';\nimport { Chord } from 'tonal';\nimport { getTonalChord, offbeatReducer, resolveChords, intervalMatrix, minInterval } from '../util';\nimport { Musician } from './Musician';\nimport { Instrument } from '../instruments/Instrument';\nimport { swing } from '../grooves/swing';\n\nexport default class Pianist extends Musician {\n    playedNotes = [];\n    playedPatterns = [];\n    playedChords = [];\n    defaults = { intelligentVoicings: true, groove: swing, noTonic: true };\n    min = Math.min;\n    rollFactor = 3; // how much keyroll effect? controls interval between notes\n    props: any;\n    instrument: Instrument;\n    constructor(instrument, props = {}) {\n        super(instrument);\n        this.props = Object.assign({}, this.defaults, props || {});\n    }\n\n    play({ pulse, measures, settings }) {\n        const groove = settings.groove || this.defaults.groove;\n        const pattern = groove['chords'];\n        if (!pattern) {\n            console.warn('style has no chords..');\n            return;\n        }\n        const measureLength = pulse.getMeasureLength();\n        if (settings.exact) {\n            return pulse.tickArray(measures, (t) => {\n                this.playChord(t.value, { deadline: t.deadline + settings.delay });\n            });\n        }\n        measures = measures\n            // generate random patterns\n            .map(measure => pattern({ measures, pulse, measure, settings }).slice(0, Math.floor(settings.cycle)))\n            // fill in chords\n            .map((pattern, i) => resolveChords(pattern, measures, [i]))\n            // fix chords at last offbeat\n            .reduce(offbeatReducer(settings), []);\n        pulse.tickArray(measures, ({ path, value, deadline }) => {\n            const humanFactor = settings.bpm / (this.rollFactor || 1);\n            let interval = settings.arpeggio ? measureLength / settings.cycle : Math.random() / (humanFactor * 20);\n            if (path[0] % 2 === 0 && !path[1] && !path[2]) {\n                interval = Math.random() / humanFactor;\n            }\n            const duration = settings.arpeggio ? interval : value.fraction * measureLength;\n            const slice = settings.arpeggio ? Math.ceil(value.fraction / 1000 * 4) : null;\n            const gain = value.gain || this.instrument.gain;\n            this.playChord(value.chord, { deadline, gain, duration, interval, slice });\n        }, settings.deadline);\n    }\n\n    getLastVoicing() {\n        return this.playedNotes.length ? this.playedNotes[this.playedNotes.length - 1] : null;\n    }\n\n    getVoicing(scorenotes, before, tonic?) {\n        if (!before) {\n            return scorenotes;\n        }\n        const near = intervalMatrix(before, scorenotes)\n            .map((intervals, index) => {\n                const smallest = [].concat(intervals)\n                    .sort((a, b) => minInterval(a, b, false))[0];\n                if (!Distance.transpose(before[intervals.indexOf(smallest)], smallest)) {\n                    console.warn('ALARM', before[intervals.indexOf(smallest)], smallest, intervals);\n                }\n                return Distance.transpose(before[intervals.indexOf(smallest)], smallest);\n            }).filter(n => !!n);\n        return near && near.length ? near : scorenotes;\n    }\n\n    // plays the given notes at the given interval\n    playNotes(scorenotes, { tonic, deadline, interval, gain, duration }) {\n        if (this.props.intelligentVoicings && this.getLastVoicing()) {\n            scorenotes = this.getVoicing(scorenotes, this.getLastVoicing(), tonic);\n        }\n        this.playedNotes.push([].concat(scorenotes));\n        this.instrument.playNotes(scorenotes, { deadline, interval, gain, duration });\n    }\n\n    playChord(chord, settings) {\n        if (chord === 'N.C.') {\n            console.log('N.C.');\n            return;\n        }\n        if (!chord || chord === 'x') { // repeat\n            chord = this.playedChords[this.playedChords.length - 1];\n        }\n        this.playedChords.push(chord);\n        chord = Chord.tokenize(getTonalChord(chord));\n\n        let notes = Chord.intervals(chord[1])\n            .map(i => i.replace('13', '6')) // TODO: better control over octave\n            .map(root => Distance.transpose(chord[0] + '3', root));\n        if (notes.length > 3 && settings.noTonic) {\n            notes = notes.slice(this.props.noTonic ? 1 : 0);\n        }\n        if (settings.slice) {\n            notes = notes.slice(0, settings.slice ? settings.slice : notes.length);\n        }\n        this.playNotes(notes, settings);\n    }\n}\n","import { Musician } from './Musician';\nimport { swing } from '../grooves/swing';\n\nexport default class Drummer extends Musician {\n    set = {\n        kick: 0,\n        snare: 1,\n        hihat: 2,\n        ride: 3,\n        crash: 4\n    }\n    defaults = { groove: swing }\n\n    constructor(instrument) {\n        super(instrument);\n    }\n\n    play({ measures, pulse, settings }) {\n        const groove = settings.groove || this.defaults.groove;\n\n        Object.keys(groove)\n            .filter(t => Object.keys(this.set).includes(t)) // only use drum set patterns\n            .forEach(key => {\n                const patterns = measures\n                    .map((measure, index) => groove[key]({ measures, index, measure, settings, pulse })\n                        .slice(0, Math.floor(settings.cycle)));\n                pulse.tickArray(patterns, ({ deadline, value }) => {\n                    this.instrument.playKeys([this.set[key]], { deadline, gain: value });\n                }, settings.deadline);\n            });\n    }\n}","import { resolveChords, getTonalChord, randomElement } from '../util';\nimport { Musician } from './Musician';\nimport { Chord, Distance } from 'tonal';\nimport { swing } from '../grooves/swing';\n\nexport default class Bassist extends Musician {\n    styles: { [key: string]: any };\n    defaults = { groove: swing }\n    playedChords: string[] = [];\n\n    constructor(instrument) {\n        super(instrument);\n    }\n\n    play({ measures, pulse, settings }) {\n        const groove = settings.groove || this.defaults.groove;\n        const pattern = groove['bass'];\n        measures = measures\n            .map(measure => pattern({ measures, measure, settings, pulse }).slice(0, Math.floor(settings.cycle)))\n            .map((pattern, i) => resolveChords(pattern, measures, [i]));\n        pulse.tickArray(measures, (tick) => {\n            this.playBass(tick, measures, pulse);\n        }, settings.deadline);\n    }\n\n    getStep(step, chord, octave = 1) {\n        const tokens = Chord.tokenize(getTonalChord(chord));\n        const interval = Chord.intervals(tokens[1]).find(i => parseInt(i[0]) === step);\n        return Distance.transpose(tokens[0] + octave, interval);\n    }\n\n    playBass({ value, cycle, path, deadline, interval }, measures, pulse) {\n        let chord = value.chord;\n        if (chord === 'N.C.') {\n            return;\n        }\n        if (!chord || chord === 'x') { // repeat // TODO: support 'r' \n            chord = this.playedChords[this.playedChords.length - 1];\n        }\n        this.playedChords.push(chord);\n        let note;\n        const steps = [1, randomElement([3, 5]), 1, randomElement([3, 5])];\n        const octave = 1;\n        if (value.value === 1 && chord.split('/').length > 1) {\n            note = chord.split('/')[1] + octave;\n        } else {\n            note = this.getStep(steps[path[1]], getTonalChord(chord), octave);\n        }\n        const duration = value.fraction * pulse.getMeasureLength();\n        this.instrument.playNotes([note], { deadline, interval, gain: 0.7, duration });\n    }\n}","import { Instrument } from './Instrument';\nimport { adsr } from '../util';\n\nexport class Sampler extends Instrument {\n    buffers = {};\n    context: AudioContext;\n    overlap: any;\n    samples: Promise<any[]>;\n    sources: any;\n    gainNode: GainNode;\n    duration = 10000;\n    type = 'sine';\n    gain = 1;\n    attack = 0;\n    decay = 0;\n    sustain = 1;\n    release = .2;\n\n    constructor(options: any = {}) {\n        super(options);\n        this.gain = options.gain || this.gain;\n        this.gainNode = this.context.createGain();\n        this.gainNode.connect(this.context.destination);\n        this.duration = options.duration || this.duration;\n        // this.overlap = options.overlap;\n        if (options.samples) {\n            this.sources = options.samples;\n            this.ready = this.loadSources(options.samples)\n        }\n    }\n\n    // returns buffer from buffer cache or loads buffer data from source\n    getBuffer(src, context = this.context) {\n        if (this.buffers[src] && this.buffers[src].context === context) {\n            // console.log('buffer already present');\n            return Promise.resolve(this.buffers[src].buffer);\n        }\n        return fetch(src)\n            .then(res => res.arrayBuffer())\n            .then(buffer => {\n                return new Promise((resolve, reject) => {\n                    context.decodeAudioData(buffer, (decodedData) => {\n                        this.buffers[src] = { buffer: decodedData, context };\n                        resolve(decodedData);\n                    });\n                })\n            });\n    }\n\n    getSource(buffer, connect?) {\n        const source = this.context.createBufferSource();\n        connect = connect || this.gainNode;\n        source.buffer = buffer;\n        source.connect(connect);\n        return source;\n    }\n\n    getSources(sources, context = this.context) {\n        if (!this.hasLoaded(sources)) {\n            console.error('not all sources loaded!!!');\n            return [];\n        }\n        return sources.map(source => this.getSource(this.buffers[source].buffer));\n    }\n\n    // loads a sound file into the context\n    loadSource(src, context = this.context) {\n        return this.getBuffer(src, context)\n            .then(decodedData => this.getSource(decodedData));\n    }\n\n    // loads multiple sources into the context\n    loadSources(sources, context = this.context) {\n        sources.forEach((source, i) => {\n            if (!source) {\n                console.warn(`note at index ${i} cannot be played!`);\n            }\n        })\n        return Promise.all(sources.filter(source => !!source).map(source => this.loadSource(source, context)));\n    }\n\n    hasLoaded(sources, context = this.context) {\n        return sources.reduce((allLoaded, src) => {\n            return allLoaded && this.buffers[src] && this.buffers[src].context === context\n        }, true);\n    }\n\n    playSounds(sounds, deadline = 0, interval = 0) {\n        sounds.forEach((sound, i) => sound.start(deadline + interval * i))\n    }\n\n    playSource(source, settings) {\n        const gainNode = this.context.createGain();\n        const sound = this.getSource(this.buffers[source].buffer, gainNode);\n        const [attack, decay, sustain, release, duration, gain] =\n            [\n                settings.attack || this.attack,\n                settings.decay || this.decay,\n                settings.sustain || this.sustain,\n                settings.release || this.release,\n                (settings.duration || this.duration) / 1000,\n                (settings.gain || 1) * this.gain\n            ]\n        const time = settings.deadline || this.context.currentTime;\n        //gainNode.gain.value = typeof settings.gain === 'number' ? settings.gain : this.gain;\n        gainNode.connect(this.mix);\n        adsr({ attack, decay, sustain, release, gain, duration, }, time, gainNode.gain);\n        this.playSounds([sound], settings.deadline || 0, 0)\n    }\n\n    /* playSources(sources, deadline = 0, interval = 0) {\n        if (this.hasLoaded(sources, this.context)) {\n            this.playSounds(this.getSources(sources, this.context), deadline, interval)\n        } else {\n            console.warn('need to load');\n            this.loadSources(sources, this.context)\n                .then(sounds => this.playSounds(sounds, deadline, interval));\n        }\n    } */\n\n    playKeys(keys: number[], settings) {\n        super.playKeys(keys, settings);\n        keys.map(key => {\n            this.playSource(this.sources[key], settings);\n        });\n    }\n}","export class Kick {\n    osc: any;\n    context: any;\n    gain: any;\n    constructor(context) {\n        this.context = context;\n    }\n    setup() {\n        this.osc = this.context.createOscillator();\n        this.gain = this.context.createGain();\n        this.osc.connect(this.gain);\n        this.gain.connect(this.context.destination)\n    }\n    trigger(time) {\n        this.setup();\n\n        this.osc.frequency.setValueAtTime(150, time);\n        this.gain.gain.setValueAtTime(1, time);\n\n        this.osc.frequency.exponentialRampToValueAtTime(0.01, time + 0.5);\n        this.gain.gain.exponentialRampToValueAtTime(0.01, time + 0.5);\n\n        this.osc.start(time);\n\n        this.osc.stop(time + 0.5);\n    }\n}","export class Snare {\n    context: any;\n    noise: any;\n    noiseEnvelope: any;\n    osc: any;\n    oscEnvelope: any;\n    constructor(context) {\n        this.context = context;\n    }\n    noiseBuffer() {\n        var bufferSize = this.context.sampleRate;\n        var buffer = this.context.createBuffer(1, bufferSize, this.context.sampleRate);\n        var output = buffer.getChannelData(0);\n\n        for (var i = 0; i < bufferSize; i++) {\n            output[i] = Math.random() * 2 - 1;\n        }\n\n        return buffer;\n    }\n    setup() {\n        this.noise = this.context.createBufferSource();\n        this.noise.buffer = this.noiseBuffer();\n        var noiseFilter = this.context.createBiquadFilter();\n        noiseFilter.type = 'highpass';\n        noiseFilter.frequency.value = 1000;\n        this.noise.connect(noiseFilter);\n\n        this.noiseEnvelope = this.context.createGain();\n        noiseFilter.connect(this.noiseEnvelope);\n\n        this.noiseEnvelope.connect(this.context.destination);\n        this.osc = this.context.createOscillator();\n        this.osc.type = 'triangle';\n\n        this.oscEnvelope = this.context.createGain();\n        this.osc.connect(this.oscEnvelope);\n        this.oscEnvelope.connect(this.context.destination);\n    };\n    trigger(time) {\n        this.setup();\n\n        this.noiseEnvelope.gain.setValueAtTime(1, time);\n        this.noiseEnvelope.gain.exponentialRampToValueAtTime(0.01, time + 0.2);\n        this.noise.start(time)\n\n        this.osc.frequency.setValueAtTime(100, time);\n        this.oscEnvelope.gain.setValueAtTime(0.7, time);\n        this.oscEnvelope.gain.exponentialRampToValueAtTime(0.01, time + 0.1);\n        this.osc.start(time)\n\n        this.osc.stop(time + 0.2);\n        this.noise.stop(time + 0.2);\n    };\n}","import { Instrument } from \"./Instrument\";\nimport { Kick } from \"./Kick\";\nimport { Snare } from \"./Snare\";\n\nexport class PlasticDrums extends Instrument {\n    kick: Kick;\n    snare: Snare;\n    keys: any[];\n\n    constructor(options) {\n        super(options);\n        this.keys = [\n            new Kick(this.context),\n            new Snare(this.context)\n        ];\n    }\n\n    playKeys(keys, { deadline, gain, value }) {\n        const sounds = keys.filter(key => !!this.keys[key]).map(key => this.keys[key]);\n        if (sounds.length < keys.length) {\n            const missing = keys.filter(key => !this.keys[key]);\n            console.warn('PlasticDrums missing keys:', missing);\n        }\n        sounds.forEach(sound => sound.trigger(deadline));\n    }\n}","import { Synthesizer } from './instruments/Synthesizer';\n\nexport class Metronome {\n    sampler: any;\n    ready: Promise<any[]>;\n    synth: Synthesizer;\n\n    constructor(mix) {\n        this.synth = new Synthesizer({ type: 'sine', gain: 1, mix });\n        this.ready = this.synth.ready;\n    }\n    count(pulse, bars = 1) {\n        const count = new Array(bars).fill(\n            [new Array(pulse.props.cycle).fill(1)]\n        );\n        return pulse.tickArray(count, ({ path, deadline }) => {\n            this.synth.playKeys([path[2] === 0 ? 90 : 78], { deadline, duration: 0.01, attack: .01, release: .01, decay: .01, sustain: 1 });\n        });\n    }\n}","import { randomSynth } from './util';\nimport Band from './Band';\nimport Pianist from './musicians/Pianist';\nimport Bassist from './musicians/Bassist';\nimport Drummer from './musicians/Drummer';\nimport { PlasticDrums } from './instruments/PlasticDrums';\nimport { Metronome } from './Metronome';\nimport { Pulse } from './Pulse';\n\nexport class Trio extends Band {\n    pianist: Pianist;\n    bassist: Bassist;\n    drummer: Drummer;\n    mix: any;\n    instruments: { piano: any; bass: any; drums: any; };\n    metronome: Metronome;\n    constructor({ context, piano, bass, drums }) {\n        super({ context });\n        this.mix = this.setupMix(this.context);\n        const instruments = this.setupInstruments({ piano, bass, drums })\n        this.pianist = new Pianist(instruments.piano);\n        this.bassist = new Bassist(instruments.bass);\n        this.drummer = new Drummer(instruments.drums);\n        this.musicians = [this.pianist, this.bassist, this.drummer];\n        this.metronome = new Metronome(this.mix);\n    }\n\n    setupMix(context) {\n        const mix = context.createGain();\n        mix.gain.value = 0.9;\n        mix.connect(context.destination);\n        return mix;\n    }\n\n    setupInstruments({ piano, bass, drums }) {\n        bass = bass || randomSynth(this.mix);\n        piano = piano || randomSynth(this.mix);\n        drums = drums || new PlasticDrums({ mix: this.mix });\n        return { piano, bass, drums };\n    }\n\n    play(measures, settings) {\n        this.pulse = settings.pulse || new Pulse(settings);\n        return this.count(this.pulse, settings.metronome ? null : 0).then((tick) => {\n            settings.deadline = tick.deadline;\n            // settings.delay = deadline - this.context.currentTime;\n            super.play(measures, settings);\n        })\n    }\n\n    count(pulse, bars = 1) {\n        if (pulse.getMeasureLength() < 1.5) {\n            bars *= 2; //double countin bars when countin would be shorter than 1.5s\n        }\n        return this.metronome.count(pulse, bars);\n    }\n}\n","import Band from './Band';\nimport Pianist from './musicians/Pianist';\nimport Drummer from './musicians/Drummer';\nimport Bassist from './musicians/Bassist';\nimport { Instrument } from './instruments/Instrument';\nimport { Musician } from './musicians/Musician';\nimport { Synthesizer } from './instruments/Synthesizer';\nimport { Sampler } from './instruments/Sampler';\nimport { PlasticDrums } from './instruments/PlasticDrums';\nimport { Trio } from './Trio';\nimport * as util from './util';\nimport { Pulse } from './Pulse';\n\nexport { Trio, Band, Pianist, Bassist, Drummer, Instrument, Musician, Synthesizer, Sampler, PlasticDrums, Pulse, util };"]}