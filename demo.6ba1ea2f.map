{"version":3,"sources":["../node_modules/ireal-reader/unscramble.js","../node_modules/ireal-reader/parser.js","../node_modules/ireal-reader/index.js","../../../.nvm/versions/node/v8.11.1/lib/node_modules/parcel/node_modules/process/browser.js","../node_modules/waaclock/lib/WAAClock.js","../node_modules/waaclock/index.js","../lib/Pulse.js","../lib/sheet/Measure.js","../node_modules/tonal-note/build/es6.js","../node_modules/tonal-array/build/es6.js","../node_modules/tonal-interval/build/es6.js","../node_modules/tonal-distance/build/es6.js","0","../node_modules/tonal-pcset/build/es6.js","../node_modules/tonal-dictionary/build/es6.js","../node_modules/tonal-scale/build/es6.js","../node_modules/tonal-chord/build/es6.js","../node_modules/tonal/index.js","../lib/instruments/Instrument.js","../lib/instruments/Synthesizer.js","../lib/symbols.js","../lib/util/util.js","../lib/harmony/Harmony.js","../lib/sheet/Sheet.js","../lib/Metronome.js","../lib/util/Permutation.js","../lib/harmony/Voicing.js","../node_modules/diff/dist/diff.js","../lib/sheet/Snippet.js","../lib/util/Logger.js","../lib/Band.js","../lib/musicians/Musician.js","../lib/grooves/swing.js","../lib/musicians/Pianist.js","../lib/musicians/Drummer.js","../lib/musicians/Bassist.js","../lib/instruments/Sampler.js","../lib/instruments/Kick.js","../lib/instruments/Snare.js","../lib/instruments/PlasticDrums.js","../lib/improvisation/Improvisation.js","../lib/improvisation/methods.js","../lib/musicians/Improvisor.js","../lib/Trio.js","../lib/sheet/RealParser.js","../lib/instruments/MidiOut.js","../lib/musicians/Permutator.js","../lib/index.js","../src/harmony/Harmony.ts","../src/instruments/Instrument.ts","../src/instruments/Synthesizer.ts","../src/symbols.ts","../src/util/util.ts","../src/grooves/bossa.ts","../src/grooves/funk.ts","../src/grooves/swing.ts","../src/sheet/Sheet.ts","../src/sheet/Measure.ts","../src/sheet/RealParser.ts","../src/sheet/Snippet.ts","../src/samples/drumset.js","../src/samples/piano.js","demo.js"],"names":["cachedSetTimeout","cachedClearTimeout","process","module","exports","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","setTimeout","e","call","runClearTimeout","marker","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","Item","array","noop","nextTick","args","Array","arguments","i","push","prototype","apply","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask","__importDefault","mod","__esModule","Object","defineProperty","value","waaclock_1","require","Pulse","props","defaults","events","callbackAtTime","assign","context","AudioContext","clock","default","toleranceEarly","toleranceLate","getMeasureLength","bpm","beatsPerMeasure","cycle","arrayPulse","children","path","start","callback","deadline","_this","isArray","item_1","delay","currentTime","event","childLength","map","el","tickArray","l","Promise","resolve","reject","tick","warn","stop","changeTempo","newTempo","factor","filter","timeStretch","Sheet_1","Measure","from","measure","hasSign","sign","signs","includes","hasHouse","number","house","undefined","getJumpSign","s","keys","Sheet","jumpSigns","hasJumpSign","reduce","match","current","enharmonic","NAMES","split","names","accTypes","slice","n","acc","indexOf","SHARPS","FLATS","REGEX","tokenize","str","m","exec","toUpperCase","replace","NO_NOTE","freeze","SEMI","properties","tokens","letter","octStr","p","charCodeAt","chroma","step","alt","midi","oct","freq","midiToFreq","memo","fn","cache","pc","isMidiRange","note","tuning","Math","pow","L2","log","L440","freqToMidi","v","round","LETTERS","stepToLetter","fillStr","join","numToStr","num","op","altToAcc","fromProps","baseNote","_a","build","fromMidi","sharps","floor","simplify","sameAcc","alteration","useSharps","range","rotate","sort","unique","ascR","b","a","descR","times","arr","compact","height","src","shuffle","rnd","t","random","permutations","perm","pos","newPerm","splice","fromSemitones","IVL_TNL","IVL_STR","RegExp","SIZES","TYPES","CLASSES","types","NO_IVL","abs","qToAlt","type","q","test","altToQ","numToStep","simple","semitones","ic","ivl","_b","_c","d","intervalProps","invert","IN","IQ","c","o","transpose","trFifths","fifths","transposeBy","addIntervals","add","subtract","interval","FIFTHS","fOcts","f","FIFTH_OCTS","encode","ref","STEPS","unaltered","decode","encoder","encodeNote","noteProps","encodeIvl","iprops","tr","to","isDescending","decodeIvl","ivl1","ivl2","i1","i2","chromatic","lydian","major","mixolydian","dorian","aeolian","phrygian","locrian","melodic minor","melodic minor second mode","lydian augmented","lydian dominant","melodic minor fifth mode","locrian #2","altered","harmonic minor","phrygian dominant","half-whole diminished","diminished","major pentatonic","lydian pentatonic","mixolydian pentatonic","locrian pentatonic","minor pentatonic","minor six pentatonic","minor hexatonic","flat three pentatonic","flat six pentatonic","major flat two pentatonic","whole tone pentatonic","ionian pentatonic","lydian #5P pentatonic","lydian dominant pentatonic","minor #7M pentatonic","super locrian pentatonic","in-sen","iwato","hirajoshi","kumoijoshi","pelog","vietnamese 1","vietnamese 2","prometheus","prometheus neopolitan","ritusen","scriabin","piongio","major blues","minor blues","composite blues","augmented","augmented heptatonic","dorian #4","lydian diminished","whole tone","leading whole tone","lydian minor","locrian major","neopolitan","neopolitan minor","neopolitan major","neopolitan major pentatonic","romanian minor","double harmonic lydian","harmonic major","double harmonic major","egyptian","hungarian minor","hungarian major","oriental","spanish heptatonic","flamenco","balinese","todi raga","malkos raga","kafi raga","purvi raga","persian","bebop","bebop dominant","bebop minor","bebop major","bebop locrian","minor bebop","mystery #1","enigmatic","minor six diminished","ionian augmented","lydian #9","ichikosucho","six tone symmetric","4","64","5","M","M#5","M#5add9","M13","M13#11","M6","M6#11","M69","M69#11","M7#11","M7#5","M7#5sus4","M7#9#11","M7add13","M7b5","M7b6","M7b9","M7sus4","M9","M9#11","M9#5","M9#5sus4","M9b5","M9sus4","Madd9","Maj7","Mb5","Mb6","Msus2","Msus4","Maddb9","7","9","11","13","11b9","13#11","13#9","13#9#11","13b5","13b9","13b9#11","13no5","13sus4","69#11","7#11","7#11b13","7#5","7#5#9","7#5b9","7#5b9#11","7#5sus4","7#9","7#9#11","7#9#11b13","7#9b13","7add6","7b13","7b5","7b6","7b9","7b9#11","7b9#9","7b9b13","7b9b13#11","7no5","7sus4","7sus4b9","7sus4b9b13","9#11","9#11b13","9#5","9#5#11","9b13","9b5","9no5","9sus4","m#5","m11","m11A 5","m11b5","m13","m6","m69","m7","m7#5","m7add11","m7b5","m9","m9#5","m9b5","mMaj7","mMaj7b6","mM9","mM9b6","mb6M7","mb6b9","o7","o7M7","oM7","sus24","+add#9","madd4","madd9","chromas","modes","isChroma","intervals","isEqual","isSubsetOf","isSupersetOf","chr","pcsetNum","set","parseInt","clen","forEach","all","toString","normalize","binary","_","r","IVLS","s1","s2","notes","dictionary","raw","data","index","ivls","key","alias","allKeys","dict","combine","scale","sdata","chord","cdata","pcset","exists","NO_SCALE","setnum","memoize","nameOrTonic","tonic","substring","modeNames","tonics","x","chords","inScale","toScale","supersets","isSuperset","subsets","isSubset","NO_CHORD","NUM_TYPES","Note","Interval","Distance","Dictionary","Scale","Chord","PcSet","Harmony_1","Instrument","gain","mix","onTrigger","midiOffset","activeEvents","init","destination","playNotes","settings","Harmony","getMidi","noteOff","duration","notesOn","pulse","active","notesOff","find","keep","playKeys","__extends","extendStatics","setPrototypeOf","__proto__","hasOwnProperty","__","constructor","create","Instrument_1","tonal_1","util_1","Synthesizer","_super","attack","decay","sustain","release","getVoice","frequency","oscNode","createOscillator","gainNode","createGain","connect","lowestGain","startKeys","time","endless","voice","adsr","stopVoice","setTargetAtTime","stopVoices","voices","__importStar","result","k","groupFilter","group","item","level","max","groups","levels","Set","scaleNames","scales","symbol","chordNames","groupNames","symbolName","long","pool","symbols","short","scaleName","chordName","randomItem","randomScale","randomChord","Synthesizer_1","symbols_1","steps","randomNumber","arraySum","randomElement","weighted","total","w","shuffleArray","j","getPath","measures","traveled","min","getDuration","divisions","noteLength","measureLength","resolveChords","pattern","fraction","NaN","hasOff","division","offbeatReducer","bar","last","randomSynth","allowed","gains","wave","param","linearRampToValueAtTime","randomDelay","maxMs","isInRange","transposeNotes","transposeToRange","getAverageMidi","offset","sum","getDistancesToRangeEnds","rangeMidi","getRangePosition","getRangeDirection","defaultDirection","border","position","direction","force","getStep","getIntervalFromStep","getStepsFromDegree","degree","getStepsInChord","root","getTonalChord","getStepFromInterval","getStepInChord","getChordScales","pickChordScale","findDegree","degreeOrStep","intervalsOrSteps","isInterval","degree_1","minInterval","error","getDegreeFromStep","hasDegree","hasAllDegrees","degrees","res","getScaleDegree","getScalePattern","renderIntervals","renderSteps","permutateIntervals","getDegreeFromInterval","fixed","fixInterval","getDegreeInChord","getPatternInChord","permutation","getDigitalPattern","renderDigitalPattern","getGuideTones","isFirstInPath","isBarStart","isFormStart","isOffbeat","otherDirection","totalDiff","diff","weight","added","count","removed","kept","balance","changes","sortByDegree","diffDegrees","chain","closest","unshift","reverse","renderAbsoluteNotes","octave","absolute","getIntervals","smallestInterval","sortNotes","analyzeVoicing","sortedIntervals","sortMinInterval","semitoneDifference","semitoneMovement","longestChild","isPitchClass","mapTree","tree","modifier","siblings","subtree","flattenTree","flat","expandTree","chordHasIntervals","has","isOptional","isForbidden","isDominantChord","isMajorChord","isMinorChord","isMinorTonic","getChordType","getChordNotes","validate","validateWithoutRoot","getVoicing","omitRoot","previousVoicing","quartal","semitoneDistance","noteA","noteB","noteArray","slots","fill","factorial","__assign","tonal_2","tonal_3","tonal_4","isBlack","hasSamePitch","ignoreOctave","getBassNote","irealToTonal","ignoreSlash","transposeChord","intervalComplement","fix","fixIndex","invertInterval","positive","complement","forceDirection","noUnison","inversion","minIntervals","chordA","chordB","mapMinInterval","preferredDirection","accessor","getNearestNote","getNearestTargets","targets","flip","target","intervalMatrix","pitchRegex","Measure_1","render","sheet","options","clear","state","forms","nested","fallbackToZero","firstTime","newForm","runs","nextMeasure","nextSection","nextIndex","nextForm","jumps","lastTime","shouldJump","braces","getJumpDestination","wipeKeys","visits","section","getNextSectionIndex","readyForFineOrCoda","next","getNextHouseIndex","findPair","pairs","move","stack","findMatch","fine","pair","getBracePair","getRelatedHouse","canVisitHouse","houses","numberMap","wiped","latestHouse","isFirstHouse","getAllowedJumps","backJump","validator","allowedJumps","timesJumped","melody","Metronome","synth","ready","bars","Permutation","permutateElements","isValid","combinations","subcombinations","permutationComplexity","validations","permutateArray","combineValidators","validators","_i","binomial","combs","head","tailcombs","Permutation_1","Logger_1","Voicing","getNextVoicing","rangeBorders","maxVoices","maxDistance","minBottomDistance","minTopDistance","noTopDrop","noTopAdd","noBottomDrop","noBottomAdd","idleChance","logging","sortChoices","filterChoices","getAllVoicePermutations","exit","pick","Logger","logVoicing","firstPick","combination","firstNote","firstNoteInRange","pick_1","choices","getAllChoices","choice","dropped","topNotes","bottomNotes","difference","bestPick","getDesiredDirection","pick_2","movement","voicingOptions","omitNotes","getAllNoteSelections","getVoicePermutations","validatePermutation","voicingValidator","minDistance","notesAtPositionValidator","degreesAtPositionValidator","topDegrees","bottomDegrees","validateInterval","required","getRequiredNotes","withoutPitches","optional","getOptionalNotes","selection","pitches","voicing","getAvailableTensions","getAllTensions","requiredSteps","req","lastPitches","bottomInterval","bottomNote","leads","voiceLeading","origin","analyzeVoiceLeading","more","less","voicingIntervals","oblique","similar","parallel","containsPitch","selected","remaining","hasTonic","thresholds","distances","global","factory","define","amd","self","Diff","buildValues","components","newString","oldString","useLongestToken","componentPos","componentLen","newPos","oldPos","component","tmp","oldValue","lastComponent","equals","pop","done","castInput","removeEmpty","newLen","oldLen","editLength","maxEditLength","bestPath","extractCommon","execEditLength","diagonalPath","basePath","addPath","removePath","_oldPos","canAdd","canRemove","clonePath","pushComponent","ret","commonCount","left","right","comparator","ignoreCase","toLowerCase","chars","characterDiff","generateOptions","extendedWordChars","reWhitespace","wordDiff","ignoreWhitespace","lineDiff","diffLines","oldStr","newStr","retLines","linesAndNewlines","line","newlineIsToken","trim","sentenceDiff","cssDiff","_typeof","obj","Symbol","iterator","_toConsumableArray","_arrayWithoutHoles","arr2","_iterableToArray","iter","_nonIterableSpread","TypeError","objectPrototypeToString","jsonDiff","canonicalize","replacementStack","replacer","canonicalizedObj","toJSON","sortedKeys","_key","_this$options","undefinedReplacement","_this$options$stringi","stringifyReplacer","JSON","stringify","arrayDiff","parsePatch","uniDiff","diffstr","delimiters","list","parseIndex","header","hunks","_line","parseHunk","strict","parseFileHeader","fileHeader","keyPrefix","fileName","substr","chunkHeaderIndex","chunkHeader","hunk","addCount","removeCount","operation","lines","linedelimiters","newLines","oldLines","distanceIterator","minLine","maxLine","wantForward","backwardExhausted","forwardExhausted","localOffset","applyPatch","source","removeEOFNL","addEOFNL","compareLine","lineNumber","patchContent","errorCount","fuzzFactor","hunkFits","toPos","content","oldStart","diffOffset","_hunk","_toPos","delimiter","previousOperation","_k","structuredPatch","oldFileName","newFileName","oldHeader","newHeader","contextLines","entry","oldRangeStart","newRangeStart","curRange","oldLine","newLine","_loop","_curRange","prev","_curRange2","_curRange3","contextSize","oldEOFNewline","newEOFNewline","noNlBeforeAdds","createTwoFilesPatch","newStart","arrayStartsWith","calcLineCount","_calcOldNewLineCount","calcOldNewLineCount","myCount","mine","theirCount","theirs","loadPatch","base","fileNameChanged","patch","selectField","conflict","hunkBefore","check","cloneHunk","mergeLines","mineOffset","mineLines","theirOffset","theirLines","their","mineCurrent","theirCurrent","_hunk$lines","collectChange","_hunk$lines2","mutualChange","myChanges","theirChanges","allRemoves","_hunk$lines3","_hunk$lines4","skipRemoveSuperset","_hunk$lines5","removal","swap","_hunk$lines6","collectContext","matchChanges","merged","matchIndex","contextChanges","conflicted","change","insertLeading","insert","insertTrailing","removeChanges","delta","changeContent","diffChars","diffWords","diffWordsWithSpace","diffTrimmedLines","diffSentences","diffCss","diffJson","oldObj","newObj","diffArrays","oldArr","newArr","createPatch","applyPatches","currentIndex","processIndex","complete","loadFile","err","updatedContent","patched","merge","mineIndex","theirsIndex","theirsOffset","Infinity","theirsCurrent","mergedHunk","convertChangesToDMP","convertChangesToXML","escapeHTML","JsDiff","Snippet","snippet","parsed","parse","wrapPipes","string","formatForDiff","minify","format","linebreaks","parseBars","cells","h","pipeIndex","char","columnChars","getCellBounds","col","row","urlsafe","getControlSigns","controlSigns","formatted","nest","parse2","testFormat","end","repeatStart","repeatEnd","expand","snippetA","snippetB","diffFormat","Voicing_1","Snippet_1","logCustom","logFn","console","logLegend","groupCollapsed","table","emoji","groupEnd","logSheet","composer","tempo","style","logLabel","icon","logChoice","contrary","topInterval","logNotes","labels","idle","span","keyboard","isActive","isUsed","isIdle","isAdded","css","konsole","movedUp","movedDown","equilibrium","lucky","wrong","bestMatch","topAdded","topRemoved","bottomRemoved","bottomAdded","rootless","noOblique","noChange","fewChoices","Pulse_1","Metronome_1","Band","musicians","onMeasure","setupMix","metronome","addMember","musician","resume","then","comp","play","exact","Musician","instrument","getGain","eightFour","eightOff","halfTriplet","swing","Musician_1","swing_1","Pianist","playedNotes","playedChords","groove","rollFactor","voicings","playChord","concurrency","arpeggio","ceil","getLastVoicing","scorenotes","Drummer","patterns","Bassist","playBass","Sampler","buffers","samples","sources","loadSources","getBuffer","buffer","fetch","arrayBuffer","decodeAudioData","decodedData","getSource","createBufferSource","getSources","hasLoaded","loadSource","allLoaded","playSounds","sounds","sound","playSource","Kick","setup","osc","trigger","setValueAtTime","exponentialRampToValueAtTime","Snare","noiseBuffer","bufferSize","sampleRate","createBuffer","output","getChannelData","noise","noiseFilter","createBiquadFilter","noiseEnvelope","oscEnvelope","Kick_1","Snare_1","PlasticDrums","Improvisation","rules","get","fromCache","rule","getRuleFactories","enhance","mutate","reducer","originKey","factories","Improvisation_1","permutator","randomNote","firstNoteInPattern","startRandom","material","fixRange","reach","lineBreaks","lastNote","getStraightBar","straightNotes","fixedNotesPerChord","pendulum","softForce","comfort","barNumber","isComfortZone","beatPattern","barStart","notesPerChord","patternPractise","exclude","advancedPermutator","drill","excludeNotes","guideTones","guideTonesFlipped","chordTones","fullScale","scalePendulum","digitalPattern","digitalPendulum","digitalWalker","digitalPractiseUp","digitalPractiseDown","heptatonicPractise","defaultMethod","improvisationMethods","methods_1","Improvisor","method","useMethod","improvise","nextNotes","Band_1","Pianist_1","Bassist_1","Drummer_1","PlasticDrums_1","Improvisor_1","Trio","piano","bass","drums","solo","instruments","setupInstruments","pianist","bassist","drummer","soloist","RealParser","getChord","iRealChord","modifiers","over","parseSheet","getSheet","token","lastBarEnded","annots","sectionStart","hasCodaSign","codaSign","houseStart","comments","text","found","regExps","replacement","repl","replacements","out","newToken","parseChord","spacer","comment","alternate","chordRegex","iRealToken","MidiOut","navigator","midiInit","midiFail","outputs","size","inputs","input","onmidimessage","getMidiMessage","noteOn","message","send","velocity","Permutator","playPermutations","Sampler_1","Trio_1","util","RealParser_1","MidiOut_1","Permutator_1","kick","snare","hihat","ride","crash","rimshot","rs","drumset","drumSamples","C1","Db1","D1","Eb1","E1","F1","Gb1","G1","Ab1","A1","Bb1","B1","C2","Db2","D2","Eb2","E2","F2","Gb2","G2","Ab2","A2","Bb2","B2","C3","Db3","D3","Eb3","E3","F3","Gb3","G3","Ab3","A3","Bb3","B3","C4","Db4","D4","Eb4","E4","F4","Gb4","G4","Ab4","A4","Bb4","B4","C5","Db5","D5","Eb5","E5","F5","Gb5","G5","Ab5","A5","Bb5","B5","C6","Db6","D6","Eb6","E6","F6","Gb6","G6","Ab6","A6","Bb6","B6","C7","Db7","D7","Eb7","E7","F7","Gb7","G7","Ab7","A7","Bb7","B7","window","webkitAudioContext","playlist","iRealReader","decodeURI","link","band","onload","playJazz","document","getElementById","playFunk","playBossa","playExact","stopButton","slower","faster","searchInput","playChords","standardTitle","textarea","cheapSynths","usePiano","standard","loadStandard","query","getStandard","newStandard","songs","music","setTitle","innerHTML","leadsheet","selectCell","bounds","focus","setSelectionRange","addEventListener","funk","bossa"],"mappings":"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","file":"demo.6ba1ea2f.map","sourceRoot":"..","sourcesContent":["'use strict';\n\n//unscrambling hints from https://github.com/ironss/accompaniser/blob/master/irealb_parser.lua\n//strings are broken up in 50 character segments. each segment undergoes character substitution addressed by obfusc50()\nexports.ireal = function(s){\n  let r = '', p;\n\n  while(s.length > 50){\n    p = s.substring(0, 50);\n    s = s.substring(50)\n    if(s.length < 2){\n      r = r + p;\n    }else{\n      r = r + obfusc50(p);\n    }\n  }\n  r = r + s;\n  return r;\n}\n\nfunction obfusc50 (s){\n  //the first 5 characters are switched with the last 5\n  let newString = s.split('');\n  for(let i = 0; i < 5; i++){\n    newString[49 - i] = s[i];\n    newString[i] = s[49 - i];\n  }\n  //characters 10-24 are also switched\n  for(let i = 10; i < 24; i++){\n    newString[49 - i] = s[i];\n    newString[i] = s[49 - i];\n  }\n  return newString.join('');\n}\n","let measures, startRepeatLocation, lastChord, endRepeatLocation, timeSignature, \nthirdEndingImminent, fineLocation, dcAlFineImminent, dcAlCodaImminent, dsAlCodaImminent,\ncodaLocation, segnoLocation;\n\nfunction resetVars() {\n  measures = [];\n  startRepeatLocation = null;\n  endRepeatLocation = null;\n  lastChord = null;\n  codaLocation = null;\n  segnoLocation = null;\n  timeSignature = null;\n  thirdEndingImminent = false;\n  dcAlCodaImminent = false;\n  dsAlCodaImminent = false;\n  fineLocation = null;\n  dcAlFineImminent = false;\n}\n\nconst rules = [\n  { token: 'XyQ', description: 'Empty space' },\n  { token: /\\*\\w/, description: 'Section marker' },\n  { token: /<(.*?)>/, description: 'Comments inside carets', operation: checkForRepeats },\n  { token: /T(\\d+)/, description: 'Time signature', operation: setTimeSignature },\n  { token: 'x', description: 'Repeat previous measure in current measure', operation: repeatLastMeasure },\n  { token: 'Kcl', description: 'Repeat previous measure and create new measure', operation: repeatLastMeasureAndAddNew },\n  { token: 'r|XyQ', description: 'Repeat previous two measures', operation: repeatLastTwoMeasures },\n  { token: /Y+/, description: 'Vertical spacers' },\n  { token: 'n', description: 'No Chord (N.C)', operation: pushNull },\n  { token: 'p', description: 'Pause slash' },\n  { token: 'U', description: 'Ending measure for player' },\n  { token: 'S', description: 'Segno', operation: setSegnoLocation },\n  { token: 'Q', description: 'Coda', operation: setCodaLocation },\n  { token: '{', description: 'Start repeat marker', operation: setStartRepeatLocation },\n  { token: '}', description: 'End repeat marker', operation: repeatEverythingToEndRepeatLocation },\n  { token: 'LZ|', description: 'Bar line', operation: createNewMeasure },\n  { token: '|', description: 'Bar line', operation: createNewMeasure },\n  { token: 'LZ', description: 'Bar line', operation: createNewMeasure },\n  { token: '[', description: 'Double bar start', operation: createNewMeasure },\n  { token: ']', description: 'Double bar end', operation: repeatRemainingEndings },\n  { token: /N(\\d)/, description: 'Numbered endings', operation: setEndRepeatLocation },\n  { token: 'Z', description: 'Final bar line', operation: repeatRemainingEndings },\n  { token: /[A-GW]{1}[\\+\\-\\^\\dhob#suadlt]*(\\/[A-G][#b]?)?/, description: 'Chord', operation: pushChordInMeasures }\n];\n\n//chord regex:\n//  letters A-G and W (W is an invisible slash chord)\n//  {1} only one of the aforementioned letters\n//  followed by zero or more of these: + - ^ h o # b digit\n//  followed by an optional group (to catch slash chords)\n//    that starts with a slash\n//    followed by A-G\n//    followed by optional # or b\n\nfunction checkForRepeats(match) {\n  if (match[1].toLowerCase() === 'd.c. al 3rd ending') {\n    thirdEndingImminent = true;\n  }\n  if (match[1].toLowerCase() === 'd.c. al fine') {\n    dcAlFineImminent = true;\n  }\n  if (match[1].toLowerCase() === 'd.c. al coda') {\n    dcAlCodaImminent = true;\n  }\n  if (match[1].toLowerCase() === 'd.s. al coda') {\n    dsAlCodaImminent = true;\n  }\n  if (match[1].toLowerCase() === 'fine') {\n    fineLocation = measures.length;\n  }\n}\n\nfunction setTimeSignature(match) {\n  timeSignature = match[1];\n}\n\nfunction pushNull() {\n  if (measures.length === 0) measures.push([]);\n  measures[measures.length - 1].push(null);\n}\n\nfunction repeatLastMeasure() {\n  measures[measures.length - 1] = measures[measures.length - 2];\n}\n\nfunction repeatLastMeasureAndAddNew() {\n  measures[measures.length] = measures[measures.length - 1];\n}\n\nfunction repeatLastTwoMeasures() {\n  measures[measures.length - 1] = measures[measures.length - 3];\n  measures[measures.length] = measures[measures.length - 2];\n}\n\nfunction setStartRepeatLocation() {\n  createNewMeasure();\n  startRepeatLocation = measures.length - 1;\n  endRepeatLocation = null;\n}\n\nfunction setEndRepeatLocation(match) {\n  //if the ending is N1, set that as the end of the repeat, because next time around we go to N2\n  const ending = parseInt(match[1]);\n  if (ending === 1) {\n    endRepeatLocation = measures.length - 1;\n  }\n}\n\nfunction setSegnoLocation() {\n  segnoLocation = measures.length - 1;\n}\n\nfunction setCodaLocation() {\n  codaLocation = measures.length;\n}\n\nfunction createNewMeasure() {\n  //unless the last measure is a blank, insert a new blank measure\n  if (measures.length === 0 || measures[measures.length - 1].length !== 0) {\n    measures.push([]);\n  }\n}\n\nfunction repeatEverythingToEndRepeatLocation() {\n  if (!endRepeatLocation) {\n    endRepeatLocation = measures.length;\n  } \n  measures.push(...measures.slice(startRepeatLocation, endRepeatLocation));\n  createNewMeasure();\n}\n\nfunction repeatRemainingEndings() {\n  if (thirdEndingImminent) {\n    repeatEverythingToEndRepeatLocation();\n    thirdEndingImminent = false; \n  }\n  if (dcAlFineImminent) {\n    measures.push(...measures.slice(0, fineLocation));\n    dcAlFineImminent = false; \n  }\n  if (dcAlCodaImminent) {\n    measures.push(...measures.slice(0, codaLocation));\n    dcAlCodaImminent = false; \n  }\n  if (dsAlCodaImminent) {\n    measures.push(...measures.slice(segnoLocation, codaLocation));\n    dsAlCodaImminent = false; \n  }\n}\n\nfunction pushChordInMeasures(match) {\n  if (measures.length === 0) measures.push([]);\n\n  let chord = match[0];\n  if (chord.startsWith('W') && lastChord) {\n    chord = chord.replace('W', lastChord)\n  } else {\n    lastChord = chord.split('/')[0];\n  }\n  measures[measures.length - 1].push(chord)\n}\n\nfunction parse(inputString) {\n  // loop through the rules until one of them applies to the beginning of the string\n  // chop off the match and parse again \n\n  for (let i = 0; i < rules.length; i++) {\n    const rule = rules[i];\n\n    if (typeof rule.token === 'string' && inputString.startsWith(rule.token)) {\n      if (rule.operation) rule.operation();\n      parse(inputString.substring(rule.token.length).trim());\n      break;\n    } else if (rule.token instanceof RegExp) {\n      const match = inputString.match(rule.token);\n      if (match && match.index === 0) {\n        if (rule.operation) rule.operation(match);\n        parse(inputString.substring(match[0].length).trim());\n        break;\n      }\n    }\n    if (i === rules.length - 1 && inputString.length > 1) {\n      // we got to the last rule and no rule applied\n      // trim off one character and parse again\n      parse(inputString.substring(1));\n    }\n  }\n}\nfunction removeEmptyMeasures(measures){\n  return measures.filter(x => x.length !== 0)\n}\n\nmodule.exports = function (raw) {\n  resetVars();\n  parse(raw);\n  return { measures: removeEmptyMeasures(measures), timeSignature, raw };\n}\n\n\n//updates\n//-handles NC as null chords\n//-repeats 1.2.3 \n//-segno, coda\n// -time signature\n//- removed the Song constructor, and Playlist constructor. now returning pure JSON\n","'use strict';\n\nconst protocolRegex = /.*?irealb:\\/\\/([^\"]*)/;\nconst musicPrefix = \"1r34LbKcu7\";\nconst unscramble = require('./unscramble');\nconst parser = require('./parser');\n\nfunction parseMusic(data) {\n  const parts = data.split(musicPrefix);\n  return parser(unscramble.ireal(parts[1]));\n}\n\nfunction makeSong(data) {\n  const parts = data.split(/=+/).filter(x => x != \"\"); //split on one or more equal signs, remove the blanks\n  let title, composer, style, key, transpose, music, compStyle, bpm, repeats = null;\n\n  if (parts.length === 7) {\n    [title, composer, style, key, music, bpm, repeats] = parts;\n  }\n  if (parts.length === 8 && parts[4].startsWith(musicPrefix)) {\n    [title, composer, style, key, music, compStyle, bpm, repeats] = parts;\n  }\n  if (parts.length === 8 && parts[5].startsWith(musicPrefix)) {\n    [title, composer, style, key, transpose, music, bpm, repeats] = parts;\n  }\n  if (parts.length === 9) {\n    [title, composer, style, key, transpose, music, compStyle, bpm, repeats] = parts;\n  }\n\n  return {\n    title,\n    composer,\n    style,\n    key,\n    transpose: transpose ? parseInt(transpose) : null,\n    music: parseMusic(music),\n    compStyle,\n    bpm: bpm ? parseInt(bpm) : null,\n    repeats: repeats ? parseInt(repeats) : null\n  }\n}\n\nmodule.exports = function (data) {\n  const percentEncoded = protocolRegex.exec(data);\n  const percentDecoded = decodeURIComponent(percentEncoded[1]);\n  const parts = percentDecoded.split(\"===\");  //songs are separated by ===\n\n  return {\n    name: (parts.length > 1) ? parts.pop() : undefined,\n    songs: parts.map(x => makeSong(x))\n  }\n};","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","var isBrowser = (typeof window !== 'undefined')\n\nvar CLOCK_DEFAULTS = {\n  toleranceLate: 0.10,\n  toleranceEarly: 0.001\n}\n\n// ==================== Event ==================== //\nvar Event = function(clock, deadline, func) {\n  this.clock = clock\n  this.func = func\n  this._cleared = false // Flag used to clear an event inside callback\n\n  this.toleranceLate = clock.toleranceLate\n  this.toleranceEarly = clock.toleranceEarly\n  this._latestTime = null\n  this._earliestTime = null\n  this.deadline = null\n  this.repeatTime = null\n\n  this.schedule(deadline)\n}\n\n// Unschedules the event\nEvent.prototype.clear = function() {\n  this.clock._removeEvent(this)\n  this._cleared = true\n  return this\n}\n\n// Sets the event to repeat every `time` seconds.\nEvent.prototype.repeat = function(time) {\n  if (time === 0)\n    throw new Error('delay cannot be 0')\n  this.repeatTime = time\n  if (!this.clock._hasEvent(this))\n    this.schedule(this.deadline + this.repeatTime)\n  return this\n}\n\n// Sets the time tolerance of the event.\n// The event will be executed in the interval `[deadline - early, deadline + late]`\n// If the clock fails to execute the event in time, the event will be dropped.\nEvent.prototype.tolerance = function(values) {\n  if (typeof values.late === 'number')\n    this.toleranceLate = values.late\n  if (typeof values.early === 'number')\n    this.toleranceEarly = values.early\n  this._refreshEarlyLateDates()\n  if (this.clock._hasEvent(this)) {\n    this.clock._removeEvent(this)\n    this.clock._insertEvent(this)\n  }\n  return this\n}\n\n// Returns true if the event is repeated, false otherwise\nEvent.prototype.isRepeated = function() { return this.repeatTime !== null }\n\n// Schedules the event to be ran before `deadline`.\n// If the time is within the event tolerance, we handle the event immediately.\n// If the event was already scheduled at a different time, it is rescheduled.\nEvent.prototype.schedule = function(deadline) {\n  this._cleared = false\n  this.deadline = deadline\n  this._refreshEarlyLateDates()\n\n  if (this.clock.context.currentTime >= this._earliestTime) {\n    this._execute()\n  \n  } else if (this.clock._hasEvent(this)) {\n    this.clock._removeEvent(this)\n    this.clock._insertEvent(this)\n  \n  } else this.clock._insertEvent(this)\n}\n\nEvent.prototype.timeStretch = function(tRef, ratio) {\n  if (this.isRepeated())\n    this.repeatTime = this.repeatTime * ratio\n\n  var deadline = tRef + ratio * (this.deadline - tRef)\n  // If the deadline is too close or past, and the event has a repeat,\n  // we calculate the next repeat possible in the stretched space.\n  if (this.isRepeated()) {\n    while (this.clock.context.currentTime >= deadline - this.toleranceEarly)\n      deadline += this.repeatTime\n  }\n  this.schedule(deadline)\n}\n\n// Executes the event\nEvent.prototype._execute = function() {\n  if (this.clock._started === false) return\n  this.clock._removeEvent(this)\n\n  if (this.clock.context.currentTime < this._latestTime)\n    this.func(this)\n  else {\n    if (this.onexpired) this.onexpired(this)\n    console.warn('event expired')\n  }\n  // In the case `schedule` is called inside `func`, we need to avoid\n  // overrwriting with yet another `schedule`.\n  if (!this.clock._hasEvent(this) && this.isRepeated() && !this._cleared)\n    this.schedule(this.deadline + this.repeatTime) \n}\n\n// Updates cached times\nEvent.prototype._refreshEarlyLateDates = function() {\n  this._latestTime = this.deadline + this.toleranceLate\n  this._earliestTime = this.deadline - this.toleranceEarly\n}\n\n// ==================== WAAClock ==================== //\nvar WAAClock = module.exports = function(context, opts) {\n  var self = this\n  opts = opts || {}\n  this.tickMethod = opts.tickMethod || 'ScriptProcessorNode'\n  this.toleranceEarly = opts.toleranceEarly || CLOCK_DEFAULTS.toleranceEarly\n  this.toleranceLate = opts.toleranceLate || CLOCK_DEFAULTS.toleranceLate\n  this.context = context\n  this._events = []\n  this._started = false\n}\n\n// ---------- Public API ---------- //\n// Schedules `func` to run after `delay` seconds.\nWAAClock.prototype.setTimeout = function(func, delay) {\n  return this._createEvent(func, this._absTime(delay))\n}\n\n// Schedules `func` to run before `deadline`.\nWAAClock.prototype.callbackAtTime = function(func, deadline) {\n  return this._createEvent(func, deadline)\n}\n\n// Stretches `deadline` and `repeat` of all scheduled `events` by `ratio`, keeping\n// their relative distance to `tRef`. In fact this is equivalent to changing the tempo.\nWAAClock.prototype.timeStretch = function(tRef, events, ratio) {\n  events.forEach(function(event) { event.timeStretch(tRef, ratio) })\n  return events\n}\n\n// Removes all scheduled events and starts the clock \nWAAClock.prototype.start = function() {\n  if (this._started === false) {\n    var self = this\n    this._started = true\n    this._events = []\n\n    if (this.tickMethod === 'ScriptProcessorNode') {\n      var bufferSize = 256\n      // We have to keep a reference to the node to avoid garbage collection\n      this._clockNode = this.context.createScriptProcessor(bufferSize, 1, 1)\n      this._clockNode.connect(this.context.destination)\n      this._clockNode.onaudioprocess = function () {\n        process.nextTick(function() { self._tick() })\n      }\n    } else if (this.tickMethod === 'manual') null // _tick is called manually\n\n    else throw new Error('invalid tickMethod ' + this.tickMethod)\n  }\n}\n\n// Stops the clock\nWAAClock.prototype.stop = function() {\n  if (this._started === true) {\n    this._started = false\n    this._clockNode.disconnect()\n  }  \n}\n\n// ---------- Private ---------- //\n\n// This function is ran periodically, and at each tick it executes\n// events for which `currentTime` is included in their tolerance interval.\nWAAClock.prototype._tick = function() {\n  var event = this._events.shift()\n\n  while(event && event._earliestTime <= this.context.currentTime) {\n    event._execute()\n    event = this._events.shift()\n  }\n\n  // Put back the last event\n  if(event) this._events.unshift(event)\n}\n\n// Creates an event and insert it to the list\nWAAClock.prototype._createEvent = function(func, deadline) {\n  return new Event(this, deadline, func)\n}\n\n// Inserts an event to the list\nWAAClock.prototype._insertEvent = function(event) {\n  this._events.splice(this._indexByTime(event._earliestTime), 0, event)\n}\n\n// Removes an event from the list\nWAAClock.prototype._removeEvent = function(event) {\n  var ind = this._events.indexOf(event)\n  if (ind !== -1) this._events.splice(ind, 1)\n}\n\n// Returns true if `event` is in queue, false otherwise\nWAAClock.prototype._hasEvent = function(event) {\n return this._events.indexOf(event) !== -1\n}\n\n// Returns the index of the first event whose deadline is >= to `deadline`\nWAAClock.prototype._indexByTime = function(deadline) {\n  // performs a binary search\n  var low = 0\n    , high = this._events.length\n    , mid\n  while (low < high) {\n    mid = Math.floor((low + high) / 2)\n    if (this._events[mid]._earliestTime < deadline)\n      low = mid + 1\n    else high = mid\n  }\n  return low\n}\n\n// Converts from relative time to absolute time\nWAAClock.prototype._absTime = function(relTime) {\n  return relTime + this.context.currentTime\n}\n\n// Converts from absolute time to relative time \nWAAClock.prototype._relTime = function(absTime) {\n  return absTime - this.context.currentTime\n}","var WAAClock = require('./lib/WAAClock')\n\nmodule.exports = WAAClock\nif (typeof window !== 'undefined') window.WAAClock = WAAClock\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar waaclock_1 = __importDefault(require(\"waaclock\"));\nvar Pulse = /** @class */ (function () {\n    function Pulse(props) {\n        if (props === void 0) { props = {}; }\n        this.defaults = {\n            bpm: 120,\n            cycle: 4,\n            delay: 0\n        };\n        this.events = [];\n        this.callbackAtTime = false;\n        this.props = Object.assign({}, this.defaults, props);\n        this.context = this.props.context || new AudioContext();\n        this.clock = this.props.clock || new waaclock_1.default(this.context, { toleranceEarly: 0.1, toleranceLate: 0.1 });\n    }\n    Pulse.prototype.getMeasureLength = function (bpm, beatsPerMeasure) {\n        if (bpm === void 0) { bpm = this.props.bpm; }\n        if (beatsPerMeasure === void 0) { beatsPerMeasure = this.props.cycle; }\n        return 60 / bpm * beatsPerMeasure;\n    };\n    Pulse.prototype.arrayPulse = function (children, length, path, start, callback, deadline) {\n        var _this = this;\n        if (length === void 0) { length = 1; }\n        if (path === void 0) { path = []; }\n        if (start === void 0) { start = 0; }\n        //TODO: return promise on next one (for chaining)\n        if (!Array.isArray(children)) {\n            if (children === 0) {\n                return 0;\n            }\n            var item_1 = {\n                value: children,\n                length: length,\n                path: path,\n                start: start,\n                pulse: this,\n                cycle: this.props.cycle,\n                timeout: null\n            };\n            start += this.props.delay; // TODO: be able to add delay from arrayPulse fn directly\n            if (this.callbackAtTime) {\n                start += deadline ? deadline : this.context.currentTime;\n                item_1.timeout = this.clock.callbackAtTime(function (event) {\n                    return callback(Object.assign(item_1, { event: event, deadline: event.deadline }));\n                }, start);\n            }\n            else {\n                start += (deadline || this.context.currentTime) - this.context.currentTime;\n                item_1.timeout = this.clock.setTimeout(function (event) {\n                    return callback(Object.assign(item_1, { event: event, deadline: event.deadline }));\n                }, start);\n            }\n            this.events.push(item_1.timeout);\n            return item_1;\n        }\n        var childLength = length / children.length;\n        return {\n            length: length,\n            children: children.map(function (el, i) {\n                return _this.arrayPulse(el, childLength, path.concat([i]), start + i * childLength, callback, deadline);\n            })\n        };\n    };\n    Pulse.prototype.tickArray = function (array, callback, deadline, length) {\n        var _this = this;\n        array.push(1);\n        var l = length || this.getMeasureLength() * array.length;\n        this.start();\n        return new Promise(function (resolve, reject) {\n            _this.arrayPulse(array, l, [], 0, function (tick, start) {\n                if (tick.path[0] === array.length - 1) {\n                    resolve(tick);\n                }\n                else {\n                    callback(tick, start);\n                }\n            }, deadline);\n        });\n    };\n    Pulse.prototype.start = function () {\n        // console.log('start with', this.events.length, 'events');\n        var criticalEvents = 6000;\n        if (this.events.length > criticalEvents) {\n            console.warn('more than ', criticalEvents, 'events received. Consider using less \"times\" to keep the timing precies');\n        }\n        this.clock.start();\n    };\n    Pulse.prototype.stop = function () {\n        this.clock.stop();\n    };\n    Pulse.prototype.changeTempo = function (newTempo, timeout) {\n        var _this = this;\n        if (timeout === void 0) { timeout = 0.2; }\n        var factor = this.props.bpm / newTempo;\n        this.props.bpm = newTempo;\n        var events = this.events.filter(function (e) {\n            return e.deadline - _this.context.currentTime > timeout;\n        });\n        // TODO: stretch durations?!\n        this.clock.timeStretch(this.context.currentTime, events, factor);\n    };\n    return Pulse;\n}());\nexports.Pulse = Pulse;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Sheet_1 = require(\"./Sheet\");\n;\nvar Measure = /** @class */ (function () {\n    function Measure() {\n    }\n    Measure.from = function (measure) {\n        if (typeof measure === 'string') {\n            return {\n                chords: [measure]\n            };\n        }\n        if (Array.isArray(measure)) {\n            return {\n                chords: [].concat(measure)\n            };\n        }\n        return Object.assign({}, measure);\n        // return measure;\n    };\n    Measure.hasSign = function (sign, measure) {\n        measure = Measure.from(measure);\n        return !!measure.signs && measure.signs.includes(sign);\n    };\n    Measure.hasHouse = function (measure, number) {\n        measure = Measure.from(measure);\n        var house = measure.house;\n        if (!house) {\n            return false;\n        }\n        else if (number === undefined) {\n            return true;\n        }\n        if (!Array.isArray(house)) {\n            house = [house];\n        }\n        return house.includes(number);\n    };\n    Measure.getJumpSign = function (measure) {\n        var signs = (Measure.from(measure).signs || [])\n            .filter(function (s) { return Object.keys(Sheet_1.Sheet.jumpSigns).includes(s); });\n        if (signs.length > 1) {\n            console.warn('measure cannot contain more than one repeat sign', measure);\n        }\n        return Sheet_1.Sheet.jumpSigns[signs[0]];\n    };\n    Measure.hasJumpSign = function (measure) {\n        return Object.keys(Sheet_1.Sheet.jumpSigns)\n            .reduce(function (match, current) { return match || Measure.hasSign(current, measure); }, false);\n    };\n    return Measure;\n}());\nexports.Measure = Measure;\n","var NAMES = \"C C# Db D D# Eb E F F# Gb G G# Ab A A# Bb B\".split(\" \");\r\nvar names = function (accTypes) {\r\n    return typeof accTypes !== \"string\"\r\n        ? NAMES.slice()\r\n        : NAMES.filter(function (n) {\r\n            var acc = n[1] || \" \";\r\n            return accTypes.indexOf(acc) !== -1;\r\n        });\r\n};\r\nvar SHARPS = names(\" #\");\r\nvar FLATS = names(\" b\");\r\nvar REGEX = /^([a-gA-G]?)(#{1,}|b{1,}|x{1,}|)(-?\\d*)\\s*(.*)$/;\r\nfunction tokenize(str) {\r\n    if (typeof str !== \"string\")\r\n        str = \"\";\r\n    var m = REGEX.exec(str);\r\n    return [m[1].toUpperCase(), m[2].replace(/x/g, \"##\"), m[3], m[4]];\r\n}\r\nvar NO_NOTE = Object.freeze({\r\n    pc: null,\r\n    name: null,\r\n    step: null,\r\n    alt: null,\r\n    oct: null,\r\n    octStr: null,\r\n    chroma: null,\r\n    midi: null,\r\n    freq: null\r\n});\r\nvar SEMI = [0, 2, 4, 5, 7, 9, 11];\r\nvar properties = function (str) {\r\n    var tokens = tokenize(str);\r\n    if (tokens[0] === \"\" || tokens[3] !== \"\")\r\n        return NO_NOTE;\r\n    var letter = tokens[0], acc = tokens[1], octStr = tokens[2];\r\n    var p = {\r\n        letter: letter,\r\n        acc: acc,\r\n        octStr: octStr,\r\n        pc: letter + acc,\r\n        name: letter + acc + octStr,\r\n        step: (letter.charCodeAt(0) + 3) % 7,\r\n        alt: acc[0] === \"b\" ? -acc.length : acc.length,\r\n        oct: octStr.length ? +octStr : null,\r\n        chroma: 0,\r\n        midi: null,\r\n        freq: null\r\n    };\r\n    p.chroma = (SEMI[p.step] + p.alt + 120) % 12;\r\n    p.midi = p.oct !== null ? SEMI[p.step] + p.alt + 12 * (p.oct + 1) : null;\r\n    p.freq = midiToFreq(p.midi);\r\n    return Object.freeze(p);\r\n};\r\nvar memo = function (fn, cache) {\r\n    if (cache === void 0) { cache = {}; }\r\n    return function (str) { return cache[str] || (cache[str] = fn(str)); };\r\n};\r\nvar props = memo(properties);\r\nvar name = function (str) { return props(str).name; };\r\nvar pc = function (str) { return props(str).pc; };\r\nvar isMidiRange = function (m) { return m >= 0 && m <= 127; };\r\nvar midi = function (note) {\r\n    if (typeof note !== \"number\" && typeof note !== \"string\") {\r\n        return null;\r\n    }\r\n    var midi = props(note).midi;\r\n    var value = midi || midi === 0 ? midi : +note;\r\n    return isMidiRange(value) ? value : null;\r\n};\r\nvar midiToFreq = function (midi, tuning) {\r\n    if (tuning === void 0) { tuning = 440; }\r\n    return typeof midi === \"number\" ? Math.pow(2, (midi - 69) / 12) * tuning : null;\r\n};\r\nvar freq = function (note) { return props(note).freq || midiToFreq(note); };\r\nvar L2 = Math.log(2);\r\nvar L440 = Math.log(440);\r\nvar freqToMidi = function (freq) {\r\n    var v = (12 * (Math.log(freq) - L440)) / L2 + 69;\r\n    return Math.round(v * 100) / 100;\r\n};\r\nvar chroma = function (str) { return props(str).chroma; };\r\nvar oct = function (str) { return props(str).oct; };\r\nvar LETTERS = \"CDEFGAB\";\r\nvar stepToLetter = function (step) { return LETTERS[step]; };\r\nvar fillStr = function (s, n) { return Array(n + 1).join(s); };\r\nvar numToStr = function (num, op) {\r\n    return typeof num !== \"number\" ? \"\" : op(num);\r\n};\r\nvar altToAcc = function (alt) {\r\n    return numToStr(alt, function (alt) { return (alt < 0 ? fillStr(\"b\", -alt) : fillStr(\"#\", alt)); });\r\n};\r\nvar from = function (fromProps, baseNote) {\r\n    if (fromProps === void 0) { fromProps = {}; }\r\n    if (baseNote === void 0) { baseNote = null; }\r\n    var _a = baseNote\r\n        ? Object.assign({}, props(baseNote), fromProps)\r\n        : fromProps, step = _a.step, alt = _a.alt, oct = _a.oct;\r\n    if (typeof step !== \"number\")\r\n        return null;\r\n    var letter = stepToLetter(step);\r\n    if (!letter)\r\n        return null;\r\n    var pc = letter + altToAcc(alt);\r\n    return oct || oct === 0 ? pc + oct : pc;\r\n};\r\nvar build = from;\r\nfunction fromMidi(num, sharps) {\r\n    if (sharps === void 0) { sharps = false; }\r\n    num = Math.round(num);\r\n    var pcs = sharps === true ? SHARPS : FLATS;\r\n    var pc = pcs[num % 12];\r\n    var o = Math.floor(num / 12) - 1;\r\n    return pc + o;\r\n}\r\nvar simplify = function (note, sameAcc) {\r\n    if (sameAcc === void 0) { sameAcc = true; }\r\n    var _a = props(note), alt = _a.alt, chroma = _a.chroma, midi = _a.midi;\r\n    if (chroma === null)\r\n        return null;\r\n    var alteration = alt;\r\n    var useSharps = sameAcc === false ? alteration < 0 : alteration > 0;\r\n    return midi === null\r\n        ? pc(fromMidi(chroma, useSharps))\r\n        : fromMidi(midi, useSharps);\r\n};\r\nvar enharmonic = function (note) { return simplify(note, false); };\n\nexport { names, tokenize, props, name, pc, midi, midiToFreq, freq, freqToMidi, chroma, oct, stepToLetter, altToAcc, from, build, fromMidi, simplify, enharmonic };\n","/**\n * [![npm version](https://img.shields.io/npm/v/tonal-array.svg?style=flat-square)](https://www.npmjs.com/package/tonal-array)\n *\n * Tonal array utilities. Create ranges, sort notes, ...\n *\n * @example\n * import * as Array;\n * Array.sort([\"f\", \"a\", \"c\"]) // => [\"C\", \"F\", \"A\"]\n *\n * @example\n * const Array = require(\"tonal-array\")\n * Array.range(1, 4) // => [1, 2, 3, 4]\n *\n * @module Array\n */\nimport { props, name } from \"tonal-note\";\n\n// ascending range\nfunction ascR(b, n) {\n  for (var a = []; n--; a[n] = n + b){ ; }\n  return a;\n}\n// descending range\nfunction descR(b, n) {\n  for (var a = []; n--; a[n] = b - n){ ; }\n  return a;\n}\n\n/**\n * Create a numeric range\n *\n * @param {Number} from\n * @param {Number} to\n * @return {Array}\n *\n * @example\n * Array.range(-2, 2) // => [-2, -1, 0, 1, 2]\n * Array.range(2, -2) // => [2, 1, 0, -1, -2]\n */\nexport function range(a, b) {\n  return a === null || b === null\n    ? []\n    : a < b\n      ? ascR(a, b - a + 1)\n      : descR(a, a - b + 1);\n}\n/**\n *\n * Rotates a list a number of times. It\"s completly agnostic about the\n * contents of the list.\n *\n * @param {Integer} times - the number of rotations\n * @param {Array} array\n * @return {Array} the rotated array\n * @example\n * Array.rotate(1, [1, 2, 3]) // => [2, 3, 1]\n */\nexport function rotate(times, arr) {\n  var len = arr.length;\n  var n = ((times % len) + len) % len;\n  return arr.slice(n, len).concat(arr.slice(0, n));\n}\n\n/**\n * Return a copy of the array with the null values removed\n * @function\n * @param {Array} array\n * @return {Array}\n *\n * @example\n * Array.compact([\"a\", \"b\", null, \"c\"]) // => [\"a\", \"b\", \"c\"]\n */\nexport var compact = function (arr) { return arr.filter(function (n) { return n === 0 || n; }); };\n\n// a function that get note heights (with negative number for pitch classes)\nvar height = function (name) {\n  var m = props(name).midi;\n  return m !== null ? m : props(name + \"-100\").midi;\n};\n\n/**\n * Sort an array of notes in ascending order\n *\n * @param {String|Array} notes\n * @return {Array} sorted array of notes\n */\nexport function sort(src) {\n  return compact(src.map(name)).sort(function (a, b) { return height(a) > height(b); });\n}\n\n/**\n * Get sorted notes with duplicates removed\n *\n * @function\n * @param {Array} notes\n */\nexport function unique(arr) {\n  return sort(arr).filter(function (n, i, a) { return i === 0 || n !== a[i - 1]; });\n}\n\n/**\n * Randomizes the order of the specified array in-place, using the Fisher–Yates shuffle.\n *\n * @private\n * @function\n * @param {Array|String} arr - the array\n * @return {Array} the shuffled array\n *\n * @example\n * Array.shuffle([\"C\", \"D\", \"E\", \"F\"])\n */\nexport var shuffle = function (arr, rnd) {\n  if ( rnd === void 0 ) rnd = Math.random;\n\n  var i, t;\n  var m = arr.length;\n  while (m) {\n    i = (rnd() * m--) | 0;\n    t = arr[m];\n    arr[m] = arr[i];\n    arr[i] = t;\n  }\n  return arr;\n};\n\n/**\n * Get all permutations of an array\n * http://stackoverflow.com/questions/9960908/permutations-in-javascript\n *\n * @param {Array} array - the array\n * @return {Array<Array>} an array with all the permutations\n */\nexport var permutations = function (arr) {\n  if (arr.length === 0) { return [[]]; }\n  return permutations(arr.slice(1)).reduce(function(acc, perm) {\n    return acc.concat(\n      arr.map(function(e, pos) {\n        var newPerm = perm.slice();\n        newPerm.splice(pos, 0, arr[0]);\n        return newPerm;\n      })\n    );\n  }, []);\n};\n","var IVL_TNL = \"([-+]?\\\\d+)(d{1,4}|m|M|P|A{1,4})\";\r\nvar IVL_STR = \"(AA|A|P|M|m|d|dd)([-+]?\\\\d+)\";\r\nvar REGEX = new RegExp(\"^\" + IVL_TNL + \"|\" + IVL_STR + \"$\");\r\nvar SIZES = [0, 2, 4, 5, 7, 9, 11];\r\nvar TYPES = \"PMMPPMM\";\r\nvar CLASSES = [0, 1, 2, 3, 4, 5, 6, 5, 4, 3, 2, 1];\r\nvar NAMES = \"1P 2m 2M 3m 3M 4P 5P 6m 6M 7m 7M 8P\".split(\" \");\r\nvar names = function (types) {\r\n    return typeof types !== \"string\"\r\n        ? NAMES.slice()\r\n        : NAMES.filter(function (n) { return types.indexOf(n[1]) !== -1; });\r\n};\r\nvar tokenize = function (str) {\r\n    var m = REGEX.exec(\"\" + str);\r\n    if (m === null)\r\n        return null;\r\n    return (m[1] ? [m[1], m[2]] : [m[4], m[3]]);\r\n};\r\nvar NO_IVL = Object.freeze({\r\n    name: null,\r\n    num: null,\r\n    q: null,\r\n    step: null,\r\n    alt: null,\r\n    dir: null,\r\n    type: null,\r\n    simple: null,\r\n    semitones: null,\r\n    chroma: null,\r\n    oct: null\r\n});\r\nvar fillStr = function (s, n) { return Array(Math.abs(n) + 1).join(s); };\r\nvar qToAlt = function (type, q) {\r\n    if (q === \"M\" && type === \"M\")\r\n        return 0;\r\n    if (q === \"P\" && type === \"P\")\r\n        return 0;\r\n    if (q === \"m\" && type === \"M\")\r\n        return -1;\r\n    if (/^A+$/.test(q))\r\n        return q.length;\r\n    if (/^d+$/.test(q))\r\n        return type === \"P\" ? -q.length : -q.length - 1;\r\n    return null;\r\n};\r\nvar altToQ = function (type, alt) {\r\n    if (alt === 0)\r\n        return type === \"M\" ? \"M\" : \"P\";\r\n    else if (alt === -1 && type === \"M\")\r\n        return \"m\";\r\n    else if (alt > 0)\r\n        return fillStr(\"A\", alt);\r\n    else if (alt < 0)\r\n        return fillStr(\"d\", type === \"P\" ? alt : alt + 1);\r\n    else\r\n        return null;\r\n};\r\nvar numToStep = function (num) { return (Math.abs(num) - 1) % 7; };\r\nvar properties = function (str) {\r\n    var t = tokenize(str);\r\n    if (t === null)\r\n        return NO_IVL;\r\n    var p = {\r\n        num: 0,\r\n        q: \"d\",\r\n        name: \"\",\r\n        type: \"M\",\r\n        step: 0,\r\n        dir: -1,\r\n        simple: 1,\r\n        alt: 0,\r\n        oct: 0,\r\n        semitones: 0,\r\n        chroma: 0,\r\n        ic: 0\r\n    };\r\n    p.num = +t[0];\r\n    p.q = t[1];\r\n    p.step = numToStep(p.num);\r\n    p.type = TYPES[p.step];\r\n    if (p.type === \"M\" && p.q === \"P\")\r\n        return NO_IVL;\r\n    p.name = \"\" + p.num + p.q;\r\n    p.dir = p.num < 0 ? -1 : 1;\r\n    p.simple = (p.num === 8 || p.num === -8\r\n        ? p.num\r\n        : p.dir * (p.step + 1));\r\n    p.alt = qToAlt(p.type, p.q);\r\n    p.oct = Math.floor((Math.abs(p.num) - 1) / 7);\r\n    p.semitones = p.dir * (SIZES[p.step] + p.alt + 12 * p.oct);\r\n    p.chroma = ((((p.dir * (SIZES[p.step] + p.alt)) % 12) + 12) %\r\n        12);\r\n    return Object.freeze(p);\r\n};\r\nvar cache = {};\r\nfunction props(str) {\r\n    if (typeof str !== \"string\")\r\n        return NO_IVL;\r\n    return cache[str] || (cache[str] = properties(str));\r\n}\r\nvar num = function (str) { return props(str).num; };\r\nvar name = function (str) { return props(str).name; };\r\nvar semitones = function (str) { return props(str).semitones; };\r\nvar chroma = function (str) { return props(str).chroma; };\r\nvar ic = function (ivl) {\r\n    if (typeof ivl === \"string\")\r\n        ivl = props(ivl).chroma;\r\n    return typeof ivl === \"number\" ? CLASSES[ivl % 12] : null;\r\n};\r\nvar build = function (_a) {\r\n    var _b = _a === void 0 ? {} : _a, num = _b.num, step = _b.step, alt = _b.alt, _c = _b.oct, oct = _c === void 0 ? 1 : _c, dir = _b.dir;\r\n    if (step !== undefined)\r\n        num = step + 1 + 7 * oct;\r\n    if (num === undefined)\r\n        return null;\r\n    if (typeof alt !== \"number\")\r\n        return null;\r\n    var d = typeof dir !== \"number\" ? \"\" : dir < 0 ? \"-\" : \"\";\r\n    var type = TYPES[numToStep(num)];\r\n    return (d + num + altToQ(type, alt));\r\n};\r\nvar simplify = function (str) {\r\n    var p = props(str);\r\n    if (p === NO_IVL)\r\n        return null;\r\n    var intervalProps = p;\r\n    return intervalProps.simple + intervalProps.q;\r\n};\r\nvar invert = function (str) {\r\n    var p = props(str);\r\n    if (p === NO_IVL)\r\n        return null;\r\n    var intervalProps = p;\r\n    var step = (7 - intervalProps.step) % 7;\r\n    var alt = intervalProps.type === \"P\" ? -intervalProps.alt : -(intervalProps.alt + 1);\r\n    return build({ step: step, alt: alt, oct: intervalProps.oct, dir: intervalProps.dir });\r\n};\r\nvar IN = [1, 2, 2, 3, 3, 4, 5, 5, 6, 6, 7, 7];\r\nvar IQ = \"P m M m M P d P m M m M\".split(\" \");\r\nvar fromSemitones = function (num) {\r\n    var d = num < 0 ? -1 : 1;\r\n    var n = Math.abs(num);\r\n    var c = n % 12;\r\n    var o = Math.floor(n / 12);\r\n    return d * (IN[c] + 7 * o) + IQ[c];\r\n};\n\nexport { names, tokenize, qToAlt, altToQ, props, num, name, semitones, chroma, ic, build, simplify, invert, fromSemitones };\n","/**\n * [![npm version](https://img.shields.io/npm/v/tonal-distance.svg)](https://www.npmjs.com/package/tonal-distance)\n * [![tonal](https://img.shields.io/badge/tonal-distance-yellow.svg)](https://github.com/danigb/tonal/tree/master/packages/tonal/distance)\n *\n * Transpose notes by intervals and find distances between notes\n *\n * @example\n * // es6\n * import * as Distance from \"tonal-distance\"\n * Distance.interval(\"C3\", \"C4\") // => \"1P\"\n *\n * @example\n * // es6 import selected functions\n * import { interval, semitones, transpose } from \"tonal-distance\"\n *\n * semitones(\"C\" ,\"D\") // => 2\n * interval(\"C4\", \"G4\") // => \"5P\"\n * transpose(\"C4\", \"P5\") // => \"G4\"\n *\n * @example\n * // included in tonal facade\n * const Tonal = require(\"tonal\");\n * Tonal.Distance.transpose(\"C4\", \"P5\")\n * Tonal.Distance.transposeBy(\"P5\", \"C4\")\n *\n * @module Distance\n */\nimport { props as noteProps, build as fromNote } from \"tonal-note\";\nimport { props as iprops, build as ibuild } from \"tonal-interval\";\n\n// Map from letter step to number of fifths starting from \"C\":\n// { C: 0, D: 2, E: 4, F: -1, G: 1, A: 3, B: 5 }\nvar FIFTHS = [0, 2, 4, -1, 1, 3, 5];\n\n// Given a number of fifths, return the octaves they span\nvar fOcts = function (f) { return Math.floor((f * 7) / 12); };\n\n// Get the number of octaves it span each step\nvar FIFTH_OCTS = FIFTHS.map(fOcts);\n\nvar encode = function (ref) {\n  var step = ref.step;\n  var alt = ref.alt;\n  var oct = ref.oct;\n  var dir = ref.dir; if ( dir === void 0 ) dir = 1;\n\n  var f = FIFTHS[step] + 7 * alt;\n  if (oct === null) { return [dir * f]; }\n  var o = oct - FIFTH_OCTS[step] - 4 * alt;\n  return [dir * f, dir * o];\n};\n\n// We need to get the steps from fifths\n// Fifths for CDEFGAB are [ 0, 2, 4, -1, 1, 3, 5 ]\n// We add 1 to fifths to avoid negative numbers, so:\n// for [\"F\", \"C\", \"G\", \"D\", \"A\", \"E\", \"B\"] we have:\nvar STEPS = [3, 0, 4, 1, 5, 2, 6];\n\n// Return the number of fifths as if it were unaltered\nfunction unaltered(f) {\n  var i = (f + 1) % 7;\n  return i < 0 ? 7 + i : i;\n}\n\nvar decode = function (f, o, dir) {\n  var step = STEPS[unaltered(f)];\n  var alt = Math.floor((f + 1) / 7);\n  if (o === undefined) { return { step: step, alt: alt, dir: dir }; }\n  var oct = o + 4 * alt + FIFTH_OCTS[step];\n  return { step: step, alt: alt, oct: oct, dir: dir };\n};\n\nvar memo = function (fn, cache) {\n  if ( cache === void 0 ) cache = {};\n\n  return function (str) { return cache[str] || (cache[str] = fn(str)); };\n};\n\nvar encoder = function (props) { return memo(function (str) {\n    var p = props(str);\n    return p.name === null ? null : encode(p);\n  }); };\n\nvar encodeNote = encoder(noteProps);\nvar encodeIvl = encoder(iprops);\n\n/**\n * Transpose a note by an interval. The note can be a pitch class.\n *\n * This function can be partially applied.\n *\n * @param {String} note\n * @param {String} interval\n * @return {String} the transposed note\n * @example\n * import { tranpose } from \"tonal-distance\"\n * transpose(\"d3\", \"3M\") // => \"F#3\"\n * // it works with pitch classes\n * transpose(\"D\", \"3M\") // => \"F#\"\n * // can be partially applied\n * [\"C\", \"D\", \"E\", \"F\", \"G\"].map(transpose(\"M3)) // => [\"E\", \"F#\", \"G#\", \"A\", \"B\"]\n */\nexport function transpose(note, interval) {\n  if (arguments.length === 1) { return function (i) { return transpose(note, i); }; }\n  var n = encodeNote(note);\n  var i = encodeIvl(interval);\n  if (n === null || i === null) { return null; }\n  var tr = n.length === 1 ? [n[0] + i[0]] : [n[0] + i[0], n[1] + i[1]];\n  return fromNote(decode(tr[0], tr[1]));\n}\n\n/**\n * Transpose a pitch class by a number of perfect fifths.\n *\n * It can be partially applied.\n *\n * @function\n * @param {String} pitchClass - the pitch class\n * @param {Integer} fifhts - the number of fifths\n * @return {String} the transposed pitch class\n *\n * @example\n * import { trFifths } from \"tonal-transpose\"\n * [0, 1, 2, 3, 4].map(trFifths(\"C\")) // => [\"C\", \"G\", \"D\", \"A\", \"E\"]\n * // or using tonal\n * Distance.trFifths(\"G4\", 1) // => \"D\"\n */\n\nexport function trFifths(note, fifths) {\n  if (arguments.length === 1) { return function (f) { return trFifths(note, f); }; }\n  var n = encodeNote(note);\n  if (n === null) { return null; }\n  return fromNote(decode(n[0] + fifths));\n}\n\n/**\n * Get the distance in fifths between pitch classes\n *\n * Can be partially applied.\n *\n * @param {String} to - note or pitch class\n * @param {String} from - note or pitch class\n */\nexport function fifths(from, to) {\n  if (arguments.length === 1) { return function (to) { return fifths(from, to); }; }\n  var f = encodeNote(from);\n  var t = encodeNote(to);\n  if (t === null || f === null) { return null; }\n  return t[0] - f[0];\n}\n\n/**\n * The same as transpose with the arguments inverted.\n *\n * Can be partially applied.\n *\n * @param {String} note\n * @param {String} interval\n * @return {String} the transposed note\n * @example\n * import { tranposeBy } from \"tonal-distance\"\n * transposeBy(\"3m\", \"5P\") // => \"7m\"\n */\nexport function transposeBy(interval, note) {\n  if (arguments.length === 1) { return function (n) { return transpose(n, interval); }; }\n  return transpose(note, interval);\n}\n\nvar isDescending = function (e) { return e[0] * 7 + e[1] * 12 < 0; };\nvar decodeIvl = function (i) { return isDescending(i) ? decode(-i[0], -i[1], -1) : decode(i[0], i[1], 1); };\n\nexport function addIntervals(ivl1, ivl2, dir) {\n  var i1 = encodeIvl(ivl1);\n  var i2 = encodeIvl(ivl2);\n  if (i1 === null || i2 === null) { return null; }\n  var i = [i1[0] + dir * i2[0], i1[1] + dir * i2[1]];\n  return ibuild(decodeIvl(i));\n}\n\n/**\n * Add two intervals\n *\n * Can be partially applied.\n *\n * @param {String} interval1\n * @param {String} interval2\n * @return {String} the resulting interval\n * @example\n * import { add } from \"tonal-distance\"\n * add(\"3m\", \"5P\") // => \"7m\"\n */\nexport function add(ivl1, ivl2) {\n  if (arguments.length === 1) { return function (i2) { return add(ivl1, i2); }; }\n  return addIntervals(ivl1, ivl2, 1);\n}\n\n/**\n * Subtract two intervals\n *\n * Can be partially applied\n *\n * @param {String} minuend\n * @param {String} subtrahend\n * @return {String} interval diference\n */\nexport function subtract(ivl1, ivl2) {\n  if (arguments.length === 1) { return function (i2) { return add(ivl1, i2); }; }\n  return addIntervals(ivl1, ivl2, -1);\n}\n\n/**\n * Find the interval between two pitches. It works with pitch classes\n * (both must be pitch classes and the interval is always ascending)\n *\n * Can be partially applied\n *\n * @param {String} from - distance from\n * @param {String} to - distance to\n * @return {String} the interval distance\n *\n * @example\n * import { interval } from \"tonal-distance\"\n * interval(\"C2\", \"C3\") // => \"P8\"\n * interval(\"G\", \"B\") // => \"M3\"\n *\n * @example\n * import * as Distance from \"tonal-distance\"\n * Distance.interval(\"M2\", \"P5\") // => \"P4\"\n */\nexport function interval(from, to) {\n  if (arguments.length === 1) { return function (t) { return interval(from, t); }; }\n  var f = encodeNote(from);\n  var t = encodeNote(to);\n  if (f === null || t === null || f.length !== t.length) { return null; }\n  var d =\n    f.length === 1\n      ? [t[0] - f[0], -Math.floor(((t[0] - f[0]) * 7) / 12)]\n      : [t[0] - f[0], t[1] - f[1]];\n  return ibuild(decodeIvl(d));\n}\n\n/**\n * Get the distance between two notes in semitones\n *\n * @param {String|Pitch} from - first note\n * @param {String|Pitch} to - last note\n * @return {Integer} the distance in semitones or null if not valid notes\n * @example\n * import { semitones } from \"tonal-distance\"\n * semitones(\"C3\", \"A2\") // => -3\n * // or use tonal\n * Tonal.Distance.semitones(\"C3\", \"G3\") // => 7\n */\nexport function semitones(from, to) {\n  if (arguments.length === 1) { return function (t) { return semitones(from, t); }; }\n  var f = noteProps(from);\n  var t = noteProps(to);\n  return f.midi !== null && t.midi !== null\n    ? t.midi - f.midi\n    : f.chroma !== null && t.chroma !== null\n      ? (t.chroma - f.chroma + 12) % 12\n      : null;\n}\n",null,"/**\n * [![npm version](https://img.shields.io/npm/v/tonal-pcset.svg?style=flat-square)](https://www.npmjs.com/package/tonal-pcset)\n * [![tonal](https://img.shields.io/badge/tonal-pcset-yellow.svg?style=flat-square)](https://www.npmjs.com/browse/keyword/tonal)\n *\n * `tonal-pcset` is a collection of functions to work with pitch class sets, oriented\n * to make comparations (isEqual, isSubset, isSuperset)\n *\n * This is part of [tonal](https://www.npmjs.com/package/tonal) music theory library.\n *\n * You can install via npm: `npm i --save tonal-pcset`\n *\n * ```js\n * // es6\n * import PcSet from \"tonal-pcset\"\n * var PcSet = require(\"tonal-pcset\")\n *\n * PcSet.isEqual(\"c2 d5 e6\", \"c6 e3 d1\") // => true\n * ```\n *\n * ## API documentation\n *\n * @module PcSet\n */\nimport { chroma as notechr } from \"tonal-note\";\nimport { chroma as ivlchr } from \"tonal-interval\";\nimport { rotate, range, compact } from \"tonal-array\";\n\nvar chr = function (str) { return notechr(str) || ivlchr(str) || 0; };\nvar pcsetNum = function (set) { return parseInt(chroma(set), 2); };\nvar clen = function (chroma) { return chroma.replace(/0/g, \"\").length; };\n\n/**\n * Get chroma of a pitch class set. A chroma identifies each set uniquely.\n * It\"s a 12-digit binary each presenting one semitone of the octave.\n *\n * Note that this function accepts a chroma as parameter and return it\n * without modification.\n *\n * @param {Array|String} set - the pitch class set\n * @return {String} a binary representation of the pitch class set\n * @example\n * PcSet.chroma([\"C\", \"D\", \"E\"]) // => \"1010100000000\"\n */\nexport function chroma(set) {\n  if (isChroma(set)) { return set; }\n  if (!Array.isArray(set)) { return \"\"; }\n  var b = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n  set.map(chr).forEach(function (i) {\n    b[i] = 1;\n  });\n  return b.join(\"\");\n}\n\nvar all = null;\n/**\n * Get a list of all possible chromas (all possible scales)\n * More information: http://allthescales.org/\n * @return {Array} an array of possible chromas from '10000000000' to '11111111111'\n *\n */\nexport function chromas(n) {\n  all = all || range(2048, 4095).map(function (n) { return n.toString(2); });\n  return typeof n === \"number\"\n    ? all.filter(function (chroma) { return clen(chroma) === n; })\n    : all.slice();\n}\n\n/**\n * Given a a list of notes or a pcset chroma, produce the rotations\n * of the chroma discarding the ones that starts with \"0\"\n *\n * This is used, for example, to get all the modes of a scale.\n *\n * @param {Array|String} set - the list of notes or pitchChr of the set\n * @param {Boolean} normalize - (Optional, true by default) remove all\n * the rotations that starts with \"0\"\n * @return {Array<String>} an array with all the modes of the chroma\n *\n * @example\n * PcSet.modes([\"C\", \"D\", \"E\"]).map(PcSet.intervals)\n */\nexport function modes(set, normalize) {\n  normalize = normalize !== false;\n  var binary = chroma(set).split(\"\");\n  return compact(\n    binary.map(function(_, i) {\n      var r = rotate(i, binary);\n      return normalize && r[0] === \"0\" ? null : r.join(\"\");\n    })\n  );\n}\n\nvar REGEX = /^[01]{12}$/;\n/**\n * Test if the given string is a pitch class set chroma.\n * @param {String} chroma - the pitch class set chroma\n * @return {Boolean} true if its a valid pcset chroma\n * @example\n * PcSet.isChroma(\"101010101010\") // => true\n * PcSet.isChroma(\"101001\") // => false\n */\nexport function isChroma(set) {\n  return REGEX.test(set);\n}\n\nvar IVLS = \"1P 2m 2M 3m 3M 4P 5d 5P 6m 6M 7m 7M\".split(\" \");\n/**\n * Given a pcset (notes or chroma) return it\"s intervals\n * @param {String|Array} pcset - the pitch class set (notes or chroma)\n * @return {Array} intervals or empty array if not valid pcset\n * @example\n * PcSet.intervals(\"1010100000000\") => [\"1P\", \"2M\", \"3M\"]\n */\nexport function intervals(set) {\n  if (!isChroma(set)) { return []; }\n  return compact(\n    set.split(\"\").map(function(d, i) {\n      return d === \"1\" ? IVLS[i] : null;\n    })\n  );\n}\n\n/**\n * Test if two pitch class sets are identical\n *\n * @param {Array|String} set1 - one of the pitch class sets\n * @param {Array|String} set2 - the other pitch class set\n * @return {Boolean} true if they are equal\n * @example\n * PcSet.isEqual([\"c2\", \"d3\"], [\"c5\", \"d2\"]) // => true\n */\nexport function isEqual(s1, s2) {\n  if (arguments.length === 1) { return function (s) { return isEqual(s1, s); }; }\n  return chroma(s1) === chroma(s2);\n}\n\n/**\n * Create a function that test if a collection of notes is a\n * subset of a given set\n *\n * The function can be partially applied\n *\n * @param {Array|String} set - an array of notes or a chroma set string to test against\n * @param {Array|String} notes - an array of notes or a chroma set\n * @return {boolean} true if notes is a subset of set, false otherwise\n * @example\n * const inCMajor = PcSet.isSubsetOf([\"C\", \"E\", \"G\"])\n * inCMajor([\"e6\", \"c4\"]) // => true\n * inCMajor([\"e6\", \"c4\", \"d3\"]) // => false\n */\nexport function isSubsetOf(set, notes) {\n  if (arguments.length > 1) { return isSubsetOf(set)(notes); }\n  set = pcsetNum(set);\n  return function(notes) {\n    notes = pcsetNum(notes);\n    return notes !== set && (notes & set) === notes;\n  };\n}\n\n/**\n * Create a function that test if a collectio of notes is a\n * superset of a given set (it contains all notes and at least one more)\n *\n * @param {Array|String} set - an array of notes or a chroma set string to test against\n * @param {Array|String} notes - an array of notes or a chroma set\n * @return {boolean} true if notes is a superset of set, false otherwise\n * @example\n * const extendsCMajor = PcSet.isSupersetOf([\"C\", \"E\", \"G\"])\n * extendsCMajor([\"e6\", \"a\", \"c4\", \"g2\"]) // => true\n * extendsCMajor([\"c6\", \"e4\", \"g3\"]) // => false\n */\nexport function isSupersetOf(set, notes) {\n  if (arguments.length > 1) { return isSupersetOf(set)(notes); }\n  set = pcsetNum(set);\n  return function(notes) {\n    notes = pcsetNum(notes);\n    return notes !== set && (notes | set) === notes;\n  };\n}\n\n/**\n * Test if a given pitch class set includes a note\n * @param {Array|String} set - the base set to test against\n * @param {String|Pitch} note - the note to test\n * @return {Boolean} true if the note is included in the pcset\n * @example\n * PcSet.includes([\"C\", \"D\", \"E\"], \"C4\") // => true\n * PcSet.includes([\"C\", \"D\", \"E\"], \"C#4\") // => false\n */\nexport function includes(set, note) {\n  if (arguments.length > 1) { return includes(set)(note); }\n  set = chroma(set);\n  return function(note) {\n    return set[chr(note)] === \"1\";\n  };\n}\n\n/**\n * Filter a list with a pitch class set\n *\n * @param {Array|String} set - the pitch class set notes\n * @param {Array|String} notes - the note list to be filtered\n * @return {Array} the filtered notes\n *\n * @example\n * PcSet.filter([\"C\", \"D\", \"E\"], [\"c2\", \"c#2\", \"d2\", \"c3\", \"c#3\", \"d3\"]) // => [ \"c2\", \"d2\", \"c3\", \"d3\" ])\n * PcSet.filter([\"C2\"], [\"c2\", \"c#2\", \"d2\", \"c3\", \"c#3\", \"d3\"]) // => [ \"c2\", \"c3\" ])\n */\nexport function filter(set, notes) {\n  if (arguments.length === 1) { return function (n) { return filter(set, n); }; }\n  return notes.filter(includes(set));\n}\n","/**\n * [![npm version](https://img.shields.io/npm/v/tonal-dictionary.svg)](https://www.npmjs.com/package/tonal-dictionary)\n *\n * `tonal-dictionary` contains a dictionary of musical scales and chords\n *\n * This is part of [tonal](https://www.npmjs.com/package/tonal) music theory library.\n *\n * @example\n * // es6\n * import * as Dictionary from \"tonal-dictionary\"\n * // es5\n * const Dictionary = require(\"tonal-dictionary\")\n *\n * @example\n * Dictionary.chord(\"Maj7\") // => [\"1P\", \"3M\", \"5P\", \"7M\"]\n *\n * @module Dictionary\n */\nimport sdata from \"./data/scales.json\";\nimport cdata from \"./data/chords.json\";\nimport { chroma } from \"tonal-pcset\";\n\nexport var dictionary = function (raw) {\n  var keys = Object.keys(raw).sort();\n  var data = [];\n  var index = [];\n\n  var add = function (name, ivls, chroma) {\n    data[name] = ivls;\n    index[chroma] = index[chroma] || [];\n    index[chroma].push(name);\n  };\n\n  keys.forEach(function (key) {\n    var ivls = raw[key][0].split(\" \");\n    var alias = raw[key][1];\n    var chr = chroma(ivls);\n\n    add(key, ivls, chr);\n    if (alias) { alias.forEach(function (a) { return add(a, ivls, chr); }); }\n  });\n  var allKeys = Object.keys(data).sort();\n\n  var dict = function (name) { return data[name]; };\n  dict.names = function (p) {\n    if (typeof p === \"string\") { return (index[p] || []).slice(); }\n    else { return (p === true ? allKeys : keys).slice(); }\n  };\n  return dict;\n};\n\nexport var combine = function (a, b) {\n  var dict = function (name) { return a(name) || b(name); };\n  dict.names = function (p) { return a.names(p).concat(b.names(p)); };\n  return dict;\n};\n\n/**\n * A dictionary of scales: a function that given a scale name (without tonic)\n * returns an array of intervals\n *\n * @function\n * @param {String} name\n * @return {Array} intervals\n * @example\n * import { scale } from \"tonal-dictionary\"\n * scale(\"major\") // => [\"1P\", \"2M\", ...]\n * scale.names(); // => [\"major\", ...]\n */\nexport var scale = dictionary(sdata);\n\n/**\n * A dictionary of chords: a function that given a chord type\n * returns an array of intervals\n *\n * @function\n * @param {String} type\n * @return {Array} intervals\n * @example\n * import { chord } from \"tonal-dictionary\"\n * chord(\"Maj7\") // => [\"1P\", \"3M\", ...]\n * chord.names(); // => [\"Maj3\", ...]\n */\nexport var chord = dictionary(cdata);\nexport var pcset = combine(scale, chord);\n","/**\n * [![npm version](https://img.shields.io/npm/v/tonal-scale.svg?style=flat-square)](https://www.npmjs.com/package/tonal-scale)\n *\n * A scale is a collection of pitches in ascending or descending order.\n *\n * This module provides functions to get and manipulate scales.\n *\n * @example\n * // es6\n * import * as Scale from \"tonal-scale\"\n * // es5\n * const Scale = require(\"tonal-scale\");\n *\n * @example\n * Scale.notes(\"Ab bebop\") // => [ \"Ab\", \"Bb\", \"C\", \"Db\", \"Eb\", \"F\", \"Gb\", \"G\" ]\n * Scale.names() => [\"major\", \"minor\", ...]\n * @module Scale\n */\nimport { name as noteName, pc } from \"tonal-note\";\nimport {\n  modes as pcsetModes,\n  chroma,\n  isSubsetOf,\n  isSupersetOf\n} from \"tonal-pcset\";\nimport { transpose } from \"tonal-distance\";\nimport { scale, chord } from \"tonal-dictionary\";\nimport { compact, unique, rotate } from \"tonal-array\";\n\nvar NO_SCALE = Object.freeze({\n  name: null,\n  intervals: [],\n  names: [],\n  chroma: null,\n  setnum: null\n});\n\nvar properties = function (name) {\n  var intervals = scale(name);\n  if (!intervals) { return NO_SCALE; }\n  var s = { intervals: intervals, name: name };\n  s.chroma = chroma(intervals);\n  s.setnum = parseInt(s.chroma, 2);\n  s.names = scale.names(s.chroma);\n  return Object.freeze(s);\n};\n\nvar memoize = function (fn, cache) { return function (str) { return cache[str] || (cache[str] = fn(str)); }; };\n\n/**\n * Get scale properties. It returns an object with:\n * - name: the scale name\n * - names: a list with all possible names (includes the current)\n * - intervals: an array with the scale intervals\n * - chroma:  scale croma (see pcset)\n * - setnum: scale chroma number\n *\n * @function\n * @param {string} name - the scale name (without tonic)\n * @return {Object}\n */\nexport var props = memoize(properties, {});\n\n/**\n * Return the available scale names\n *\n * @function\n * @param {boolean} [aliases=false] - true to include aliases\n * @return {Array} the scale names\n *\n * @example\n * Scale.names() // => [\"maj7\", ...]\n */\nexport var names = scale.names;\n\n/**\n * Given a scale name, return its intervals. The name can be the type and\n * optionally the tonic (which is ignored)\n *\n * It retruns an empty array when no scale found\n *\n * @function\n * @param {string} name - the scale name (tonic and type, tonic is optional)\n * @return {Array<string>} the scale intervals if is a known scale or an empty\n * array if no scale found\n * @example\n * Scale.intervals(\"major\") // => [ \"1P\", \"2M\", \"3M\", \"4P\", \"5P\", \"6M\", \"7M\" ]\n */\nexport var intervals = function (name) {\n  var p = tokenize(name);\n  return props(p[1]).intervals;\n};\n\n/**\n * Get the notes (pitch classes) of a scale.\n *\n * Note that it always returns an array, and the values are only pitch classes.\n *\n * @function\n * @param {string} tonic\n * @param {string} nameOrTonic - the scale name or tonic (if 2nd param)\n * @param {string} [name] - the scale name without tonic\n * @return {Array} a pitch classes array\n *\n * @example\n * Scale.notes(\"C\", \"major\") // => [ \"C\", \"D\", \"E\", \"F\", \"G\", \"A\", \"B\" ]\n * Scale.notes(\"C major\") // => [ \"C\", \"D\", \"E\", \"F\", \"G\", \"A\", \"B\" ]\n * Scale.notes(\"C4\", \"major\") // => [ \"C\", \"D\", \"E\", \"F\", \"G\", \"A\", \"B\" ]\n * Scale.notes(\"A4\", \"no-scale\") // => []\n * Scale.notes(\"blah\", \"major\") // => []\n */\nexport function notes(nameOrTonic, name) {\n  var p = tokenize(nameOrTonic);\n  name = name || p[1];\n  return intervals(name).map(transpose(p[0]));\n}\n\n/**\n * Check if the given name is a known scale from the scales dictionary\n *\n * @function\n * @param {string} name - the scale name\n * @return {Boolean}\n */\nexport function exists(name) {\n  var p = tokenize(name);\n  return scale(p[1]) !== undefined;\n}\n\n/**\n * Given a string with a scale name and (optionally) a tonic, split\n * that components.\n *\n * It retuns an array with the form [ name, tonic ] where tonic can be a\n * note name or null and name can be any arbitrary string\n * (this function doesn\"t check if that scale name exists)\n *\n * @function\n * @param {string} name - the scale name\n * @return {Array} an array [tonic, name]\n * @example\n * Scale.tokenize(\"C mixolydean\") // => [\"C\", \"mixolydean\"]\n * Scale.tokenize(\"anything is valid\") // => [\"\", \"anything is valid\"]\n * Scale.tokenize() // => [\"\", \"\"]\n */\nexport function tokenize(str) {\n  if (typeof str !== \"string\") { return [\"\", \"\"]; }\n  var i = str.indexOf(\" \");\n  var tonic = noteName(str.substring(0, i)) || noteName(str) || \"\";\n  var name = tonic !== \"\" ? str.substring(tonic.length + 1) : str;\n  return [tonic, name.length ? name : \"\"];\n}\n\n/**\n * Find mode names of a scale\n *\n * @function\n * @param {string} name - scale name\n * @example\n * Scale.modeNames(\"C pentatonic\") // => [\n *   [\"C\", \"major pentatonic\"],\n *   [\"D\", \"egyptian\"],\n *   [\"E\", \"malkos raga\"],\n *   [\"G\", \"ritusen\"],\n *   [\"A\", \"minor pentatonic\"]\n * ]\n */\nexport var modeNames = function (name) {\n  var ivls = intervals(name);\n  var tonics = notes(name);\n\n  return pcsetModes(ivls)\n    .map(function (chroma, i) {\n      var name = scale.names(chroma)[0];\n      if (name) { return [tonics[i] || ivls[i], name]; }\n    })\n    .filter(function (x) { return x; });\n};\n\n/**\n * Get all chords that fits a given scale\n *\n * @function\n * @param {string} name - the scale name\n * @return {Array<string>} - the chord names\n *\n * @example\n * Scale.chords(\"pentatonic\") // => [\"5\", \"64\", \"M\", \"M6\", \"Madd9\", \"Msus2\"]\n */\nexport var chords = function (name) {\n  var inScale = isSubsetOf(intervals(name));\n  return chord.names().filter(function (name) { return inScale(chord(name)); });\n};\n\n/**\n * Given an array of notes, return the scale: a pitch class set starting from\n * the first note of the array\n *\n * @function\n * @param {Array} notes\n * @return {Array}\n * @example\n * Scale.toScale(['C4', 'c3', 'C5', 'C4', 'c4']) // => [\"C\"]\n * Scale.toScale(['D4', 'c#5', 'A5', 'F#6']) // => [\"D\", \"F#\", \"A\", \"C#\"]\n */\nexport var toScale = function (notes) {\n  var pcset = compact(notes.map(pc));\n  if (!pcset.length) { return pcset; }\n  var tonic = pcset[0];\n  var scale = unique(pcset);\n  return rotate(scale.indexOf(tonic), scale);\n};\n\n/**\n * Get all scales names that are a superset of the given one\n * (has the same notes and at least one more)\n *\n * @function\n * @param {string} name\n * @return {Array} a list of scale names\n * @example\n * Scale.supersets(\"major\") // => [\"bebop\", \"bebop dominant\", \"bebop major\", \"chromatic\", \"ichikosucho\"]\n */\nexport var supersets = function (name) {\n  if (!intervals(name).length) { return []; }\n  var isSuperset = isSupersetOf(intervals(name));\n  return scale.names().filter(function (name) { return isSuperset(scale(name)); });\n};\n\n/**\n * Find all scales names that are a subset of the given one\n * (has less notes but all from the given scale)\n *\n * @function\n * @param {string} name\n * @return {Array} a list of scale names\n *\n * @example\n * Scale.subsets(\"major\") // => [\"ionian pentatonic\", \"major pentatonic\", \"ritusen\"]\n */\nexport var subsets = function (name) {\n  var isSubset = isSubsetOf(intervals(name));\n  return scale.names().filter(function (name) { return isSubset(scale(name)); });\n};\n","/**\n * [![npm version](https://img.shields.io/npm/v/tonal-chord.svg)](https://www.npmjs.com/package/tonal-chord)\n * [![tonal](https://img.shields.io/badge/tonal-chord-yellow.svg)](https://www.npmjs.com/browse/keyword/tonal)\n *\n * `tonal-chord` is a collection of functions to manipulate musical chords\n *\n * This is part of [tonal](https://www.npmjs.com/package/tonal) music theory library.\n *\n * @example\n * // es6\n * import * as Chord from \"tonal-chord\"\n * // es5\n * const Chord = require(\"tonal-chord\")\n *\n * @example\n * Chord.notes(\"CMaj7\") // => [\"C\", \"E\", \"G\", \"B\"]\n *\n * @module Chord\n */\nimport { tokenize as split } from \"tonal-note\";\nimport { transpose } from \"tonal-distance\";\nimport { chord } from \"tonal-dictionary\";\nimport { chroma, isSubsetOf, isSupersetOf } from \"tonal-pcset\";\n\n/**\n * Return the available chord names\n *\n * @function\n * @param {boolean} aliases - true to include aliases\n * @return {Array} the chord names\n *\n * @example\n * Chord.names() // => [\"maj7\", ...]\n */\nexport var names = chord.names;\n\nvar NO_CHORD = Object.freeze({\n  name: null,\n  names: [],\n  intervals: [],\n  chroma: null,\n  setnum: null\n});\n\nvar properties = function (name) {\n  var intervals = chord(name);\n  if (!intervals) { return NO_CHORD; }\n  var s = { intervals: intervals, name: name };\n  s.chroma = chroma(intervals);\n  s.setnum = parseInt(s.chroma, 2);\n  s.names = chord.names(s.chroma);\n  return s;\n};\n\nvar memo = function (fn, cache) {\n  if ( cache === void 0 ) cache = {};\n\n  return function (str) { return cache[str] || (cache[str] = fn(str)); };\n};\n\n/**\n * Get chord properties. It returns an object with:\n *\n * - name: the chord name\n * - names: a list with all possible names (includes the current)\n * - intervals: an array with the chord intervals\n * - chroma:  chord croma (see pcset)\n * - setnum: chord chroma number\n *\n * @function\n * @param {String} name - the chord name (without tonic)\n * @return {Object} an object with the properties or a object with all properties\n * set to null if not valid chord name\n */\nexport var props = memo(properties);\n\n/**\n * Get chord intervals. It always returns an array\n *\n * @function\n * @param {String} name - the chord name (optionally a tonic and type)\n * @return {Array<String>} a list of intervals or null if the type is not known\n */\nexport var intervals = function (name) { return props(tokenize(name)[1]).intervals; };\n\n/**\n * Get the chord notes of a chord. This function accepts either a chord name\n * (for example: \"Cmaj7\") or a list of notes.\n *\n * It always returns an array, even if the chord is not found.\n *\n * @function\n * @param {String} nameOrTonic - name of the chord or the tonic (if the second parameter is present)\n * @param {String} [name] - (Optional) name if the first parameter is the tonic\n * @return {Array} an array of notes or an empty array\n *\n * @example\n * Chord.notes(\"Cmaj7\") // => [\"C\", \"E\", \"G\", \"B\"]\n * Chord.notes(\"C\", \"maj7\") // => [\"C\", \"E\", \"G\", \"B\"]\n */\nexport function notes(nameOrTonic, name) {\n  if (name) { return props(name).intervals.map(transpose(nameOrTonic)); }\n  var ref = tokenize(nameOrTonic);\n  var tonic = ref[0];\n  var type = ref[1];\n  return props(type).intervals.map(transpose(tonic));\n}\n\n/**\n * Check if a given name correspond to a chord in the dictionary\n *\n * @function\n * @param {String} name\n * @return {Boolean}\n * @example\n * Chord.exists(\"CMaj7\") // => true\n * Chord.exists(\"Maj7\") // => true\n * Chord.exists(\"Ablah\") // => false\n */\nexport var exists = function (name) { return chord(tokenize(name)[1]) !== undefined; };\n\n/**\n * Get all chords names that are a superset of the given one\n * (has the same notes and at least one more)\n *\n * @function\n * @param {String} name\n * @return {Array} a list of chord names\n */\nexport var supersets = function (name) {\n  if (!intervals(name).length) { return []; }\n  var isSuperset = isSupersetOf(intervals(name));\n  return chord.names().filter(function (name) { return isSuperset(chord(name)); });\n};\n\n/**\n * Find all chords names that are a subset of the given one\n * (has less notes but all from the given chord)\n *\n * @function\n * @param {String} name\n * @return {Array} a list of chord names\n */\nexport var subsets = function (name) {\n  var isSubset = isSubsetOf(intervals(name));\n  return chord.names().filter(function (name) { return isSubset(chord(name)); });\n};\n\n// 6, 64, 7, 9, 11 and 13 are consider part of the chord\n// (see https://github.com/danigb/tonal/issues/55)\nvar NUM_TYPES = /^(6|64|7|9|11|13)$/;\n/**\n * Tokenize a chord name. It returns an array with the tonic and chord type\n * If not tonic is found, all the name is considered the chord name.\n *\n * This function does NOT check if the chord type exists or not. It only tries\n * to split the tonic and chord type.\n *\n * @function\n * @param {String} name - the chord name\n * @return {Array} an array with [tonic, type]\n * @example\n * Chord.tokenize(\"Cmaj7\") // => [ \"C\", \"maj7\" ]\n * Chord.tokenize(\"C7\") // => [ \"C\", \"7\" ]\n * Chord.tokenize(\"mMaj7\") // => [ \"\", \"mMaj7\" ]\n * Chord.tokenize(\"Cnonsense\") // => [ \"C\", \"nonsense\" ]\n */\nexport function tokenize(name) {\n  var p = split(name);\n  if (p[0] === \"\") { return [\"\", name]; }\n  // aug is augmented (see https://github.com/danigb/tonal/issues/55)\n  if (p[0] === \"A\" && p[3] === \"ug\") { return [\"\", \"aug\"]; }\n\n  if (NUM_TYPES.test(p[2])) {\n    return [p[0] + p[1], p[2] + p[3]];\n  } else {\n    return [p[0] + p[1] + p[2], p[3]];\n  }\n}\n","/**\n * [![npm version](https://img.shields.io/npm/v/tonal-key.svg?style=flat-square)](https://www.npmjs.com/package/tonal-key)\n *\n * The `Tonal` module is a facade to the rest of the modules. They are namespaced,\n * so for example to use `pc` function from `tonal-note` you have to write:\n * `Tonal.Note.pc`\n *\n * It exports the following modules:\n * - Note\n * - Interval\n * - Distance\n * - Scale\n * - Chord\n * - PcSet\n *\n * Additionally this facade exports some functions without namespace (see \"Methods\" below)\n *\n * @example\n * // es6 modules\n * import * as Tonal from \"tonal\"\n * Tonal.Note.name(\"cx\") // => \"C##\"\n *\n * @example\n * import { Note } from \"tonal\"\n * Note.name(\"bb\") // => \"Bb\"\n *\n * @example\n * // es5 node modules\n * var Tonal = require(\"tonal\");\n * Tonal.Distance.transpose(Tonal.Note.pc(\"C#2\"), \"M3\") // => \"E#\"\n * Tonal.Chord.notes(\"Dmaj7\") // => [\"D\", \"F#\", \"A\", \"C#\"]\n *\n * @module Tonal\n */\nimport * as Array from \"tonal-array\";\nimport * as Note from \"tonal-note\";\nimport * as Interval from \"tonal-interval\";\nimport * as Distance from \"tonal-distance\";\nimport * as Dictionary from \"tonal-dictionary\";\nimport * as Scale from \"tonal-scale\";\nimport * as Chord from \"tonal-chord\";\nimport * as PcSet from \"tonal-pcset\";\n\nexport { Array, Note, Interval, Distance, Scale, Chord, PcSet, Dictionary };\n\n/**\n * Transpose a note by an interval\n * @function\n * @param {string} note\n * @param {string} interval\n * @return {string} the transported note\n * @see Distance.transpose\n */\nexport const transpose = Distance.transpose;\n\n/**\n * Get the interval from two notes\n * @function\n * @param {string} from\n * @param {string} to\n * @return {string} the interval in reverse shorthand notation\n * @see Distance.interval\n */\nexport const interval = Distance.interval;\n\n/**\n * Get note properties\n * @function\n * @param {string} note - the note name\n * @return {Object}\n * @see Note.props\n * @example\n * Tonal.note(\"A4\").chroma // => 9\n */\nexport const note = Note.props;\n\n/**\n * Get midi note number\n * @function\n * @param {string} note\n * @return {Number}\n * @see Note.midi\n * @example\n * Tonal.midi(\"A4\") // => 49\n */\nexport const midi = Note.midi;\n\n/**\n * Get note frequency using equal tempered tuning at 440\n * @function\n * @param {string} note\n * @return {Number}\n * @see Note.freq\n * @example\n * Tonal.freq(\"A4\") // => 440\n */\nexport const freq = Note.freq;\n\n/**\n * Get intervals from a chord type\n * @function\n * @param {string} type - the chord type (no tonic)\n * @return {Array} an array of intervals or undefined if the chord type is not known\n * @see Dictionary.chord\n * @example\n * Tonal.chord(\"m7b5\") // => [\"1P\", \"3m\", \"5d\", \"7m\"]\n */\nexport const chord = Dictionary.chord;\n\n/**\n * Get intervals from scale name\n * @function\n * @param {string} name - the scale name (without tonic)\n * @return {Array} an array of intervals or undefiend if the scale is not kown\n * @example\n * Tonal.scale(\"major\") // => [\"1P\", \"2M\", \"3M\"...]\n */\nexport const scale = Dictionary.scale;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Harmony_1 = require(\"../harmony/Harmony\");\nvar Instrument = /** @class */ (function () {\n    function Instrument(_a) {\n        var _b = _a === void 0 ? {} : _a, context = _b.context, gain = _b.gain, mix = _b.mix, onTrigger = _b.onTrigger, midiOffset = _b.midiOffset;\n        this.midiOffset = 0;\n        this.gain = 1;\n        this.activeEvents = [];\n        this.onTrigger = onTrigger;\n        this.midiOffset = midiOffset || this.midiOffset;\n        this.gain = gain || this.gain;\n        this.init({ context: context, mix: mix });\n    }\n    Instrument.prototype.init = function (_a) {\n        var context = _a.context, mix = _a.mix;\n        if (!context && (!mix || !mix.context)) {\n            console.warn(\"you should pass a context or a mix (gainNode) to a new Instrument. \\n            You can also Call init with {context,mix} to setup the Instrument later\");\n            return;\n        }\n        this.context = context || mix.context;\n        this.mix = mix || this.context.destination;\n    };\n    Instrument.prototype.playNotes = function (notes, settings) {\n        var _this = this;\n        if (settings === void 0) { settings = {}; }\n        var deadline = (settings.deadline || this.context.currentTime);\n        settings = Object.assign({\n            duration: 2000,\n            gain: 1,\n        }, settings, { deadline: deadline });\n        if (settings.interval) {\n            // call recursively with single notes at interval\n            return notes.map(function (note, index) {\n                _this.playNotes([note], Object.assign({}, settings, {\n                    interval: 0,\n                    deadline: deadline + index * settings.interval\n                }));\n            });\n        }\n        var midi = notes.map(function (note) { return Harmony_1.Harmony.getMidi(note, _this.midiOffset); });\n        var noteOff = settings.deadline + settings.duration / 1000;\n        var notesOn = notes.map(function (note, index) { return ({\n            note: note,\n            midi: midi[index],\n            gain: settings.gain,\n            noteOff: noteOff,\n            deadline: settings.deadline\n        }); });\n        if (settings.pulse && this.onTrigger) {\n            settings.pulse.clock.callbackAtTime(function (deadline) {\n                _this.activeEvents = _this.activeEvents.concat(notesOn);\n                _this.onTrigger({ on: notesOn, off: [], active: _this.activeEvents });\n            }, settings.deadline);\n        }\n        if (settings.duration && settings.pulse) {\n            settings.pulse.clock.callbackAtTime(function (deadline) {\n                // find out which notes need to be deactivated\n                var notesOff = notes\n                    .filter(function (note) { return !_this.activeEvents\n                    .find(function (event) {\n                    var keep = note === event.note && event.noteOff > deadline;\n                    if (keep) {\n                        console.log('keep', note);\n                    }\n                    return keep;\n                }); }).map(function (note) { return _this.activeEvents.find(function (e) { return e.note === note; }); });\n                _this.activeEvents = _this.activeEvents\n                    .filter(function (e) { return !notesOff.includes(e); });\n                if (_this.onTrigger) {\n                    _this.onTrigger({ on: [], off: notesOff, active: _this.activeEvents });\n                }\n            }, noteOff);\n        }\n        return this.playKeys(midi, settings);\n    };\n    Instrument.prototype.playKeys = function (keys, settings) {\n        // TODO: fire callbacks after keys.map((key,i)=>i*settings.interval)?\n    };\n    return Instrument;\n}());\nexports.Instrument = Instrument;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Instrument_1 = require(\"./Instrument\");\nvar tonal_1 = require(\"tonal\");\nvar util_1 = require(\"../util/util\");\nvar Synthesizer = /** @class */ (function (_super) {\n    __extends(Synthesizer, _super);\n    function Synthesizer(props) {\n        var _this = _super.call(this, props) || this;\n        _this.duration = 200;\n        _this.type = 'sine';\n        _this.gain = 0.9;\n        _this.attack = .05;\n        _this.decay = .05;\n        _this.sustain = .4;\n        _this.release = .1;\n        _this.duration = props.duration || _this.duration;\n        _this.type = props.type || _this.type;\n        _this.gain = props.gain || _this.gain;\n        return _this;\n    }\n    Synthesizer.prototype.getVoice = function (type, gain, key) {\n        if (type === void 0) { type = 'sine'; }\n        if (gain === void 0) { gain = 0; }\n        var frequency = tonal_1.Note.freq(key);\n        var oscNode = this.context.createOscillator();\n        oscNode.type = type;\n        var gainNode = this.context.createGain();\n        oscNode.connect(gainNode);\n        gainNode.gain.value = typeof gain === 'number' ? gain : 0.8;\n        gainNode.connect(this.mix);\n        oscNode.frequency.value = frequency;\n        return { oscNode: oscNode, gainNode: gainNode, key: key, frequency: frequency };\n    };\n    Synthesizer.prototype.lowestGain = function (a, b) {\n        return a.gain.gain.value < b.gain.gain.value ? -1 : 0;\n    };\n    Synthesizer.prototype.startKeys = function (keys, settings) {\n        if (settings === void 0) { settings = {}; }\n    };\n    Synthesizer.prototype.playKeys = function (keys, settings) {\n        var _this = this;\n        if (settings === void 0) { settings = {}; }\n        _super.prototype.playKeys.call(this, keys, settings); // fires callback   \n        //const time = this.context.currentTime + settings.deadline / 1000;\n        var time = settings.deadline || this.context.currentTime;\n        var interval = settings.interval || 0;\n        return keys.map(function (key, i) {\n            var delay = i * interval;\n            var _a = [\n                settings.endless,\n                settings.attack || _this.attack,\n                settings.decay || _this.decay,\n                settings.sustain || _this.sustain,\n                settings.release || _this.release,\n                (settings.duration || _this.duration) / 1000,\n                (settings.gain || 1) * _this.gain\n            ], endless = _a[0], attack = _a[1], decay = _a[2], sustain = _a[3], release = _a[4], duration = _a[5], gain = _a[6];\n            var voice = _this.getVoice(_this.type, 0, key);\n            util_1.adsr({ attack: attack, decay: decay, sustain: sustain, release: release, gain: gain, duration: duration, endless: endless }, time + delay, voice.gainNode.gain);\n            voice.oscNode.start(settings.deadline + delay);\n            return voice;\n        });\n    };\n    Synthesizer.prototype.stopVoice = function (voice, settings) {\n        if (settings === void 0) { settings = {}; }\n        if (!voice) {\n            return;\n        }\n        var time = settings.deadline || this.context.currentTime;\n        voice.gainNode.gain.setTargetAtTime(0, time, settings.release || this.release);\n        //voice.oscNode.stop()\n    };\n    Synthesizer.prototype.stopVoices = function (voices, settings) {\n        var _this = this;\n        voices.forEach(function (voice) {\n            _this.stopVoice(voice, settings);\n        });\n    };\n    return Synthesizer;\n}(Instrument_1.Instrument));\nexports.Synthesizer = Synthesizer;\n","\"use strict\";\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Chord = __importStar(require(\"tonal-chord\"));\nvar Scale = __importStar(require(\"tonal-scale\"));\nexports.chords = [\n    {\n        symbol: 'm',\n        long: 'minor',\n        short: '-',\n        groups: ['Basic', 'Triads']\n    },\n    {\n        symbol: 'M',\n        long: 'major',\n        short: '△',\n        groups: ['Basic', 'Triads']\n    },\n    {\n        symbol: 'o',\n        groups: ['Basic', 'Symmetric', 'Triads'],\n        long: 'Vermindert'\n        /* short: 'o' */\n    },\n    {\n        symbol: 'M#5',\n        groups: ['Advanced', 'Symmetric', 'Triads'],\n        short: '△#5'\n    },\n    {\n        symbol: 'Msus4',\n        groups: ['Advanced', 'Symmetric'],\n        short: 'sus4'\n    },\n    {\n        symbol: 'Msus2',\n        groups: ['Advanced', 'Symmetric'],\n        short: 'sus2'\n    },\n    // 5 4 64 m#5 Mb5  7no5  \n    {\n        symbol: '7',\n        groups: ['Basic', 'Diatonic', 'Modes'],\n        long: 'Dominantsept'\n    },\n    {\n        symbol: '7#11',\n        groups: ['Advanced', 'Diatonic', 'Modes'],\n        long: 'Dominant #11'\n    },\n    {\n        symbol: 'M6',\n        groups: ['Advanced'],\n        long: 'major 6',\n        short: '6'\n    },\n    {\n        symbol: 'o7',\n        groups: ['Advanced', 'Symmetric', 'Diatonic'],\n        long: 'Vermindert 7',\n    },\n    {\n        symbol: 'm7',\n        groups: ['Basic', 'Diatonic', 'Modes'],\n        long: 'minor 7',\n        short: '-7'\n    },\n    {\n        symbol: 'oM7',\n        groups: ['Expert'],\n        long: 'diminished major 7',\n        short: 'o△7'\n    },\n    {\n        symbol: 'm7b5',\n        groups: ['Basic', 'Diatonic', 'Modes'],\n        long: 'Halbvermindert',\n        short: '-7b5'\n    },\n    {\n        symbol: '7#5',\n        groups: ['Advanced', 'Symmetric'],\n        long: 'Dominantsept #5'\n    },\n    {\n        symbol: 'Maj7',\n        groups: ['Basic', 'Diatonic', 'Modes'],\n        long: 'Major 7',\n        short: '△7'\n    },\n    {\n        symbol: 'mMaj7',\n        short: '-△7',\n        groups: ['Advanced', 'Diatonic']\n    },\n    {\n        symbol: 'M7#5',\n        groups: ['Advanced', 'Diatonic'],\n        short: '△7#5'\n    },\n    {\n        symbol: '7sus4',\n        groups: ['Advanced'],\n    },\n    {\n        symbol: '9',\n        groups: ['Advanced'],\n    },\n    {\n        symbol: 'M9',\n        groups: ['Advanced'],\n        short: '△9'\n    },\n    {\n        symbol: 'M69',\n        groups: ['Advanced'],\n        short: '69'\n    }\n    /*\n7b13 M7b5 m7#5 9no5  M7b6 7b5 Madd9 mb6b9 mb6M7 madd4 sus24 madd9 Maddb9 +add#9 M7sus4 7#5sus4 M#5add9 M7#5sus4\n11 m9 m6 9#5 7b9 7#9 M69 9b5 m69 mM9 7b6 m9b5 m9#5 7#11 M7b9 9b13 o7M7 M9b5 11b9 M9#5 7add6 M6#11 M7#11 7#5#9 13no5 9sus4 7#5b9 M9sus4 7sus4b9 m7add11 mMaj7b6 M9#5sus4\n13 m11 M13 9#11 13#9 13b5 13b9 m11b5 7b9#9 mM9b6 M9#11 9#5#11 7#9b13 7b9b13 13sus4 m11A 5 7#9#11 7b9#11 M69#11 7#11b13 M7#9#11 M7add13 7#5b9#11 7sus4b9b13\nm13 13#11 M13#11 13b9#11 9#11b13 13#9#11 7b9b13#11 7#9#11b13\n    */\n];\nexports.scales = [\n    {\n        symbol: 'major pentatonic',\n        groups: ['Basic', 'Pentatonic'],\n    },\n    {\n        symbol: 'minor pentatonic',\n        groups: ['Basic', 'Pentatonic'],\n    },\n    {\n        symbol: 'minor blues',\n        groups: ['Basic'],\n    },\n    // gregorian modes\n    {\n        symbol: 'major',\n        groups: ['Basic', 'Diatonic', 'Modes'],\n    },\n    {\n        symbol: 'dorian',\n        groups: ['Basic', 'Diatonic', 'Modes'],\n    },\n    {\n        symbol: 'phrygian',\n        groups: ['Basic', 'Diatonic', 'Modes'],\n    },\n    {\n        symbol: 'lydian',\n        groups: ['Basic', 'Diatonic', 'Modes'],\n    },\n    {\n        symbol: 'mixolydian',\n        groups: ['Basic', 'Diatonic', 'Modes'],\n    },\n    {\n        symbol: 'aeolian',\n        groups: ['Basic', 'Diatonic', 'Modes'],\n    },\n    {\n        symbol: 'locrian',\n        groups: ['Basic', 'Diatonic', 'Modes'],\n    },\n    {\n        symbol: 'whole tone',\n        groups: ['Advanced', 'Symmetric']\n    },\n    {\n        symbol: 'diminished',\n        groups: ['Advanced', 'Symmetric']\n    },\n    //HTGT ?\n    {\n        symbol: 'augmented',\n        groups: ['Advanced', 'Symmetric']\n    },\n    {\n        symbol: 'chromatic',\n        groups: ['Expert', 'Symmetric']\n    },\n    // harmonic minor modes\n    {\n        symbol: 'harmonic minor',\n        groups: ['Advanced', 'Diatonic']\n    },\n    // HM 2 locrian #6 !\n    {\n        symbol: 'ionian augmented',\n        groups: ['Expert', 'Diatonic']\n    },\n    {\n        symbol: 'dorian #4',\n        groups: ['Expert', 'Diatonic']\n    },\n    {\n        symbol: 'spanish',\n        groups: ['Advanced', 'Diatonic']\n    },\n    // HM 6 lydian #9\n    // HM 7 ???\n    // melodic minor modes\n    {\n        symbol: 'melodic minor',\n        groups: ['Advanced', 'Diatonic']\n    },\n    {\n        symbol: 'melodic minor second mode',\n        groups: ['Expert', 'Diatonic']\n    },\n    {\n        symbol: 'lydian augmented',\n        groups: ['Expert', 'Diatonic']\n    },\n    {\n        symbol: 'lydian dominant',\n        groups: ['Advanced', 'Diatonic'],\n        long: 'mixolydian #11'\n    },\n    {\n        symbol: 'melodic minor fifth mode',\n        groups: ['Expert', 'Diatonic']\n    },\n    {\n        symbol: 'locrian #2',\n        groups: ['Expert', 'Diatonic']\n    },\n    {\n        symbol: 'altered',\n        groups: ['Advanced', 'Diatonic']\n    },\n    //non european\n    {\n        symbol: 'kumoijoshi',\n        groups: ['Exotic', 'Pentatonic']\n    },\n    {\n        symbol: 'iwato',\n        groups: ['Exotic', 'Pentatonic']\n    },\n    {\n        symbol: 'pelog',\n        groups: ['Exotic', 'Pentatonic']\n    },\n    // hyojo?\n    {\n        symbol: 'egyptian',\n        groups: ['Exotic', 'Pentatonic']\n    },\n    {\n        symbol: 'in-sen',\n        groups: ['Exotic', 'Pentatonic']\n    },\n    {\n        symbol: 'scriabin',\n        groups: ['Exotic', 'Pentatonic']\n    },\n    {\n        symbol: 'ritusen',\n        groups: ['Exotic', 'Pentatonic']\n    },\n    {\n        symbol: 'hirajoshi',\n        groups: ['Exotic', 'Pentatonic']\n    },\n    {\n        symbol: 'malkos raga',\n        groups: ['Exotic', 'Pentatonic']\n    },\n    {\n        symbol: 'vietnamese 1',\n        groups: ['Exotic', 'Pentatonic']\n    },\n    /* {\n        symbol: 'vietnamese 2',\n        groups: ['Exotic', 'Pentatonic'] // = minor pentatonic\n    }, */\n    {\n        symbol: 'lydian pentatonic',\n        groups: ['Pentatonic']\n    },\n    {\n        symbol: 'mixolydian pentatonic',\n        groups: ['Pentatonic']\n    },\n    {\n        symbol: 'ionian pentatonic',\n        groups: ['Pentatonic']\n    },\n    {\n        symbol: 'locrian pentatonic',\n        groups: ['Pentatonic']\n    },\n    {\n        symbol: 'flat six pentatonic',\n        groups: ['Pentatonic']\n    },\n    {\n        symbol: 'minor six pentatonic',\n        groups: ['Pentatonic']\n    },\n    {\n        symbol: 'minor #7M pentatonic',\n        groups: ['Pentatonic']\n    },\n    {\n        symbol: 'lydian #5P pentatonic',\n        groups: ['Pentatonic']\n    },\n    {\n        symbol: 'whole tone pentatonic',\n        groups: ['Pentatonic', 'Symmetric']\n    },\n    {\n        symbol: 'flat three pentatonic',\n        groups: ['Pentatonic']\n    },\n    {\n        symbol: 'super locrian pentatonic',\n        groups: ['Pentatonic']\n    },\n    {\n        symbol: 'major flat two pentatonic',\n        groups: ['Pentatonic']\n    },\n    {\n        symbol: 'lydian dominant pentatonic',\n        groups: ['Pentatonic']\n    },\n    {\n        symbol: 'neopolitan major pentatonic',\n        groups: ['Pentatonic']\n    }\n    /*\n    mystery #1 piongio    prometheus major blues minor hexatonic six tone symmetric prometheus neopolitan\n     persian  spanish  oriental flamenco balinese   todi raga enigmatic lydian #9 neopolitan locrian #2  lydian minor  locrian major  romanian minor harmonic major hungarian major hungarian minor lydian dominant   neopolitan minor neopolitan major lydian diminished leading whole tone augmented heptatonic double harmonic major double harmonic lydian melodic minor fifth mode melodic minor second mode\n    bebop kafi raga  purvi raga ichikosucho bebop minor minor bebop bebop major bebop locrian bebop dominant spanish heptatonic minor six diminished\n    composite blues\n    */\n];\nexports.symbols = { chords: exports.chords, scales: exports.scales };\nexports.levels = ['Basic', 'Advanced', 'Expert'];\nfunction groupFilter(group) {\n    return function (item) {\n        var level = Math.max(item.groups.filter(function (group) { return exports.levels.indexOf(group) !== -1; })\n            .map(function (group) { return exports.levels.indexOf(group) + 1; }));\n        var groups = level > 0 ? Array.from(new Set(exports.levels.slice(level).concat(item.groups))) : item.groups;\n        return groups.indexOf(group) !== -1;\n    };\n}\nexports.groupFilter = groupFilter;\nfunction scaleNames(group) {\n    if (group === void 0) { group = 'Basic'; }\n    if (!group || group === 'All') {\n        return Scale.names();\n    }\n    return exports.scales.filter(groupFilter(group))\n        .map(function (scale) { return scale.symbol; });\n}\nexports.scaleNames = scaleNames;\nfunction chordNames(group) {\n    if (group === void 0) { group = 'Basic'; }\n    if (!group || group === 'All') {\n        return Chord.names();\n    }\n    return exports.chords.filter(groupFilter(group))\n        .map(function (scale) { return scale.symbol; });\n}\nexports.chordNames = chordNames;\nfunction groupNames() {\n    return Array.from(new Set(exports.levels.concat(exports.scales.concat(exports.chords)\n        .map(function (item) { return item.groups; })\n        .reduce(function (groups, current) { return groups.concat(current); })))).concat(['All']);\n}\nexports.groupNames = groupNames;\nfunction symbolName(type, symbol, long) {\n    var pool = exports.symbols[type + 's'];\n    var match = pool.find(function (item) { return item.symbol === symbol; });\n    if (!match) {\n        return symbol;\n    }\n    /* return symbol; */\n    return (long ? match.long : match.short) || symbol;\n}\nexports.symbolName = symbolName;\nfunction scaleName(symbol, long) {\n    if (long === void 0) { long = false; }\n    return symbolName('scale', symbol, long);\n}\nexports.scaleName = scaleName;\nfunction chordName(symbol, long) {\n    if (long === void 0) { long = false; }\n    return symbolName('chord', symbol, long);\n}\nexports.chordName = chordName;\nfunction randomItem(array) {\n    return array[Math.floor(Math.random() * array.length)];\n}\nexports.randomItem = randomItem;\nfunction randomScale(group) {\n    return randomItem(scaleNames(group));\n}\nexports.randomScale = randomScale;\nfunction randomChord(group) {\n    return randomItem(chordNames(group));\n}\nexports.randomChord = randomChord;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tonal_1 = require(\"tonal\");\nvar Synthesizer_1 = require(\"../instruments/Synthesizer\");\nvar symbols_1 = require(\"../symbols\");\nvar Harmony_1 = require(\"../harmony/Harmony\");\nvar steps = {\n    '1P': ['1', '8'],\n    '2m': ['b9', 'b2'],\n    '2M': ['9', '2',],\n    '2A': ['#9', '#2'],\n    '3m': ['b3'],\n    '3M': ['3'],\n    '4P': ['11', '4'],\n    '4A': ['#11', '#4'],\n    '5d': ['b5'],\n    '5P': ['5'],\n    '5A': ['#5'],\n    '6m': ['b13', 'b6'],\n    '6M': ['13', '6'],\n    '7m': ['b7'],\n    '7M': ['7', '^7', 'maj7']\n};\n/*\nLower Interval Limits (just guidelines):\n2m: E3-F3\n2M: Eb3-F3\n3m: C3-Eb3\n3M: Bb2-D3\n4P: Bb2-Eb3\n5D: B2-F3\n5P: Bb1-F2\n6m: F2-Db3\n6M: F2-D3\n7m: F2-Eb3\n7m: F2-E3\n8P: -\n\nmore rough: top note should be D3 or higher.\ntaken from https://www.youtube.com/watch?v=iW6YeDJklhQ\n*/\nfunction randomNumber(n) {\n    return Math.floor(Math.random() * n);\n}\nexports.randomNumber = randomNumber;\nfunction arraySum(array) {\n    return array.reduce(function (s, i) { return s + i; }, 0);\n}\nexports.arraySum = arraySum;\nfunction randomElement(array, weighted) {\n    if (!weighted) {\n        return array[randomNumber(array.length)];\n    }\n    var r = randomNumber(arraySum(weighted)) + 1;\n    var total = weighted\n        .reduce(function (abs, w, i) { return abs.concat(w + (abs.length ? abs[i - 1] : 0)); }, []);\n    return array[total.indexOf(total.find(function (s, i) { return s >= r; }))];\n}\nexports.randomElement = randomElement;\nfunction shuffleArray(a) {\n    var _a;\n    for (var i = a.length - 1; i > 0; i--) {\n        var j = Math.floor(Math.random() * (i + 1));\n        _a = [a[j], a[i]], a[i] = _a[0], a[j] = _a[1];\n    }\n    return a;\n}\nexports.shuffleArray = shuffleArray;\n/** OLD SHEET / RHYTHM STUFF */\n/** Travels path along measures */\nfunction getPath(path, measures, traveled) {\n    if (traveled === void 0) { traveled = []; }\n    if (!Array.isArray(measures[path[0]]) || path.length === 1) {\n        return measures[Math.min(path[0], measures.length - 1)];\n    }\n    return this.getPath(path.slice(1), measures[path[0]], traveled.concat(path[0]));\n}\nexports.getPath = getPath;\nfunction getDuration(divisions, noteLength, measureLength) {\n    if (noteLength === void 0) { noteLength = 1; }\n    if (measureLength === void 0) { measureLength = 1; }\n    return noteLength * divisions.reduce(function (f, d) { return f / d; }, 1000) * measureLength; // fraction of one\n}\nexports.getDuration = getDuration;\nfunction resolveChords(pattern, measures, path, divisions) {\n    var _this = this;\n    if (divisions === void 0) { divisions = []; }\n    if (Array.isArray(pattern)) {\n        // division: array of children lengths down the path (to calculate fraction)\n        divisions = [].concat(divisions, [pattern.length]);\n        return pattern.map(function (p, i) { return _this.resolveChords(p, measures, path.concat([i]), divisions); });\n    }\n    if (pattern === 0) {\n        return 0;\n    }\n    var fraction = getDuration(divisions, pattern);\n    if (fraction === 0) {\n        console.warn('fraction is 0', pattern);\n    }\n    if (fraction === NaN) {\n        console.warn('fraction NaN', divisions, pattern);\n    }\n    return { chord: this.getPath(path, measures), pattern: pattern, path: path, divisions: divisions, fraction: fraction };\n}\nexports.resolveChords = resolveChords;\nfunction hasOff(pattern, division) {\n    if (division === void 0) { division = 3; }\n    return Array.isArray(pattern) && pattern.length === division && pattern[division - 1] !== 0;\n}\nexports.hasOff = hasOff;\n// replaces offs on last beat with next chord + erases next one\nfunction offbeatReducer(settings) {\n    var _this = this;\n    // TODO: find out why some offbeats sound sketchy\n    return function (measures, bar, index) {\n        var last = index > 0 ? measures[index - 1] : null;\n        if (last && _this.hasOff(last[settings.cycle - 1], settings.division)) {\n            last[settings.cycle - 1][settings.division - 1] = bar[0];\n            bar[0] = 0;\n        }\n        return measures.concat([bar]);\n    };\n}\nexports.offbeatReducer = offbeatReducer;\nfunction randomSynth(mix, allowed, settings) {\n    if (allowed === void 0) { allowed = ['sine', 'triangle', 'square', 'sawtooth']; }\n    if (settings === void 0) { settings = {}; }\n    var gains = {\n        sine: 0.9,\n        triangle: 0.8,\n        square: 0.2,\n        sawtooth: 0.3\n    };\n    var wave = randomElement(allowed);\n    return new Synthesizer_1.Synthesizer(Object.assign({ gain: gains[wave], type: wave, mix: mix }, settings));\n}\nexports.randomSynth = randomSynth;\nfunction adsr(_a, time, param) {\n    var attack = _a.attack, decay = _a.decay, sustain = _a.sustain, release = _a.release, gain = _a.gain, duration = _a.duration, endless = _a.endless;\n    // console.log('adsr', attack, decay, sustain, release, gain, duration, time);\n    param.linearRampToValueAtTime(gain, time + attack);\n    param.setTargetAtTime(sustain * gain, time + Math.min(attack + decay, duration), decay);\n    if (!endless) {\n        param.setTargetAtTime(0, time + Math.max(duration - attack - decay, attack + decay, duration), release);\n    }\n}\nexports.adsr = adsr;\nfunction randomDelay(maxMs) {\n    return Math.random() * maxMs * 2 / 1000;\n}\nexports.randomDelay = randomDelay;\nfunction isInRange(note, range) {\n    return tonal_1.Distance.semitones(note, range[0]) <= 0 && tonal_1.Distance.semitones(note, range[1]) >= 0;\n}\nexports.isInRange = isInRange;\nfunction transposeNotes(notes, interval) {\n    return notes.map(function (note) { return tonal_1.Distance.transpose(note, interval); });\n}\nexports.transposeNotes = transposeNotes;\nfunction transposeToRange(notes, range, times) {\n    if (times === void 0) { times = 0; }\n    if (times > 10) {\n        return notes;\n    }\n    if (notes.find(function (note) { return tonal_1.Distance.semitones(note, range[0]) > 0; })) {\n        notes = notes.map(function (note) { return tonal_1.Distance.transpose(note, '8P'); });\n        console.log('tp up');\n        return transposeToRange(notes, range, ++times);\n    }\n    if (notes.find(function (note) { return tonal_1.Distance.semitones(note, range[1]) < 0; })) {\n        console.log('tp down');\n        notes = notes.map(function (note) { return tonal_1.Distance.transpose(note, '-8P'); });\n        return transposeToRange(notes, range, ++times);\n    }\n    return notes;\n}\nexports.transposeToRange = transposeToRange;\nfunction getAverageMidi(notes, offset) {\n    return notes.reduce(function (sum, note) { return sum + Harmony_1.Harmony.getMidi(note, offset); }, 0) / notes.length;\n}\nexports.getAverageMidi = getAverageMidi;\nfunction getDistancesToRangeEnds(notes, range) {\n    if (notes.length > 2) {\n        notes = [notes[0], notes[notes.length - 1]];\n    }\n    var midi = notes.map(function (n) { return Harmony_1.Harmony.getMidi(n); });\n    var rangeMidi = range.map(function (n) { return Harmony_1.Harmony.getMidi(n); });\n    return [midi[0] - rangeMidi[0], rangeMidi[1] - midi[1]];\n}\nexports.getDistancesToRangeEnds = getDistancesToRangeEnds;\nfunction getRangePosition(note, range) {\n    note = Harmony_1.Harmony.getMidi(note);\n    range = range.map(function (n) { return Harmony_1.Harmony.getMidi(n); });\n    var semitones = [note - range[0], range[1] - range[0]];\n    return semitones[0] / semitones[1];\n}\nexports.getRangePosition = getRangePosition;\nfunction getRangeDirection(note, range, defaultDirection, border) {\n    if (defaultDirection === void 0) { defaultDirection = 'down'; }\n    if (border === void 0) { border = 0; }\n    var position = getRangePosition(note, range);\n    if (position <= border) {\n        return { direction: 'up', force: true };\n    }\n    if (position >= (1 - border)) {\n        return { direction: 'down', force: true };\n    }\n    return {\n        direction: defaultDirection, force: false\n    };\n}\nexports.getRangeDirection = getRangeDirection;\n// accepts both strings or numbers where negative means minor, \n// returns unified step string that can be turned into an interval\nfunction getStep(step) {\n    if (typeof step === 'number' && step < 0) {\n        step = 'b' + (step * -1);\n    }\n    return step + ''; // to string\n}\nexports.getStep = getStep;\nfunction getIntervalFromStep(step) {\n    step = getStep(step);\n    var interval = Object.keys(steps)\n        .find(function (i) { return steps[i].includes(step); });\n    if (!interval) {\n        // console.warn(`step ${step} has no defined inteval`);\n    }\n    return interval;\n}\nexports.getIntervalFromStep = getIntervalFromStep;\nfunction getStepsFromDegree(degree) {\n    return;\n}\nexports.getStepsFromDegree = getStepsFromDegree;\nfunction getStepsInChord(notes, chord, min) {\n    if (min === void 0) { min = false; }\n    var root = tonal_1.Chord.tokenize(Harmony_1.Harmony.getTonalChord(chord))[0];\n    return notes.map(function (note) {\n        var interval = tonal_1.Distance.interval(root, tonal_1.Note.pc(note));\n        return getStepFromInterval(interval, min);\n    });\n}\nexports.getStepsInChord = getStepsInChord;\nfunction getStepInChord(note, chord, min) {\n    if (min === void 0) { min = false; }\n    return getStepFromInterval(tonal_1.Distance.interval(tonal_1.Chord.tokenize(Harmony_1.Harmony.getTonalChord(chord))[0], tonal_1.Note.pc(note), min));\n}\nexports.getStepInChord = getStepInChord;\nfunction getChordScales(chord, group) {\n    if (group === void 0) { group = 'Diatonic'; }\n    var tokens = tonal_1.Chord.tokenize(Harmony_1.Harmony.getTonalChord(chord));\n    /* const isSuperset = PcSet.isSupersetOf(Chord.intervals(tokens[1])); */\n    return symbols_1.scaleNames(group).filter(function (name) {\n        /* isSuperset(Scale.intervals(name)) */\n        return tonal_1.PcSet.isSupersetOf(tonal_1.Chord.intervals(tokens[1]), tonal_1.Scale.intervals(name));\n    });\n}\nexports.getChordScales = getChordScales;\nfunction pickChordScale(chord, group) {\n    if (group === void 0) { group = 'Diatonic'; }\n    var scales = getChordScales(chord);\n    if (!scales.length) {\n        console.warn(\"cannot pick chord scale: no scales found for chord \" + chord + \" in group \" + group);\n        return;\n    }\n    return scales[0];\n}\nexports.pickChordScale = pickChordScale;\nfunction findDegree(degreeOrStep, intervalsOrSteps) {\n    var intervals = intervalsOrSteps.map(function (i) { return isInterval(i) ? i : getIntervalFromStep(i); });\n    if (typeof degreeOrStep === 'number') { // is degree\n        var degree_1 = Math.abs(degreeOrStep);\n        return intervals.find(function (i) {\n            i = Harmony_1.Harmony.minInterval(i, 'up');\n            if (!steps[i]) {\n                console.error('interval', i, 'is not valid', intervals);\n            }\n            return !!(steps[i].find(function (step) { return getDegreeFromStep(step) === degree_1; }));\n        });\n    }\n    // is step\n    var step = getStep(degreeOrStep);\n    return intervals.find(function (i) { return i.includes(step) ||\n        i === getIntervalFromStep(step); });\n}\nexports.findDegree = findDegree;\nfunction hasDegree(degree, intervals) {\n    return !!findDegree(degree, intervals);\n}\nexports.hasDegree = hasDegree;\nfunction hasAllDegrees(degrees, intervals) {\n    return degrees.reduce(function (res, d) { return res && hasDegree(d, intervals); }, true);\n}\nexports.hasAllDegrees = hasAllDegrees;\nfunction getScaleDegree(degree, scale) {\n    return findDegree(degree, tonal_1.Scale.intervals(scale));\n}\nexports.getScaleDegree = getScaleDegree;\nfunction getScalePattern(pattern, scale) {\n    return pattern.map(function (degree) { return getScaleDegree(degree, scale); });\n}\nexports.getScalePattern = getScalePattern;\nfunction renderIntervals(intervals, root) {\n    return intervals.map(function (i) { return tonal_1.Distance.transpose(root, i); });\n}\nexports.renderIntervals = renderIntervals;\nfunction renderSteps(steps, root) {\n    return renderIntervals(steps.map(function (step) { return getIntervalFromStep(step); }), root);\n}\nexports.renderSteps = renderSteps;\nfunction permutateIntervals(intervals, pattern) {\n    return pattern.map(function (d) { return findDegree(d, intervals); });\n}\nexports.permutateIntervals = permutateIntervals;\nfunction getStepFromInterval(interval, min) {\n    if (min === void 0) { min = false; }\n    var step = steps[interval] || [];\n    if (min) {\n        return step[1] || step[0] || 0;\n    }\n    return step[0] || 0;\n}\nexports.getStepFromInterval = getStepFromInterval;\nfunction getDegreeFromInterval(interval, simplify) {\n    if (interval === void 0) { interval = '-1'; }\n    if (simplify === void 0) { simplify = false; }\n    var fixed = Harmony_1.Harmony.fixInterval(interval + '', simplify) || '';\n    var match = fixed.match(/[-]?([1-9])+/);\n    if (!match) {\n        return 0;\n    }\n    return Math.abs(parseInt(match[0], 10));\n}\nexports.getDegreeFromInterval = getDegreeFromInterval;\nfunction getDegreeFromStep(step) {\n    step = getStep(step);\n    var match = step.match(/([1-9])+/);\n    if (!match || !match.length) {\n        console.log('no valid step', step);\n        return 0;\n    }\n    return parseInt(match[0], 10);\n}\nexports.getDegreeFromStep = getDegreeFromStep;\nfunction getDegreeInChord(degree, chord) {\n    chord = Harmony_1.Harmony.getTonalChord(chord);\n    var intervals = tonal_1.Chord.intervals(chord);\n    var tokens = tonal_1.Chord.tokenize(chord);\n    return tonal_1.Distance.transpose(tokens[0], findDegree(degree, intervals));\n}\nexports.getDegreeInChord = getDegreeInChord;\nfunction getPatternInChord(pattern, chord) {\n    chord = Harmony_1.Harmony.getTonalChord(chord);\n    var intervals = tonal_1.Chord.intervals(chord);\n    var tokens = tonal_1.Chord.tokenize(chord);\n    var permutation;\n    if (hasAllDegrees(pattern, intervals)) {\n        permutation = permutateIntervals(intervals, pattern);\n    }\n    else {\n        // not all degrees of the pattern are in the chord > get scale\n        var scale = pickChordScale(chord);\n        permutation = permutateIntervals(tonal_1.Scale.intervals(scale), pattern);\n    }\n    if (tokens[0]) {\n        return renderIntervals(permutation, tokens[0]);\n    }\n    return permutation;\n}\nexports.getPatternInChord = getPatternInChord;\n// TODO: other way around: find fixed interval pattern in a scale\n// TODO: motives aka start pattern from same note in different scale\n// TODO: motives aka start pattern from different note in same scale\n// TODO: motives aka start pattern from different note in different scale\nfunction getDigitalPattern(chord) {\n    chord = Harmony_1.Harmony.getTonalChord(chord);\n    var intervals = tonal_1.Chord.intervals(chord);\n    if (intervals.includes('3m')) {\n        return [1, 3, 4, 5];\n    }\n    else if (intervals.includes('3M')) {\n        return [1, 2, 3, 5];\n    }\n    else {\n        return [1, 1, 1, 1];\n    }\n}\nexports.getDigitalPattern = getDigitalPattern;\nfunction renderDigitalPattern(chord) {\n    return getPatternInChord(getDigitalPattern(chord), chord);\n}\nexports.renderDigitalPattern = renderDigitalPattern;\nfunction getGuideTones(chord) {\n    chord = Harmony_1.Harmony.getTonalChord(chord);\n    return getPatternInChord([3, 7], chord);\n}\nexports.getGuideTones = getGuideTones;\nfunction isFirstInPath(path, index) {\n    return path.slice(index)\n        .reduce(function (sum, value) { return sum + value; }, 0) === 0;\n}\nexports.isFirstInPath = isFirstInPath;\nfunction isBarStart(path) {\n    return isFirstInPath(path, 1);\n}\nexports.isBarStart = isBarStart;\nfunction isFormStart(path) {\n    return isFirstInPath(path, 0);\n}\nexports.isFormStart = isFormStart;\nfunction isOffbeat(path) {\n    return path[2] !== 0;\n}\nexports.isOffbeat = isOffbeat;\nfunction otherDirection(direction, defaultDirection) {\n    if (direction === 'up') {\n        return 'down';\n    }\n    else if (direction === 'down') {\n        return 'up';\n    }\n    return defaultDirection;\n}\nexports.otherDirection = otherDirection;\nfunction totalDiff(diff) {\n    var total = diff.reduce(function (weight, diff) {\n        weight.added += diff.added ? diff.count : 0;\n        weight.removed += diff.added ? diff.count : 0;\n        weight.kept += (!diff.added && !diff.removed) ? diff.count : 0;\n        return weight;\n    }, { added: 0, removed: 0, kept: 0, balance: 0 });\n    total.balance = total.added - total.removed;\n    total.changes = total.added + total.removed;\n    return total;\n}\nexports.totalDiff = totalDiff;\n/** Reorders the given notes to contain the given step as close as possible */\nfunction sortByDegree(notes, degree) {\n    degree = Math.max(degree, (degree + 8) % 8);\n    /* const semitones = Interval.semitones(interval); */\n    var diffDegrees = function (a, b) { return Math.abs(getDegreeFromInterval(tonal_1.Distance.interval(a, b) + '') - degree); };\n    /* const diffTones = (a, b) => Math.abs(Distance.interval(a, b) - semitones); */\n    notes = notes.slice(1).reduce(function (chain, note) {\n        var closest = notes\n            .filter(function (n) { return !chain.includes(n); })\n            .sort(function (a, b) { return diffDegrees(chain[0], a) < diffDegrees(chain[0], b) ? -1 : 1; });\n        chain.unshift(closest[0]);\n        return chain;\n    }, [notes[0]]).reverse();\n    return notes;\n}\nexports.sortByDegree = sortByDegree;\n/** Returns the given notes with octaves either moving bottom up or top down */\nfunction renderAbsoluteNotes(notes, octave, direction) {\n    if (octave === void 0) { octave = 3; }\n    if (direction === void 0) { direction = 'up'; }\n    return notes.reduce(function (absolute, current, index, notes) {\n        if (index === 0) {\n            return [current + octave];\n        }\n        var interval = tonal_1.Distance.interval(notes[index - 1], current);\n        interval = Harmony_1.Harmony.minInterval(interval, direction);\n        if (interval === '1P') {\n            interval = direction === 'down' ? '-8P' : '8P';\n        }\n        absolute.push(tonal_1.Distance.transpose(absolute[index - 1], interval + ''));\n        return absolute;\n    }, []);\n}\nexports.renderAbsoluteNotes = renderAbsoluteNotes;\nfunction getIntervals(notes) {\n    return notes.reduce(function (intervals, note, index, notes) {\n        if (index === 0) {\n            return [];\n        }\n        intervals.push(tonal_1.Distance.interval(notes[index - 1], note));\n        return intervals;\n    }, []);\n}\nexports.getIntervals = getIntervals;\nfunction isInterval(interval) {\n    return typeof tonal_1.Interval.semitones(interval) === 'number';\n}\nexports.isInterval = isInterval;\nfunction smallestInterval(intervals) {\n    return intervals.reduce(function (min, current) {\n        if (!min || tonal_1.Interval.semitones(current) < tonal_1.Interval.semitones(min)) {\n            return current;\n        }\n        return min;\n    });\n}\nexports.smallestInterval = smallestInterval;\nfunction sortNotes(notes, direction) {\n    if (direction === void 0) { direction = 'up'; }\n    return notes.sort(function (a, b) { return Harmony_1.Harmony.getMidi(a) - Harmony_1.Harmony.getMidi(b); });\n}\nexports.sortNotes = sortNotes;\nfunction analyzeVoicing(notes, root) {\n    if (!notes || notes.length < 2) {\n        throw new Error('Can only analyze Voicing with at least two notes');\n    }\n    notes = sortNotes(notes);\n    root = root || notes[0]; // TODO: get degrees\n    var intervals = getIntervals(notes);\n    var sortedIntervals = intervals.sort(Harmony_1.Harmony.sortMinInterval());\n    return {\n        notes: notes,\n        minInterval: sortedIntervals[0],\n        maxInterval: sortedIntervals[sortedIntervals.length - 1],\n        intervals: intervals,\n        spread: tonal_1.Distance.interval(notes[0], notes[notes.length - 1])\n    };\n}\nexports.analyzeVoicing = analyzeVoicing;\nfunction semitoneDifference(intervals) {\n    return intervals.reduce(function (semitones, interval) {\n        return semitones + Math.abs(tonal_1.Interval.semitones(interval));\n    }, 0);\n}\nexports.semitoneDifference = semitoneDifference;\nfunction semitoneMovement(intervals) {\n    return intervals.reduce(function (semitones, interval) {\n        return semitones + tonal_1.Interval.semitones(interval);\n    }, 0);\n}\nexports.semitoneMovement = semitoneMovement;\nfunction longestChild(array) {\n    return array.reduce(function (max, current) { return (current.length > max.length ? current : max); }, array[0]);\n}\nexports.longestChild = longestChild;\nfunction isPitchClass(note) {\n    return tonal_1.Note.pc(note) === note;\n}\nexports.isPitchClass = isPitchClass;\nfunction mapTree(tree, modifier, simplify, path, siblings, position) {\n    if (simplify === void 0) { simplify = false; }\n    if (path === void 0) { path = []; }\n    if (siblings === void 0) { siblings = []; }\n    if (position === void 0) { position = 0; }\n    // skip current tree if only one child\n    if (simplify && Array.isArray(tree) && tree.length === 1) {\n        return mapTree(tree[0], modifier, simplify, path, siblings, position);\n    }\n    var fraction = siblings.reduce(function (f, d) { return f / d; }, 1);\n    if (!Array.isArray(tree)) {\n        return modifier ? modifier(tree, { path: path, siblings: siblings, fraction: fraction, position: position }) : tree;\n    }\n    if (Array.isArray(tree)) {\n        siblings = siblings.concat([tree.length]);\n        fraction = fraction / tree.length;\n        return tree.map(function (subtree, index) {\n            return mapTree(subtree, modifier, simplify, path.concat([index]), siblings, position + index * fraction);\n        });\n    }\n}\nexports.mapTree = mapTree;\nfunction flattenTree(tree) {\n    var flat = [];\n    mapTree(tree, function (value, props) { return flat.push(Object.assign(props, { value: value })); });\n    return flat;\n}\nexports.flattenTree = flattenTree;\nfunction expandTree(tree) {\n    // TODO\n}\nexports.expandTree = expandTree;\n/* Returns true if the given intervals are all present in the chords interval structure\nIntervals can be appendend with \"?\" to indicate that those degrees could also be omitted\n(but when present they should match)\n*/\nfunction chordHasIntervals(chord, intervals) {\n    chord = Harmony_1.Harmony.getTonalChord(chord);\n    var has = tonal_1.Chord.intervals(chord);\n    return intervals.reduce(function (match, current) {\n        var isOptional = current.includes('?');\n        var isForbidden = current.includes('!');\n        if (isOptional) {\n            current = current.replace('?', '');\n            return (!hasDegree(getDegreeFromInterval(current), has) ||\n                has.includes(current)) && match;\n        }\n        if (isForbidden) {\n            current = current.replace('!', '');\n            return !hasDegree(getDegreeFromInterval(current), has);\n        }\n        return has.includes(current) && match;\n    }, true);\n}\nexports.chordHasIntervals = chordHasIntervals;\nfunction isDominantChord(chord) {\n    return chordHasIntervals(chord, ['3M', '7m']) || chordHasIntervals(chord, ['!3', '4P', '7m']);\n}\nexports.isDominantChord = isDominantChord;\nfunction isMajorChord(chord) {\n    return chordHasIntervals(chord, ['3M', '7M?']);\n}\nexports.isMajorChord = isMajorChord;\nfunction isMinorChord(chord) {\n    return chordHasIntervals(chord, ['3m']);\n}\nexports.isMinorChord = isMinorChord;\nfunction isMinorTonic(chord) {\n    return chordHasIntervals(chord, ['3m', '5P', '13M?', '7M?']);\n}\nexports.isMinorTonic = isMinorTonic;\nfunction getChordType(chord) {\n    if (isDominantChord(chord)) {\n        return 'dominant';\n    }\n    if (isMajorChord(chord)) {\n        return 'major';\n    }\n    if (isMinorTonic(chord)) {\n        return 'minor-tonic';\n    }\n    if (isMinorChord(chord)) {\n        return 'minor';\n    }\n}\nexports.getChordType = getChordType;\nfunction getChordNotes(chord, validate) {\n    chord = Harmony_1.Harmony.getTonalChord(chord);\n    var tokens = tonal_1.Chord.tokenize(chord);\n    var notes = tonal_1.Chord.notes(chord);\n    return notes.filter(function (note) {\n        var interval = tonal_1.Distance.interval(tokens[0], note);\n        return !validate || validate(note, {\n            root: tokens[0],\n            symbol: tokens[1],\n            interval: interval,\n            step: getStepFromInterval(interval),\n            degree: getDegreeFromInterval(interval + '')\n        });\n    });\n}\nexports.getChordNotes = getChordNotes;\nfunction validateWithoutRoot(note, _a) {\n    var degree = _a.degree;\n    return degree !== 1;\n}\nexports.validateWithoutRoot = validateWithoutRoot;\n// OLD...\nfunction getVoicing(chord, _a) {\n    var _b = _a === void 0 ? {} : _a, voices = _b.voices, previousVoicing = _b.previousVoicing, omitRoot = _b.omitRoot, quartal = _b.quartal;\n    chord = Harmony_1.Harmony.getTonalChord(chord);\n    var tokens = tonal_1.Chord.tokenize(chord);\n    var notes = tonal_1.Chord.notes(chord);\n    if (omitRoot) {\n        notes = notes.filter(function (n) { return n !== tokens[0]; });\n    }\n    if (quartal) {\n    }\n    if (previousVoicing) {\n    }\n    return notes;\n}\nexports.getVoicing = getVoicing;\nfunction semitoneDistance(noteA, noteB) {\n    return tonal_1.Interval.semitones(tonal_1.Distance.interval(noteA, noteB) + '');\n}\nexports.semitoneDistance = semitoneDistance;\nfunction noteArray(range) {\n    var slots = tonal_1.Interval.semitones(tonal_1.Distance.interval(range[0], range[1]) + '');\n    return new Array(slots + 1)\n        .fill('')\n        .map(function (v, i) { return tonal_1.Distance.transpose(range[0], tonal_1.Interval.fromSemitones(i)) + ''; })\n        .map(function (n) { return tonal_1.Note.simplify(n); });\n}\nexports.noteArray = noteArray;\nfunction factorial(n) {\n    var value = 1;\n    for (var i = 2; i <= n; ++i) {\n        value *= i;\n    }\n    return value;\n}\nexports.factorial = factorial;\n// finds best combination following the given notes, based on minimal movement\n/* export function bestCombination(notes, combinations = []) {\n    return combinations.reduce((best, current) => {\n        const currentMovement = voicingDifference(notes, current);\n        const bestMovement = voicingDifference(notes, best);\n        if (Math.abs(currentMovement) < Math.abs(bestMovement)) {\n            return current;\n        }\n        return best;\n    });\n} */\n/* export function sortCombinationsByMovement(notes, combinations, direction: intervalDirection = 'up', min = true) {\n    const movements = combinations.map((combination) => ({\n        movement: voicingMovement(notes, combination, min),\n        combination\n    }));\n    let right = movements.filter(move => direction === 'up' ? move >= 0 : move <= 0);\n    if (!right.length) {\n        right = movements;\n    }\n    let sorted = right.sort((a, b) => a.movement - b.movement);\n    if (direction === 'down') {\n        sorted = sorted.reverse();\n    }\n    return sorted.map(movement => movement.combination);\n}\n */ \n","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tonal_1 = require(\"tonal\");\nvar tonal_2 = require(\"tonal\");\nvar tonal_3 = require(\"tonal\");\nvar tonal_4 = require(\"tonal\");\nvar util_1 = require(\"../util/util\");\nvar Harmony = /** @class */ (function () {\n    function Harmony() {\n    }\n    Harmony.isBlack = function (note) {\n        return tonal_1.Note.props(note)['acc'] !== '';\n    };\n    Harmony.hasSamePitch = function (noteA, noteB, ignoreOctave) {\n        if (ignoreOctave === void 0) { ignoreOctave = false; }\n        if (ignoreOctave || util_1.isPitchClass(noteA) || util_1.isPitchClass(noteB)) {\n            return tonal_1.Note.props(noteA).chroma === tonal_1.Note.props(noteB).chroma;\n        }\n        return tonal_1.Note.midi(noteA) === tonal_1.Note.midi(noteB);\n    };\n    Harmony.getTonalChord = function (chord) {\n        if (!chord) {\n            return null;\n        }\n        var root = Harmony.getBassNote(chord, true) || '';\n        var symbol = chord.replace(root, '');\n        symbol = symbol.split('/')[0]; // ignore slash\n        // check if already a proper tonal chord\n        if (!!Object.keys(Harmony.irealToTonal).find(function (i) { return Harmony.irealToTonal[i] === symbol; })) {\n            return root + symbol;\n        }\n        symbol = Harmony.irealToTonal[symbol];\n        if (symbol === undefined) {\n            return null;\n        }\n        return root + symbol;\n    };\n    Harmony.getBassNote = function (chord, ignoreSlash) {\n        if (ignoreSlash === void 0) { ignoreSlash = false; }\n        if (!chord) {\n            return null;\n        }\n        if (!ignoreSlash && chord.includes('/')) {\n            return chord.split('/')[1];\n        }\n        var match = chord.match(/^([A-G][b|#]?)/);\n        if (!match || !match.length) {\n            return '';\n        }\n        return match[0];\n    };\n    Harmony.transposeChord = function (chord, interval) {\n        if (!chord) {\n            return chord;\n        }\n        var tokens = tonal_2.Chord.tokenize(Harmony.getTonalChord(chord));\n        var root = tonal_4.Distance.transpose(tokens[0], interval);\n        root = tonal_1.Note.simplify(root);\n        return root + tokens[1];\n    };\n    Harmony.getMidi = function (note, offset) {\n        if (offset === void 0) { offset = 0; }\n        return tonal_1.Note.midi(note) - offset;\n    };\n    Harmony.intervalComplement = function (interval) {\n        var fix = {\n            '8P': '1P',\n            '8d': '1A',\n            '8A': '1d',\n            '1A': '8d',\n            '1d': '8A',\n        };\n        var fixIndex = Object.keys(fix).find(function (key) { return interval.match(key); });\n        if (fixIndex) {\n            return fix[fixIndex];\n        }\n        return tonal_3.Interval.invert(interval);\n    };\n    Harmony.invertInterval = function (interval) {\n        if (!interval) {\n            return null;\n        }\n        var positive = interval.replace('-', '');\n        var complement = Harmony.intervalComplement(positive);\n        var isNegative = interval.length > positive.length;\n        return (isNegative ? '' : '-') + complement;\n    };\n    /** Transforms interval into one octave (octave+ get octaved down) */\n    Harmony.fixInterval = function (interval, simplify) {\n        if (interval === void 0) { interval = ''; }\n        if (simplify === void 0) { simplify = false; }\n        var fix = {\n            '0A': '1P',\n            '-0A': '1P',\n        };\n        if (simplify) {\n            fix = __assign({}, fix, { '8P': '1P', '-8P': '1P' });\n            interval = tonal_3.Interval.simplify(interval);\n        }\n        if (Object.keys(fix).includes(interval)) {\n            return fix[interval];\n        }\n        return interval;\n    };\n    /** inverts the interval if it does not go to the desired direction */\n    Harmony.forceDirection = function (interval, direction, noUnison) {\n        if (noUnison === void 0) { noUnison = false; }\n        var semitones = tonal_3.Interval.semitones(interval);\n        if ((direction === 'up' && semitones < 0) ||\n            (direction === 'down' && semitones > 0)) {\n            return Harmony.invertInterval(interval);\n        }\n        if (interval === '1P' && noUnison) {\n            return (direction === 'down' ? '-' : '') + '8P';\n        }\n        return interval;\n    };\n    // use Interval.ic?\n    Harmony.minInterval = function (interval, direction, noUnison) {\n        interval = Harmony.fixInterval(interval, true);\n        if (direction) {\n            return Harmony.forceDirection(interval, direction, noUnison);\n        }\n        var inversion = Harmony.invertInterval(interval);\n        if (Math.abs(tonal_3.Interval.semitones(inversion)) < Math.abs(tonal_3.Interval.semitones(interval))) {\n            interval = inversion;\n        }\n        return interval;\n    };\n    // returns array of intervals that lead the voices of chord A to chordB\n    Harmony.minIntervals = function (chordA, chordB) {\n        return chordA.map(function (n, i) { return Harmony.minInterval(tonal_4.Distance.interval(n, chordB[i])); });\n    };\n    Harmony.mapMinInterval = function (direction) {\n        return function (interval) { return Harmony.minInterval(interval, direction); };\n    };\n    // sort function\n    Harmony.sortMinInterval = function (preferredDirection, accessor) {\n        if (preferredDirection === void 0) { preferredDirection = 'up'; }\n        if (accessor === void 0) { accessor = (function (i) { return i; }); }\n        return function (a, b) {\n            var diff = Math.abs(tonal_3.Interval.semitones(accessor(a))) - Math.abs(tonal_3.Interval.semitones(accessor(b)));\n            if (diff === 0) {\n                return preferredDirection === 'up' ? -1 : 1;\n            }\n            return diff;\n        };\n    };\n    /** Returns the note with the least distance to \"from\" */\n    Harmony.getNearestNote = function (from, to, direction) {\n        var interval = Harmony.minInterval(tonal_4.Distance.interval(tonal_1.Note.pc(from), tonal_1.Note.pc(to)), direction);\n        return tonal_4.Distance.transpose(from, interval) + '';\n    };\n    /** Returns the note with the least distance to \"from\". TODO: add range */\n    Harmony.getNearestTargets = function (from, targets, preferredDirection, flip) {\n        if (preferredDirection === void 0) { preferredDirection = 'down'; }\n        if (flip === void 0) { flip = false; }\n        var intervals = targets\n            .map(function (target) { return tonal_4.Distance.interval(tonal_1.Note.pc(from), target); })\n            .map(Harmony.mapMinInterval(preferredDirection))\n            .sort(Harmony.sortMinInterval(preferredDirection));\n        /* if (flip) {\n            intervals = intervals.reverse();\n        } */\n        return intervals.map(function (i) { return tonal_4.Distance.transpose(from, i); });\n    };\n    Harmony.intervalMatrix = function (from, to) {\n        return to.map(function (note) { return from\n            .map(function (n) {\n            return tonal_4.Distance.interval(n, note);\n        })\n            .map(function (d) { return Harmony.minInterval(d); }); }\n        /* .map(i => i.slice(0, 2) === '--' ? i.slice(1) : i) */\n        );\n    };\n    // mapping for ireal chords to tonal symbols, see getTonalChord\n    Harmony.irealToTonal = {\n        \"^7\": \"M7\",\n        \"7\": \"7\",\n        \"-7\": \"m7\",\n        \"h7\": \"m7b5\",\n        \"7#9\": \"7#9\",\n        \"7b9\": \"7b9\",\n        \"^7#5\": \"M7#5\",\n        \"\": \"\",\n        \"6\": \"6\",\n        \"9\": \"9\",\n        \"-6\": \"m6\",\n        \"o7\": \"o7\",\n        \"h\": \"m7b5\",\n        \"-^7\": \"mM7\",\n        \"o\": \"o\",\n        \"^9\": \"M9\",\n        \"7#11\": \"7#11\",\n        \"7#5\": \"7#5\",\n        \"-\": \"m\",\n        \"7sus\": \"7sus\",\n        \"69\": \"M69\",\n        \"7b13\": \"7b13\",\n        \"^\": \"M\",\n        \"+\": \"+\",\n        \"7b9b5\": \"7b5b9\",\n        \"-9\": \"m9\",\n        \"9sus\": \"9sus\",\n        \"7b9sus\": \"7b9sus\",\n        \"7b9#5\": \"7#5b9\",\n        \"13\": \"13\",\n        \"^7#11\": \"M7#11\",\n        \"-7b5\": \"m7b5\",\n        \"^13\": \"M13\",\n        \"7#9b5\": \"7b5#9\",\n        \"-11\": \"m11\",\n        \"11\": \"11\",\n        \"7b5\": \"7b5\",\n        \"9#5\": \"9#5\",\n        \"13b9\": \"13b9\",\n        \"9#11\": \"9#11\",\n        \"13#11\": \"13#11\",\n        \"-b6\": \"mb6\",\n        \"7#9#5\": \"7#5#9\",\n        \"-69\": \"m69\",\n        \"13sus\": \"13sus\",\n        \"^9#11\": \"M9#11\",\n        \"7b9#9\": \"7b9#9\",\n        \"sus\": \"sus\",\n        \"7#9#11\": \"7#9#11\",\n        \"7b9b13\": \"7b9b13\",\n        \"7b9#11\": \"7b9#11\",\n        \"13#9\": \"13#9\",\n        \"9b5\": \"9b5\",\n        \"-^9\": \"mM9\",\n        \"2\": \"Madd9\",\n        \"-#5\": \"m#5\",\n        \"7+\": \"7#5\",\n        \"7sus4\": \"7sus\",\n        \"M69\": \"M69\",\n    };\n    Harmony.pitchRegex = /^([A-G^][b|#]?)/;\n    return Harmony;\n}());\nexports.Harmony = Harmony;\n","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Measure_1 = require(\"./Measure\");\nvar Harmony_1 = require(\"../harmony/Harmony\");\nvar Sheet = /** @class */ (function () {\n    function Sheet() {\n    }\n    Sheet.render = function (sheet, options, clear) {\n        if (options === void 0) { options = {}; }\n        if (clear === void 0) { clear = true; }\n        var state = __assign({ sheet: sheet, measures: [], forms: 1, nested: true, fallbackToZero: true, firstTime: true }, options);\n        state = __assign({}, state, Sheet.newForm(state));\n        var runs = 0;\n        while (runs < 1000 && state.index < sheet.length) {\n            runs++;\n            state = Sheet.nextMeasure(state);\n        }\n        if (clear) {\n            return state.measures\n                .map(function (m) { return Measure_1.Measure.from(m); })\n                .map(function (m) {\n                delete m.house;\n                delete m.signs;\n                return m;\n            });\n        }\n        return state.measures;\n    };\n    Sheet.nextMeasure = function (state) {\n        state = __assign({}, state, Sheet.nextSection(state)); // moves to the right house (if any)\n        var sheet = state.sheet, index = state.index, measures = state.measures;\n        state = __assign({}, state, { measures: measures.concat([__assign({}, Measure_1.Measure.from(sheet[index]), { index: index // add index for mapping\n                 })]) }, Sheet.nextIndex(state));\n        return Sheet.nextForm(state);\n    };\n    Sheet.nextIndex = function (state) {\n        var _a;\n        var sheet = state.sheet, index = state.index, jumps = state.jumps, nested = state.nested, fallbackToZero = state.fallbackToZero, lastTime = state.lastTime;\n        if (!Sheet.shouldJump({ sheet: sheet, index: index, jumps: jumps, lastTime: lastTime })) {\n            return {\n                index: index + 1\n            };\n        }\n        var braces = [Sheet.getJumpDestination({ sheet: sheet, index: index, fallbackToZero: fallbackToZero, nested: nested }), index];\n        jumps = Sheet.wipeKeys(jumps, [braces[0], braces[1] - 1]); // wipes indices inside braces\n        return {\n            index: braces[0],\n            jumps: __assign({}, jumps, (_a = {}, _a[braces[1]] = (jumps[braces[1]] || 0) + 1, _a))\n        };\n    };\n    Sheet.newForm = function (state) {\n        return __assign({}, state, { index: 0, jumps: {}, visits: {}, lastTime: state.forms === 1 });\n    };\n    Sheet.nextForm = function (state, force) {\n        if (force === void 0) { force = false; }\n        var sheet = state.sheet, index = state.index, forms = state.forms;\n        if (force || (index >= sheet.length && forms > 1)) {\n            return Sheet.newForm(__assign({}, state, { firstTime: false, forms: forms - 1 }));\n        }\n        return state;\n    };\n    // moves the index to the current house (if any)\n    Sheet.nextSection = function (state) {\n        var _a;\n        var sheet = state.sheet, index = state.index, visits = state.visits, firstTime = state.firstTime, lastTime = state.lastTime;\n        // skip intro when not firstTime\n        if (!firstTime && Measure_1.Measure.from(sheet[index]).section === 'IN') {\n            return {\n                index: Sheet.getNextSectionIndex({ sheet: sheet, index: index }),\n            };\n        }\n        // skip coda when not last time\n        if (Measure_1.Measure.hasSign('Coda', sheet[index]) && !Sheet.readyForFineOrCoda(state, -1)) {\n            return Sheet.nextForm(state, true);\n        }\n        if (!Measure_1.Measure.hasHouse(sheet[index], 1)) {\n            return {};\n        }\n        var next = Sheet.getNextHouseIndex({ sheet: sheet, index: index, visits: visits });\n        if (next === -1) {\n            next = index;\n            visits = {}; // reset visits\n        }\n        return {\n            visits: __assign({}, visits, (_a = {}, _a[next] = (visits[next] || 0) + 1, _a)),\n            index: next\n        };\n    };\n    /** Starts at a given index, stops when the pair functions returned equally often */\n    Sheet.findPair = function (sheet, index, pairs, move, stack) {\n        if (move === void 0) { move = 1; }\n        if (stack === void 0) { stack = 0; }\n        var match = -1; // start with no match\n        while (match === -1 && index >= 0 && index < sheet.length) {\n            if (pairs[0](sheet[index], { sheet: sheet, index: index })) { // same sign\n                stack++;\n            }\n            if (pairs[1](sheet[index], { sheet: sheet, index: index })) { // pair sign\n                stack--;\n            }\n            if (stack === 0) { // all pairs resolved > match!\n                match = index;\n            }\n            else {\n                index += move;\n            }\n        }\n        return match;\n    };\n    Sheet.findMatch = function (sheet, index, find, move) {\n        if (move === void 0) { move = 1; }\n        var match = -1; // start with no match\n        while (match === -1 && index >= 0 && index < sheet.length) {\n            if (find(sheet[index], { sheet: sheet, index: index })) {\n                match = index;\n            }\n            else {\n                index += move;\n            }\n        }\n        return match;\n    };\n    // simple matching for brace start, ignores nested repeats\n    Sheet.getJumpDestination = function (state) {\n        var sheet = state.sheet, index = state.index, fallbackToZero = state.fallbackToZero, nested = state.nested;\n        var sign = Measure_1.Measure.getJumpSign(sheet[index]);\n        // if fine > jump till end\n        if (sign.fine) {\n            return sheet.length;\n        }\n        // if no pair given => da capo\n        if (!sign.pair) {\n            return 0;\n        }\n        // if nested mode on and opening brace is searched, use getBracePair..\n        if (nested !== false && sign.pair === '{') {\n            return Sheet.getBracePair({ sheet: sheet, index: index, fallbackToZero: fallbackToZero });\n        }\n        var destination = Sheet.findMatch(sheet, index, function (m) { return Measure_1.Measure.hasSign(sign.pair, m); }, sign.move || -1); // default move back\n        if (fallbackToZero) {\n            // default to zero when searching repeat start (could be forgotten)\n            return destination === -1 ? 0 : destination;\n        }\n        return destination;\n    };\n    // returns the index of the repeat sign that pairs with the given index\n    Sheet.getBracePair = function (_a) {\n        var sheet = _a.sheet, index = _a.index, fallbackToZero = _a.fallbackToZero;\n        if (fallbackToZero === undefined) {\n            fallbackToZero = true;\n        }\n        if (Measure_1.Measure.hasSign('{', sheet[index])) {\n            return Sheet.findPair(sheet, index, [\n                function (m) { return Measure_1.Measure.hasSign('{', m); },\n                function (m) { return Measure_1.Measure.hasSign('}', m); },\n            ], 1);\n        }\n        else if (Measure_1.Measure.hasSign('}', sheet[index])) {\n            var pair = Sheet.findPair(sheet, index, [\n                function (m, state) {\n                    // this logic could be infinitely complex, having many side effects and interpretations\n                    // the current behaviour is similar to musescore or ireal handling braces\n                    if (!Measure_1.Measure.hasSign('}', m)) {\n                        return false;\n                    }\n                    if (index === state.index) {\n                        return true;\n                    }\n                    var relatedHouse = Sheet.getRelatedHouse({ sheet: sheet, index: state.index });\n                    return relatedHouse === -1;\n                },\n                function (m) { return Measure_1.Measure.hasSign('{', m); }\n            ], -1);\n            if (fallbackToZero) {\n                return pair === -1 ? 0 : pair; // default to zero when searching repeat start (could be forgotten)\n            }\n            return pair;\n        }\n        return -1;\n    };\n    // returns true if the house at the given index has not been visited enough times\n    Sheet.canVisitHouse = function (_a) {\n        var sheet = _a.sheet, index = _a.index, visits = _a.visits;\n        var houses = sheet[index].house;\n        if (houses === undefined) {\n            return false;\n        }\n        if (!Array.isArray(houses)) {\n            houses = [houses];\n        }\n        var visited = visits[index] || 0;\n        return visited < houses.length;\n    };\n    // returns the next house that can be visited (from the given index)\n    Sheet.getNextHouseIndex = function (_a, move) {\n        var sheet = _a.sheet, index = _a.index, visits = _a.visits;\n        if (move === void 0) { move = 1; }\n        return Sheet.findMatch(sheet, index, function (m, step) { return Measure_1.Measure.hasHouse(m) && Sheet.canVisitHouse({ sheet: sheet, index: step.index, visits: visits }); }, move);\n    };\n    Sheet.getNextSectionIndex = function (_a, move) {\n        var sheet = _a.sheet, index = _a.index;\n        if (move === void 0) { move = 1; }\n        return Sheet.findMatch(sheet, index + 1, function (m) { return Measure_1.Measure.from(m).section !== undefined; }, 1);\n    };\n    // wipes all keys in the given range\n    Sheet.wipeKeys = function (numberMap, range) {\n        var wiped = {};\n        Object.keys(numberMap)\n            .map(function (i) { return parseInt(i); })\n            .filter(function (i) { return i < range[0] || i > range[1]; })\n            .forEach(function (i) { return wiped[i] = numberMap[i]; });\n        return wiped;\n    };\n    Sheet.getRelatedHouse = function (_a) {\n        var sheet = _a.sheet, index = _a.index;\n        var latestHouse = Sheet.findPair(sheet, index, [\n            function (m, state) { return index === state.index || Measure_1.Measure.hasSign('}', m); },\n            function (m) { return Measure_1.Measure.hasHouse(m); }\n        ], -1);\n        return latestHouse;\n    };\n    Sheet.isFirstHouse = function (_a) {\n        var sheet = _a.sheet, index = _a.index;\n        return Measure_1.Measure.hasHouse(sheet[index], 1);\n    };\n    Sheet.getAllowedJumps = function (_a) {\n        var sheet = _a.sheet, index = _a.index;\n        if (!Measure_1.Measure.hasJumpSign(sheet[index])) {\n            return 0;\n        }\n        var measure = Measure_1.Measure.from(sheet[index]);\n        if (measure.times !== undefined) {\n            return measure.times;\n        }\n        return 1;\n    };\n    Sheet.readyForFineOrCoda = function (_a, move) {\n        var sheet = _a.sheet, index = _a.index, jumps = _a.jumps, lastTime = _a.lastTime;\n        if (move === void 0) { move = 1; }\n        var signs = Object.keys(Sheet.jumpSigns)\n            .filter(function (s) { return s.includes('DC') || s.includes('DS'); });\n        var backJump = Sheet.findMatch(sheet, index, function (m) { return signs.reduce(function (match, sign) { return match || Measure_1.Measure.hasSign(sign, m); }, false); }, move);\n        if (backJump === -1) {\n            return lastTime; // last time\n        }\n        return jumps[backJump] > 0;\n    };\n    Sheet.shouldJump = function (_a) {\n        var sheet = _a.sheet, index = _a.index, jumps = _a.jumps, lastTime = _a.lastTime;\n        if (!Measure_1.Measure.hasJumpSign(sheet[index])) {\n            return false;\n        }\n        var sign = Measure_1.Measure.getJumpSign(sheet[index]);\n        if (sign.validator && !sign.validator({ sheet: sheet, index: index, jumps: jumps, lastTime: lastTime })) {\n            return false;\n        }\n        var allowedJumps = Sheet.getAllowedJumps({ sheet: sheet, index: index });\n        var timesJumped = jumps[index] || 0;\n        return timesJumped < allowedJumps;\n    };\n    Sheet.transpose = function (sheet, interval) {\n        if (sheet.chords) {\n            sheet = __assign({}, sheet, { chords: sheet.chords\n                    .map(function (measure) { return Measure_1.Measure.from(measure).chords\n                    .map(function (chord) { return Harmony_1.Harmony.transposeChord(chord, interval); }); }) });\n        }\n        if (sheet.melody) {\n            console.log('TODO: tranpose melody');\n        }\n        return sheet;\n    };\n    Sheet.jumpSigns = {\n        '}': { pair: '{', move: -1 },\n        'DC': {},\n        'DS': { pair: 'Segno', move: -1 },\n        'DS.Fine': { pair: 'Segno', move: -1 },\n        'DS.Coda': { pair: 'Segno', move: -1 },\n        'DC.Fine': {},\n        'DC.Coda': {},\n        'Fine': {\n            fine: true,\n            validator: function (state) { return Sheet.readyForFineOrCoda(state); }\n        },\n        'ToCoda': {\n            pair: 'Coda', move: 1,\n            validator: function (state) { return Sheet.readyForFineOrCoda(state); }\n        }\n    };\n    return Sheet;\n}());\nexports.Sheet = Sheet;\n/*\nTODO:\n\nmore typings\nspecial sections:\nIN: only play the first time\nCODA: only play last time\n\ntest standards:\n- Alice in Wonderland (dc al 2nd ending)\n- All or Nothing at All (dc al coda)\n- Are you real (intro + coda)\n- Armageddon (intro)\n- The Bat (coda sign inside repeat): ireal plays coda directly first time..\n- Bennys Tune (intro+coda sign inside repeat): ireal plays coda directly first time..\n- Bess You Is My Woman (coda sign inside repeat): ireal plays coda directly first time..\n- Blessed Relief (nested repeats, with odd behaviour)\n- Blue in Green (coda)\n- Miles Ahead (coda)\n*/\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Synthesizer_1 = require(\"./instruments/Synthesizer\");\nvar Metronome = /** @class */ (function () {\n    function Metronome(mix) {\n        this.synth = new Synthesizer_1.Synthesizer({ type: 'sine', gain: 1, mix: mix });\n        this.ready = this.synth.ready;\n    }\n    Metronome.prototype.count = function (pulse, bars) {\n        var _this = this;\n        if (bars === void 0) { bars = 1; }\n        var count = new Array(bars).fill([new Array(pulse.props.cycle).fill(1)]);\n        return pulse.tickArray(count, function (_a) {\n            var path = _a.path, deadline = _a.deadline;\n            _this.synth.playKeys([path[2] === 0 ? 90 : 78], { deadline: deadline, duration: 0.01, attack: .01, release: .01, decay: .01, sustain: 1 });\n        });\n    };\n    return Metronome;\n}());\nexports.Metronome = Metronome;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Permutation = /** @class */ (function () {\n    function Permutation() {\n    }\n    Permutation.permutateElements = function (array, validate, path) {\n        if (path === void 0) { path = []; }\n        var isValid = function (next) { return !validate || validate(path, next, array); };\n        if (array.length === 1) {\n            return isValid(array[0]) ? array : [];\n        }\n        return array.filter(isValid).reduce(function (combinations, el) { return combinations.concat(Permutation.permutateElements(array.filter(function (e) { return e !== el; }), validate, path.concat([el])).map(function (subcombinations) { return [\n            el\n        ].concat(subcombinations); })); }, []);\n    };\n    Permutation.permutationComplexity = function (array, validate, path) {\n        if (path === void 0) { path = []; }\n        var validations = 0;\n        Permutation.permutateElements(array, function (path, next, array) {\n            ++validations;\n            return !validate || validate(path, next, array);\n        }, path);\n        return validations;\n    };\n    Permutation.permutateArray = function (array) {\n        if (array.length === 1) {\n            return array;\n        }\n        return array.reduce(function (combinations, el) { return combinations.concat(Permutation.permutateArray(array.filter(function (e) { return e !== el; }))\n            .map(function (subcombinations) { return ([el].concat(subcombinations)); })); }, []);\n    };\n    // combine multiple validators\n    Permutation.combineValidators = function () {\n        var validators = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            validators[_i] = arguments[_i];\n        }\n        return function (path, next, array) { return validators\n            .reduce(function (result, validator) { return result && validator(path, next, array); }, true); };\n    };\n    //https://stackoverflow.com/questions/9960908/permutations-in-javascript\n    Permutation.combinations = function (array) {\n        var length = array.length, result = [array.slice()], c = new Array(length).fill(0), i = 1, k, p;\n        while (i < length) {\n            if (c[i] < i) {\n                k = i % 2 && c[i];\n                p = array[i];\n                array[i] = array[k];\n                array[k] = p;\n                ++c[i];\n                i = 1;\n                result.push(array.slice());\n            }\n            else {\n                c[i] = 0;\n                ++i;\n            }\n        }\n        return result;\n    };\n    // https://gist.github.com/axelpale/3118596\n    Permutation.binomial = function (set, k) {\n        var i, j, combs, head, tailcombs;\n        // There is no way to take e.g. sets of 5 elements from\n        // a set of 4.\n        if (k > set.length || k <= 0) {\n            return [];\n        }\n        // K-sized set has only one K-sized subset.\n        if (k == set.length) {\n            return [set];\n        }\n        // There is N 1-sized subsets in a N-sized set.\n        if (k == 1) {\n            combs = [];\n            for (i = 0; i < set.length; i++) {\n                combs.push([set[i]]);\n            }\n            return combs;\n        }\n        // Assert {1 < k < set.length}\n        // Algorithm description:\n        // To get k-combinations of a set, we want to join each element\n        // with all (k-1)-combinations of the other elements. The set of\n        // these k-sized sets would be the desired result. However, as we\n        // represent sets with lists, we need to take duplicates into\n        // account. To avoid producing duplicates and also unnecessary\n        // computing, we use the following approach: each element i\n        // divides the list into three: the preceding elements, the\n        // current element i, and the subsequent elements. For the first\n        // element, the list of preceding elements is empty. For element i,\n        // we compute the (k-1)-computations of the subsequent elements,\n        // join each with the element i, and store the joined to the set of\n        // computed k-combinations. We do not need to take the preceding\n        // elements into account, because they have already been the i:th\n        // element so they are already computed and stored. When the length\n        // of the subsequent list drops below (k-1), we cannot find any\n        // (k-1)-combs, hence the upper limit for the iteration:\n        combs = [];\n        for (i = 0; i < set.length - k + 1; i++) {\n            // head is a list that includes only our current element.\n            head = set.slice(i, i + 1);\n            // We take smaller combinations from the subsequent elements\n            tailcombs = Permutation.binomial(set.slice(i + 1), k - 1);\n            // For each (k-1)-combination we join it with the current\n            // and store it to the set of k-combinations.\n            for (j = 0; j < tailcombs.length; j++) {\n                combs.push(head.concat(tailcombs[j]));\n            }\n        }\n        return combs;\n    };\n    return Permutation;\n}());\nexports.Permutation = Permutation;\n","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Permutation_1 = require(\"../util/Permutation\");\nvar Logger_1 = require(\"../util/Logger\");\nvar tonal_1 = require(\"tonal\");\nvar tonal_2 = require(\"tonal\");\nvar tonal_3 = require(\"tonal\");\nvar tonal_4 = require(\"tonal\");\nvar util_1 = require(\"../util/util\");\nvar Harmony_1 = require(\"./Harmony\");\nvar Voicing = /** @class */ (function () {\n    function Voicing() {\n    }\n    /** Returns the next voicing that should follow the previously played voicing.\n    */\n    Voicing.getNextVoicing = function (chord, previousVoicing, options) {\n        if (options === void 0) { options = {}; }\n        var _a = __assign({ range: ['C3', 'C5'], rangeBorders: [3, 3], maxVoices: 4, forceDirection: null, maxDistance: 7, minBottomDistance: 3, minTopDistance: 2, noTopDrop: true, noTopAdd: true, noBottomDrop: false, noBottomAdd: false, idleChance: 1, logging: true }, options), maxVoices = _a.maxVoices, range = _a.range, forceDirection = _a.forceDirection, rangeBorders = _a.rangeBorders, sortChoices = _a.sortChoices, filterChoices = _a.filterChoices, noTopDrop = _a.noTopDrop, noTopAdd = _a.noTopAdd, noBottomDrop = _a.noBottomDrop, noBottomAdd = _a.noBottomAdd, idleChance = _a.idleChance, logging = _a.logging;\n        // make sure tonal can read the chord\n        chord = Harmony_1.Harmony.getTonalChord(chord);\n        if (chord === 'r') {\n            return null;\n        }\n        var combinations = Voicing.getAllVoicePermutations(chord, maxVoices, options);\n        var exit = function () {\n            var pick = [];\n            if (logging) {\n                Logger_1.Logger.logVoicing({ chord: chord, previousVoicing: previousVoicing, range: range, combinations: combinations, pick: pick });\n            }\n            return pick;\n        };\n        if (!combinations.length) {\n            return exit();\n        }\n        if (!previousVoicing || !previousVoicing.length) { // no previous chord\n            // filter out combinations that are out of range\n            combinations = combinations.filter(function (combination) {\n                var firstNote = Harmony_1.Harmony.getNearestNote(range[0], combination[0], 'up');\n                var pick = util_1.renderAbsoluteNotes(combination, tonal_2.Note.oct(firstNote));\n                return util_1.isInRange(pick[0], range) && util_1.isInRange(pick[pick.length - 1], range);\n            });\n            var firstPick = combinations[0];\n            var firstNoteInRange = Harmony_1.Harmony.getNearestNote(range[0], firstPick[0], 'up');\n            var pick_1 = util_1.renderAbsoluteNotes(firstPick, tonal_2.Note.oct(firstNoteInRange));\n            if (logging) {\n                Logger_1.Logger.logVoicing({ chord: chord, previousVoicing: previousVoicing, range: range, combinations: combinations, pick: pick_1 });\n            }\n            return pick_1;\n        }\n        var choices = Voicing.getAllChoices(combinations, previousVoicing, range)\n            .filter(function (choice) {\n            return (!noTopDrop || !choice.dropped.includes(choice.topNotes[0])) &&\n                (!noTopAdd || !choice.added.includes(choice.topNotes[1])) &&\n                (!noBottomDrop || !choice.dropped.includes(choice.bottomNotes[0])) &&\n                (!noBottomAdd || !choice.added.includes(choice.bottomNotes[1])) &&\n                (!filterChoices || filterChoices(choice)) &&\n                (choice.difference > 0 || Math.random() < idleChance);\n        })\n            .sort(sortChoices ?\n            function (a, b) { return sortChoices(a, b); } :\n            function (a, b) { return a.difference - b.difference; });\n        if (!choices.length) {\n            return exit();\n        }\n        var bestPick = choices[0].targets, choice;\n        var direction = Voicing.getDesiredDirection(previousVoicing, range, rangeBorders) || forceDirection;\n        if (!direction) {\n            var pick_2 = bestPick;\n            choice = choices[0];\n            if (logging) {\n                Logger_1.Logger.logVoicing({ chord: chord, previousVoicing: previousVoicing, range: range, combinations: combinations, pick: pick_2, direction: direction, bestPick: bestPick, choice: choice, choices: choices });\n            }\n            return pick_2;\n        }\n        // sort after movement instead of difference\n        choice = choices.sort(function (a, b) {\n            return Math.abs(a.movement) - Math.abs(b.movement);\n        }).find(function (choice) {\n            if (direction === 'up') {\n                return choice.movement >= 0;\n            }\n            return choice.movement <= 0;\n        });\n        if (!choice) { // keep hanging in the corner of the range..\n            choice = choices[0];\n        }\n        var pick = choice.targets;\n        if (logging) {\n            Logger_1.Logger.logVoicing({ chord: chord, previousVoicing: previousVoicing, range: range, combinations: combinations, pick: pick, direction: direction, bestPick: bestPick, choice: choice, choices: choices });\n        }\n        return pick;\n    };\n    /** Computes all valid voice permutations for a given chord and voice number.\n     * Runs getVoicePermutations for each possible selection of notes.\n     */\n    Voicing.getAllVoicePermutations = function (chord, length, voicingOptions) {\n        if (voicingOptions === void 0) { voicingOptions = {}; }\n        var root = Harmony_1.Harmony.getBassNote(chord, true);\n        var omitNotes = voicingOptions.omitNotes;\n        return Voicing.getAllNoteSelections(chord, length, omitNotes)\n            .reduce(function (combinations, combination) {\n            return combinations.concat(Voicing.getVoicePermutations(combination, __assign({}, voicingOptions, { root: root })));\n        }, []);\n    };\n    /** Get all permutations of the given notes that would make a good voicing. */\n    Voicing.getVoicePermutations = function (notes, options) {\n        if (options === void 0) { options = {}; }\n        if (notes.length === 1) {\n            return [notes];\n        }\n        var validator = options.validatePermutation || (function (path, next, array) { return true; });\n        return Permutation_1.Permutation.permutateElements(notes, Permutation_1.Permutation.combineValidators(validator, Voicing.voicingValidator(options)));\n    };\n    /** Configurable Validator that sorts out note combinations with untasty intervals.  */\n    Voicing.voicingValidator = function (options) {\n        options = __assign({ maxDistance: 6, minDistance: 1, minBottomDistance: 3, minTopDistance: 2 }, options);\n        return function (path, next, array) {\n            return Permutation_1.Permutation.combineValidators(Voicing.notesAtPositionValidator(options.topNotes, path.length + array.length - 1), Voicing.notesAtPositionValidator(options.bottomNotes, 0), Voicing.degreesAtPositionValidator(options.topDegrees, path.length + array.length - 1, options.root), Voicing.degreesAtPositionValidator(options.bottomDegrees, 0, options.root), Voicing.validateInterval(function (interval) { return tonal_4.Interval.semitones(interval) <= options.maxDistance; }), Voicing.validateInterval(function (interval, _a) {\n                var path = _a.path, array = _a.array;\n                return array.length === 1 || path.length === 1 || tonal_4.Interval.semitones(interval) >= options.minDistance;\n            }), Voicing.validateInterval(function (interval, _a) {\n                var array = _a.array;\n                return array.length !== 1 || tonal_4.Interval.semitones(interval) >= options.minTopDistance;\n            }), Voicing.validateInterval(function (interval, _a) {\n                var path = _a.path;\n                return path.length !== 1 || tonal_4.Interval.semitones(interval) >= options.minBottomDistance;\n            }))(path, next, array);\n        };\n    };\n    /** Validates the interval to the next note. You can write your own logic inside the validate fn. */\n    Voicing.validateInterval = function (validate) {\n        return function (path, next, array) {\n            if (!path.length) {\n                return true;\n            }\n            var interval = tonal_3.Distance.interval(path[path.length - 1], next) + '';\n            return validate(interval, { path: path, next: next, array: array });\n        };\n    };\n    /** Returns all possible combinations of required and optional notes for a given chord and desired length.\n     * If the voices number is higher than the required notes of the chord, the rest number will be permutated from the optional notes */\n    Voicing.getAllNoteSelections = function (chord, voices, omitNotes) {\n        if (voices === void 0) { voices = 2; }\n        if (omitNotes === void 0) { omitNotes = []; }\n        var required = Voicing.getRequiredNotes(chord, voices);\n        required = Voicing.withoutPitches(omitNotes, required);\n        if (voices === 1) {\n            return required.map(function (note) { return [note]; });\n        }\n        var fill = voices - required.length;\n        if (fill === 0) {\n            return [required];\n        }\n        if (fill < 0) { // required notes are enough\n            return Permutation_1.Permutation.binomial(required, voices);\n        }\n        var optional = Voicing.getOptionalNotes(chord, voices, required);\n        optional = Voicing.withoutPitches(omitNotes, optional);\n        if (fill >= optional.length) {\n            return [required.concat(optional)];\n        }\n        return Permutation_1.Permutation.binomial(optional, fill)\n            .map(function (selection) { return required.concat(selection); });\n    };\n    Voicing.withoutPitches = function (pitches, voicing) {\n        if (pitches === void 0) { pitches = []; }\n        return voicing.filter(function (r) { return !pitches.find(function (o) { return Harmony_1.Harmony.hasSamePitch(r, o); }); });\n    };\n    /** Get available tensions for a given chord. Omits tensions that kill the chord quality */\n    Voicing.getAvailableTensions = function (chord) {\n        chord = Harmony_1.Harmony.getTonalChord(chord);\n        var notes = tonal_1.Chord.notes(chord);\n        if (util_1.isDominantChord(chord)) {\n            return Voicing.getAllTensions(notes[0])\n                // filter out tensions that are part of the chord\n                .filter(function (note) { return !notes.find(function (n) { return util_1.semitoneDistance(notes[0], note) === util_1.semitoneDistance(notes[0], n); }); })\n                // filter out tensions that are a semitone above the 3 (if exists)\n                .filter(function (note) { return util_1.chordHasIntervals(chord, ['3!']) || util_1.semitoneDistance(util_1.getDegreeInChord(3, chord), note) > 1; })\n                // filter out tensions that are a semitone above the 4 (if exists => sus)\n                .filter(function (note) { return !util_1.chordHasIntervals(chord, ['4P']) || util_1.semitoneDistance(util_1.getDegreeInChord(4, chord), note) > 1; })\n                // filter out tensions that are a semitone above the 7\n                .filter(function (note) { return util_1.semitoneDistance(util_1.getDegreeInChord(7, chord), note) > 1; });\n        }\n        return notes.slice(0, 4)\n            // notes less than 3 semitones away from root are omitted (tensions 2M above would be in next octave)\n            .filter(function (note) { return note === notes[0] || util_1.semitoneDistance(note, notes[0]) > 2; })\n            // all tensions are a major second above a chord note\n            .map(function (note) { return tonal_3.Distance.transpose(note, '2M'); })\n            // tensions 2 semiontes below root are flat 7 => changes chord quality\n            .filter(function (note) { return util_1.semitoneDistance(note, notes[0]) !== 2; });\n        // omit tensions that end up on a chord note again?\n    };\n    /** Returns all Tensions that could be in any chord */\n    Voicing.getAllTensions = function (root) {\n        return ['b9', '9', '#9', '3', '11', '#11', 'b13', '13', '7']\n            .map(function (step) { return util_1.getIntervalFromStep(step); })\n            .map(function (interval) { return tonal_3.Distance.transpose(root, interval); });\n    };\n    /** Returns all notes that are required to outline a chord */\n    Voicing.getRequiredNotes = function (chord, voices) {\n        if (voices === void 0) { voices = 2; }\n        chord = Harmony_1.Harmony.getTonalChord(chord);\n        var notes = tonal_1.Chord.notes(chord);\n        var intervals = tonal_1.Chord.intervals(chord);\n        var requiredSteps = [3, 7, 'b5', 6].slice(0, Math.max(voices, 2)); // order is important\n        if (!util_1.hasDegree(3, intervals)) {\n            requiredSteps.push(4); // fixes m6 chords\n        }\n        var required = requiredSteps.reduce(function (req, degree) {\n            if (util_1.hasDegree(degree, intervals)) {\n                req.push(util_1.getDegreeInChord(degree, chord));\n            }\n            return req;\n        }, []);\n        if (voices > 3 && !required.includes(notes[notes.length - 1])) {\n            required.push(notes[notes.length - 1]);\n        }\n        return required;\n    };\n    /** Returns all notes that are not required */\n    Voicing.getOptionalNotes = function (chord, voices, required) {\n        chord = Harmony_1.Harmony.getTonalChord(chord);\n        var notes = tonal_1.Chord.notes(chord);\n        required = required || Voicing.getRequiredNotes(chord, voices);\n        return notes.filter(function (note) { return !required.includes(note); });\n    };\n    /** Returns all possible note choices for the given combinations.\n     * Takes the bottom note of the previous voicing and computes the minimal intervals up and down to the next bottom note.\n     */\n    Voicing.getAllChoices = function (combinations, previousVoicing, range) {\n        var lastPitches = previousVoicing.map(function (note) { return tonal_2.Note.pc(note); });\n        return combinations\n            .map(function (combination) {\n            var bottomInterval = tonal_3.Distance.interval(lastPitches[0], combination[0]);\n            var bottomNotes = [\n                tonal_3.Distance.transpose(previousVoicing[0], Harmony_1.Harmony.minInterval(bottomInterval, 'down')),\n                tonal_3.Distance.transpose(previousVoicing[0], Harmony_1.Harmony.minInterval(bottomInterval, 'up')),\n            ];\n            if (bottomNotes[0] === bottomNotes[1]) {\n                bottomNotes = [bottomNotes[0]];\n            }\n            return { combination: combination, bottomNotes: bottomNotes };\n        })\n            .reduce(function (all, _a) {\n            var combination = _a.combination, bottomNotes = _a.bottomNotes;\n            return all.concat(bottomNotes.map(function (bottomNote) { return util_1.renderAbsoluteNotes(combination, tonal_2.Note.oct(bottomNote)); }));\n        }, [])\n            .filter(function (targets) {\n            return !range ||\n                util_1.isInRange(targets[0], range) &&\n                    util_1.isInRange(targets[targets.length - 1], range);\n        })\n            .reduce(function (all, targets) {\n            var leads = Voicing.voiceLeading(previousVoicing, targets);\n            return all.concat(leads);\n        }, []);\n    };\n    /** Analyzes all possible voice movements for all possible transitions. Handles inequal lengths */\n    Voicing.voiceLeading = function (origin, targets) {\n        // if same length > dont permutate\n        if (origin.length === targets.length) {\n            return Voicing.analyzeVoiceLeading(origin, targets);\n        }\n        var _a = [origin, targets].sort(function (a, b) { return b.length - a.length; }), more = _a[0], less = _a[1];\n        return Permutation_1.Permutation.binomial(more, less.length)\n            .map(function (selection) {\n            var _a, _b;\n            var from, to;\n            if (origin.length < targets.length) {\n                _a = [origin, selection], from = _a[0], to = _a[1];\n            }\n            else {\n                _b = [selection, targets], from = _b[0], to = _b[1];\n            }\n            return Voicing.analyzeVoiceLeading(from, to, origin, targets);\n        });\n    };\n    /** Analyzed the voice leading for the movement from > to.\n     * Origin and targets needs to be passed if the voice transition over unequal lengths\n     */\n    Voicing.analyzeVoiceLeading = function (from, to, origin, targets) {\n        var _a;\n        _a = [origin || from, targets || to], origin = _a[0], targets = _a[1];\n        var intervals = Voicing.voicingIntervals(from, to, false)\n            .map(function (interval) { return Harmony_1.Harmony.fixInterval(interval, false); });\n        /** Interval qualities */\n        var degrees = intervals.map(function (i) { return util_1.getDegreeFromInterval(i); });\n        /** Voices that did not move */\n        var oblique = from.filter(function (n, i) { return to.find(function (note) { return Harmony_1.Harmony.hasSamePitch(n, note); }); });\n        /** abs sum of semitones movements of voices */\n        var difference = util_1.semitoneDifference(intervals);\n        /** relative sum of semitone movements */\n        var movement = util_1.semitoneMovement(intervals);\n        /** voice differences did not cancel each other out > moved in same direction */\n        var similar = Math.abs(movement) === Math.abs(difference);\n        /** moves parallel if all interval qualities the same and in the same direction */\n        var parallel = difference > 0 && similar && degrees.reduce(function (match, degree, index) {\n            return match && (index === 0 || degrees[index - 1] === degree);\n        }, true);\n        // find out which notes have been dropped / added\n        var dropped = [], added = [];\n        if (origin.length < targets.length) {\n            added = targets.filter(function (n) { return !to.includes(n); });\n        }\n        else {\n            dropped = origin.filter(function (n) { return !from.includes(n); });\n        }\n        return {\n            from: from,\n            to: to,\n            origin: origin,\n            targets: targets,\n            intervals: intervals,\n            difference: difference,\n            movement: movement,\n            bottomInterval: intervals[0],\n            topInterval: intervals[intervals.length - 1],\n            topNotes: [origin[origin.length - 1], targets[targets.length - 1]],\n            bottomNotes: [origin[0], targets[0]],\n            similar: similar,\n            contrary: !similar,\n            parallel: parallel,\n            oblique: oblique,\n            degrees: degrees,\n            added: added,\n            dropped: dropped,\n        };\n    };\n    /** Returns true if the given note is contained in the given voicing. */\n    Voicing.containsPitch = function (note, voicing, enharmonic) {\n        if (enharmonic === void 0) { enharmonic = true; }\n        if (!enharmonic) {\n            return voicing.includes(note);\n        }\n        return !!voicing.find(function (n) { return Harmony_1.Harmony.hasSamePitch(note, n); });\n    };\n    /** Returns the intervals between the given chord voicings.\n     * Can be passed pitch classes or absolute notes.\n     * The two voicings should have the same length. */\n    Voicing.voicingIntervals = function (chordA, chordB, min, direction) {\n        if (min === void 0) { min = true; }\n        if (chordA.length !== chordB.length) {\n            // console.log('voicingIntervals: not the same length..');\n        }\n        var intervals = chordA.map(function (n, i) {\n            var interval = tonal_3.Distance.interval(n, chordB[i]);\n            if (min === false) {\n                return interval;\n            }\n            if (util_1.isPitchClass(n) && util_1.isPitchClass(chordB[i])) {\n                return Harmony_1.Harmony.minInterval(interval, direction);\n            }\n            return interval;\n        });\n        return intervals;\n    };\n    /** Validates the current permutation to have a note at a certain position (array index) */\n    Voicing.notesAtPositionValidator = function (notes, position) {\n        if (notes === void 0) { notes = []; }\n        return function (selected, note, remaining) {\n            return !notes.length || selected.length !== position || Voicing.containsPitch(note, notes) /*  notes.includes(note) */;\n        };\n    };\n    /** Validates the current permutation to have a note at a certain position (array index) */\n    Voicing.degreesAtPositionValidator = function (degrees, position, root) {\n        if (degrees === void 0) { degrees = []; }\n        return function (selected, note, remaining) {\n            if (!degrees.length || !root || selected.length !== position) {\n                return true;\n            }\n            var degree = util_1.getDegreeFromInterval(tonal_3.Distance.interval(root, note));\n            return degrees.includes(degree);\n        };\n    };\n    /** Returns true if the given voicing contains its root */\n    Voicing.hasTonic = function (voicing, chord) {\n        var tokens = tonal_1.Chord.tokenize(Harmony_1.Harmony.getTonalChord(chord));\n        return voicing.map(function (n) { return tonal_2.Note.pc(n); }).includes(tokens[0]);\n    };\n    /** Returns the best direction to move for a given voicing in a range.\n     * Outputs a direction as soon as the semitone distance of one of the outer notes is below the given threshold\n     */\n    Voicing.getDesiredDirection = function (voicing, range, thresholds) {\n        if (thresholds === void 0) { thresholds = [3, 3]; }\n        var distances = util_1.getDistancesToRangeEnds([voicing[0], voicing[voicing.length - 1]], range);\n        if (distances[0] < thresholds[0] && distances[1] < thresholds[1]) {\n            console.error('range is too small to fit the comfy zone');\n            return;\n        }\n        if (distances[0] < thresholds[0]) {\n            return 'up';\n        }\n        if (distances[1] < thresholds[1]) {\n            return 'down';\n        }\n    };\n    return Voicing;\n}());\nexports.Voicing = Voicing;\n/**\n *\n\n\n\n    static getPossibleVoicings(chord, voices = 4) {\n        const required = getRequiredNotes(chord);\n        const optional = getOptionalNotes(chord);\n        const tensions = getAvailableTensions(chord);\n        return { required, optional, tensions };\n    }\n    static voicingDifference(chordA, chordB, min = true) {\n        return semitoneDifference(Voicing.voicingIntervals(chordA, chordB, min));\n    }\n\n    static voicingMovement(chordA, chordB, min = true, direction?: intervalDirection) {\n        return semitoneMovement(Voicing.voicingIntervals(chordA, chordB, min, direction));\n    }\n\n    static bestVoiceLeading(chordA, chordB, sortFn?) {\n        sortFn = sortFn || ((a, b) => a.difference - b.difference);\n        const voices = Voicing.voiceLeading(chordA, chordB)\n            .sort((best, current) => {\n                return sortFn(best, current);\n            }, null);\n        return voices[0];\n    }\n\n    static minVoiceMovement(chordA, chordB) {\n        [chordA, chordB] = [chordA, chordB].sort((a, b) => b.length - a.length);\n        const picks = Permutation.binomial(chordA, chordB.length);\n        return picks.reduce((min, current) => {\n            const diff = Voicing.voicingMovement(current, chordB, false);\n            if (Math.abs(diff) < Math.abs(min)) {\n                return diff;\n            }\n            return min;\n        }, 100);\n    }\n\n    static getVoices(chord, voices = 4, rootless = false, tension = 1) {\n        // THE PROBLEM: TENSION MUST BE CHOSEN WHEN SELECTING THE OPTIMAL VOICING!\n        chord = Harmony.getTonalChord(chord);\n        const tokens = Chord.tokenize(chord);\n        const required = Voicing.getRequiredNotes(chord);\n        let optional = Voicing.getOptionalNotes(chord, required);\n        let choices = [].concat(required);\n        const remaining = () => voices - choices.length;\n        if (tension > 0) {\n            choices = choices.concat(Voicing.getAvailableTensions(chord).slice(0, tension));\n        }\n        if (remaining() > 0) {\n            choices = choices.concat(optional);\n        }\n        if (remaining() < 0 && rootless) {\n            choices = choices.filter(n => n !== tokens[0]);\n        }\n        if (remaining() > 0) {\n            // console.warn(`${remaining} notes must be doubled!!!`);\n            choices = choices.concat(required, optional).slice(0, voices);\n        }\n        return choices.slice(0, voices);\n    }\n */ \n","/*!\n\n diff v4.0.1\n\nSoftware License Agreement (BSD License)\n\nCopyright (c) 2009-2015, Kevin Decker <kpdecker@gmail.com>\n\nAll rights reserved.\n\nRedistribution and use of this software in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above\n  copyright notice, this list of conditions and the\n  following disclaimer.\n\n* Redistributions in binary form must reproduce the above\n  copyright notice, this list of conditions and the\n  following disclaimer in the documentation and/or other\n  materials provided with the distribution.\n\n* Neither the name of Kevin Decker nor the names of its\n  contributors may be used to endorse or promote products\n  derived from this software without specific prior\n  written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR\nIMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\nFITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR\nCONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER\nIN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\nOF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n@license\n*/\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = global || self, factory(global.Diff = {}));\n}(this, function (exports) { 'use strict';\n\n  function Diff() {}\n  Diff.prototype = {\n    diff: function diff(oldString, newString) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var callback = options.callback;\n\n      if (typeof options === 'function') {\n        callback = options;\n        options = {};\n      }\n\n      this.options = options;\n      var self = this;\n\n      function done(value) {\n        if (callback) {\n          setTimeout(function () {\n            callback(undefined, value);\n          }, 0);\n          return true;\n        } else {\n          return value;\n        }\n      } // Allow subclasses to massage the input prior to running\n\n\n      oldString = this.castInput(oldString);\n      newString = this.castInput(newString);\n      oldString = this.removeEmpty(this.tokenize(oldString));\n      newString = this.removeEmpty(this.tokenize(newString));\n      var newLen = newString.length,\n          oldLen = oldString.length;\n      var editLength = 1;\n      var maxEditLength = newLen + oldLen;\n      var bestPath = [{\n        newPos: -1,\n        components: []\n      }]; // Seed editLength = 0, i.e. the content starts with the same values\n\n      var oldPos = this.extractCommon(bestPath[0], newString, oldString, 0);\n\n      if (bestPath[0].newPos + 1 >= newLen && oldPos + 1 >= oldLen) {\n        // Identity per the equality and tokenizer\n        return done([{\n          value: this.join(newString),\n          count: newString.length\n        }]);\n      } // Main worker method. checks all permutations of a given edit length for acceptance.\n\n\n      function execEditLength() {\n        for (var diagonalPath = -1 * editLength; diagonalPath <= editLength; diagonalPath += 2) {\n          var basePath = void 0;\n\n          var addPath = bestPath[diagonalPath - 1],\n              removePath = bestPath[diagonalPath + 1],\n              _oldPos = (removePath ? removePath.newPos : 0) - diagonalPath;\n\n          if (addPath) {\n            // No one else is going to attempt to use this value, clear it\n            bestPath[diagonalPath - 1] = undefined;\n          }\n\n          var canAdd = addPath && addPath.newPos + 1 < newLen,\n              canRemove = removePath && 0 <= _oldPos && _oldPos < oldLen;\n\n          if (!canAdd && !canRemove) {\n            // If this path is a terminal then prune\n            bestPath[diagonalPath] = undefined;\n            continue;\n          } // Select the diagonal that we want to branch from. We select the prior\n          // path whose position in the new string is the farthest from the origin\n          // and does not pass the bounds of the diff graph\n\n\n          if (!canAdd || canRemove && addPath.newPos < removePath.newPos) {\n            basePath = clonePath(removePath);\n            self.pushComponent(basePath.components, undefined, true);\n          } else {\n            basePath = addPath; // No need to clone, we've pulled it from the list\n\n            basePath.newPos++;\n            self.pushComponent(basePath.components, true, undefined);\n          }\n\n          _oldPos = self.extractCommon(basePath, newString, oldString, diagonalPath); // If we have hit the end of both strings, then we are done\n\n          if (basePath.newPos + 1 >= newLen && _oldPos + 1 >= oldLen) {\n            return done(buildValues(self, basePath.components, newString, oldString, self.useLongestToken));\n          } else {\n            // Otherwise track this path as a potential candidate and continue.\n            bestPath[diagonalPath] = basePath;\n          }\n        }\n\n        editLength++;\n      } // Performs the length of edit iteration. Is a bit fugly as this has to support the\n      // sync and async mode which is never fun. Loops over execEditLength until a value\n      // is produced.\n\n\n      if (callback) {\n        (function exec() {\n          setTimeout(function () {\n            // This should not happen, but we want to be safe.\n\n            /* istanbul ignore next */\n            if (editLength > maxEditLength) {\n              return callback();\n            }\n\n            if (!execEditLength()) {\n              exec();\n            }\n          }, 0);\n        })();\n      } else {\n        while (editLength <= maxEditLength) {\n          var ret = execEditLength();\n\n          if (ret) {\n            return ret;\n          }\n        }\n      }\n    },\n    pushComponent: function pushComponent(components, added, removed) {\n      var last = components[components.length - 1];\n\n      if (last && last.added === added && last.removed === removed) {\n        // We need to clone here as the component clone operation is just\n        // as shallow array clone\n        components[components.length - 1] = {\n          count: last.count + 1,\n          added: added,\n          removed: removed\n        };\n      } else {\n        components.push({\n          count: 1,\n          added: added,\n          removed: removed\n        });\n      }\n    },\n    extractCommon: function extractCommon(basePath, newString, oldString, diagonalPath) {\n      var newLen = newString.length,\n          oldLen = oldString.length,\n          newPos = basePath.newPos,\n          oldPos = newPos - diagonalPath,\n          commonCount = 0;\n\n      while (newPos + 1 < newLen && oldPos + 1 < oldLen && this.equals(newString[newPos + 1], oldString[oldPos + 1])) {\n        newPos++;\n        oldPos++;\n        commonCount++;\n      }\n\n      if (commonCount) {\n        basePath.components.push({\n          count: commonCount\n        });\n      }\n\n      basePath.newPos = newPos;\n      return oldPos;\n    },\n    equals: function equals(left, right) {\n      if (this.options.comparator) {\n        return this.options.comparator(left, right);\n      } else {\n        return left === right || this.options.ignoreCase && left.toLowerCase() === right.toLowerCase();\n      }\n    },\n    removeEmpty: function removeEmpty(array) {\n      var ret = [];\n\n      for (var i = 0; i < array.length; i++) {\n        if (array[i]) {\n          ret.push(array[i]);\n        }\n      }\n\n      return ret;\n    },\n    castInput: function castInput(value) {\n      return value;\n    },\n    tokenize: function tokenize(value) {\n      return value.split('');\n    },\n    join: function join(chars) {\n      return chars.join('');\n    }\n  };\n\n  function buildValues(diff, components, newString, oldString, useLongestToken) {\n    var componentPos = 0,\n        componentLen = components.length,\n        newPos = 0,\n        oldPos = 0;\n\n    for (; componentPos < componentLen; componentPos++) {\n      var component = components[componentPos];\n\n      if (!component.removed) {\n        if (!component.added && useLongestToken) {\n          var value = newString.slice(newPos, newPos + component.count);\n          value = value.map(function (value, i) {\n            var oldValue = oldString[oldPos + i];\n            return oldValue.length > value.length ? oldValue : value;\n          });\n          component.value = diff.join(value);\n        } else {\n          component.value = diff.join(newString.slice(newPos, newPos + component.count));\n        }\n\n        newPos += component.count; // Common case\n\n        if (!component.added) {\n          oldPos += component.count;\n        }\n      } else {\n        component.value = diff.join(oldString.slice(oldPos, oldPos + component.count));\n        oldPos += component.count; // Reverse add and remove so removes are output first to match common convention\n        // The diffing algorithm is tied to add then remove output and this is the simplest\n        // route to get the desired output with minimal overhead.\n\n        if (componentPos && components[componentPos - 1].added) {\n          var tmp = components[componentPos - 1];\n          components[componentPos - 1] = components[componentPos];\n          components[componentPos] = tmp;\n        }\n      }\n    } // Special case handle for when one terminal is ignored (i.e. whitespace).\n    // For this case we merge the terminal into the prior string and drop the change.\n    // This is only available for string mode.\n\n\n    var lastComponent = components[componentLen - 1];\n\n    if (componentLen > 1 && typeof lastComponent.value === 'string' && (lastComponent.added || lastComponent.removed) && diff.equals('', lastComponent.value)) {\n      components[componentLen - 2].value += lastComponent.value;\n      components.pop();\n    }\n\n    return components;\n  }\n\n  function clonePath(path) {\n    return {\n      newPos: path.newPos,\n      components: path.components.slice(0)\n    };\n  }\n\n  var characterDiff = new Diff();\n  function diffChars(oldStr, newStr, options) {\n    return characterDiff.diff(oldStr, newStr, options);\n  }\n\n  function generateOptions(options, defaults) {\n    if (typeof options === 'function') {\n      defaults.callback = options;\n    } else if (options) {\n      for (var name in options) {\n        /* istanbul ignore else */\n        if (options.hasOwnProperty(name)) {\n          defaults[name] = options[name];\n        }\n      }\n    }\n\n    return defaults;\n  }\n\n  //\n  // Ranges and exceptions:\n  // Latin-1 Supplement, 0080–00FF\n  //  - U+00D7  × Multiplication sign\n  //  - U+00F7  ÷ Division sign\n  // Latin Extended-A, 0100–017F\n  // Latin Extended-B, 0180–024F\n  // IPA Extensions, 0250–02AF\n  // Spacing Modifier Letters, 02B0–02FF\n  //  - U+02C7  ˇ &#711;  Caron\n  //  - U+02D8  ˘ &#728;  Breve\n  //  - U+02D9  ˙ &#729;  Dot Above\n  //  - U+02DA  ˚ &#730;  Ring Above\n  //  - U+02DB  ˛ &#731;  Ogonek\n  //  - U+02DC  ˜ &#732;  Small Tilde\n  //  - U+02DD  ˝ &#733;  Double Acute Accent\n  // Latin Extended Additional, 1E00–1EFF\n\n  var extendedWordChars = /^[A-Za-z\\xC0-\\u02C6\\u02C8-\\u02D7\\u02DE-\\u02FF\\u1E00-\\u1EFF]+$/;\n  var reWhitespace = /\\S/;\n  var wordDiff = new Diff();\n\n  wordDiff.equals = function (left, right) {\n    if (this.options.ignoreCase) {\n      left = left.toLowerCase();\n      right = right.toLowerCase();\n    }\n\n    return left === right || this.options.ignoreWhitespace && !reWhitespace.test(left) && !reWhitespace.test(right);\n  };\n\n  wordDiff.tokenize = function (value) {\n    var tokens = value.split(/(\\s+|[()[\\]{}'\"]|\\b)/); // Join the boundary splits that we do not consider to be boundaries. This is primarily the extended Latin character set.\n\n    for (var i = 0; i < tokens.length - 1; i++) {\n      // If we have an empty string in the next field and we have only word chars before and after, merge\n      if (!tokens[i + 1] && tokens[i + 2] && extendedWordChars.test(tokens[i]) && extendedWordChars.test(tokens[i + 2])) {\n        tokens[i] += tokens[i + 2];\n        tokens.splice(i + 1, 2);\n        i--;\n      }\n    }\n\n    return tokens;\n  };\n\n  function diffWords(oldStr, newStr, options) {\n    options = generateOptions(options, {\n      ignoreWhitespace: true\n    });\n    return wordDiff.diff(oldStr, newStr, options);\n  }\n  function diffWordsWithSpace(oldStr, newStr, options) {\n    return wordDiff.diff(oldStr, newStr, options);\n  }\n\n  var lineDiff = new Diff();\n\n  lineDiff.tokenize = function (value) {\n    var retLines = [],\n        linesAndNewlines = value.split(/(\\n|\\r\\n)/); // Ignore the final empty token that occurs if the string ends with a new line\n\n    if (!linesAndNewlines[linesAndNewlines.length - 1]) {\n      linesAndNewlines.pop();\n    } // Merge the content and line separators into single tokens\n\n\n    for (var i = 0; i < linesAndNewlines.length; i++) {\n      var line = linesAndNewlines[i];\n\n      if (i % 2 && !this.options.newlineIsToken) {\n        retLines[retLines.length - 1] += line;\n      } else {\n        if (this.options.ignoreWhitespace) {\n          line = line.trim();\n        }\n\n        retLines.push(line);\n      }\n    }\n\n    return retLines;\n  };\n\n  function diffLines(oldStr, newStr, callback) {\n    return lineDiff.diff(oldStr, newStr, callback);\n  }\n  function diffTrimmedLines(oldStr, newStr, callback) {\n    var options = generateOptions(callback, {\n      ignoreWhitespace: true\n    });\n    return lineDiff.diff(oldStr, newStr, options);\n  }\n\n  var sentenceDiff = new Diff();\n\n  sentenceDiff.tokenize = function (value) {\n    return value.split(/(\\S.+?[.!?])(?=\\s+|$)/);\n  };\n\n  function diffSentences(oldStr, newStr, callback) {\n    return sentenceDiff.diff(oldStr, newStr, callback);\n  }\n\n  var cssDiff = new Diff();\n\n  cssDiff.tokenize = function (value) {\n    return value.split(/([{}:;,]|\\s+)/);\n  };\n\n  function diffCss(oldStr, newStr, callback) {\n    return cssDiff.diff(oldStr, newStr, callback);\n  }\n\n  function _typeof(obj) {\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function (obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function (obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n\n    return _typeof(obj);\n  }\n\n  function _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n  }\n\n  function _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) {\n      for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n      return arr2;\n    }\n  }\n\n  function _iterableToArray(iter) {\n    if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n  }\n\n  function _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n  }\n\n  var objectPrototypeToString = Object.prototype.toString;\n  var jsonDiff = new Diff(); // Discriminate between two lines of pretty-printed, serialized JSON where one of them has a\n  // dangling comma and the other doesn't. Turns out including the dangling comma yields the nicest output:\n\n  jsonDiff.useLongestToken = true;\n  jsonDiff.tokenize = lineDiff.tokenize;\n\n  jsonDiff.castInput = function (value) {\n    var _this$options = this.options,\n        undefinedReplacement = _this$options.undefinedReplacement,\n        _this$options$stringi = _this$options.stringifyReplacer,\n        stringifyReplacer = _this$options$stringi === void 0 ? function (k, v) {\n      return typeof v === 'undefined' ? undefinedReplacement : v;\n    } : _this$options$stringi;\n    return typeof value === 'string' ? value : JSON.stringify(canonicalize(value, null, null, stringifyReplacer), stringifyReplacer, '  ');\n  };\n\n  jsonDiff.equals = function (left, right) {\n    return Diff.prototype.equals.call(jsonDiff, left.replace(/,([\\r\\n])/g, '$1'), right.replace(/,([\\r\\n])/g, '$1'));\n  };\n\n  function diffJson(oldObj, newObj, options) {\n    return jsonDiff.diff(oldObj, newObj, options);\n  } // This function handles the presence of circular references by bailing out when encountering an\n  // object that is already on the \"stack\" of items being processed. Accepts an optional replacer\n\n  function canonicalize(obj, stack, replacementStack, replacer, key) {\n    stack = stack || [];\n    replacementStack = replacementStack || [];\n\n    if (replacer) {\n      obj = replacer(key, obj);\n    }\n\n    var i;\n\n    for (i = 0; i < stack.length; i += 1) {\n      if (stack[i] === obj) {\n        return replacementStack[i];\n      }\n    }\n\n    var canonicalizedObj;\n\n    if ('[object Array]' === objectPrototypeToString.call(obj)) {\n      stack.push(obj);\n      canonicalizedObj = new Array(obj.length);\n      replacementStack.push(canonicalizedObj);\n\n      for (i = 0; i < obj.length; i += 1) {\n        canonicalizedObj[i] = canonicalize(obj[i], stack, replacementStack, replacer, key);\n      }\n\n      stack.pop();\n      replacementStack.pop();\n      return canonicalizedObj;\n    }\n\n    if (obj && obj.toJSON) {\n      obj = obj.toJSON();\n    }\n\n    if (_typeof(obj) === 'object' && obj !== null) {\n      stack.push(obj);\n      canonicalizedObj = {};\n      replacementStack.push(canonicalizedObj);\n\n      var sortedKeys = [],\n          _key;\n\n      for (_key in obj) {\n        /* istanbul ignore else */\n        if (obj.hasOwnProperty(_key)) {\n          sortedKeys.push(_key);\n        }\n      }\n\n      sortedKeys.sort();\n\n      for (i = 0; i < sortedKeys.length; i += 1) {\n        _key = sortedKeys[i];\n        canonicalizedObj[_key] = canonicalize(obj[_key], stack, replacementStack, replacer, _key);\n      }\n\n      stack.pop();\n      replacementStack.pop();\n    } else {\n      canonicalizedObj = obj;\n    }\n\n    return canonicalizedObj;\n  }\n\n  var arrayDiff = new Diff();\n\n  arrayDiff.tokenize = function (value) {\n    return value.slice();\n  };\n\n  arrayDiff.join = arrayDiff.removeEmpty = function (value) {\n    return value;\n  };\n\n  function diffArrays(oldArr, newArr, callback) {\n    return arrayDiff.diff(oldArr, newArr, callback);\n  }\n\n  function parsePatch(uniDiff) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var diffstr = uniDiff.split(/\\r\\n|[\\n\\v\\f\\r\\x85]/),\n        delimiters = uniDiff.match(/\\r\\n|[\\n\\v\\f\\r\\x85]/g) || [],\n        list = [],\n        i = 0;\n\n    function parseIndex() {\n      var index = {};\n      list.push(index); // Parse diff metadata\n\n      while (i < diffstr.length) {\n        var line = diffstr[i]; // File header found, end parsing diff metadata\n\n        if (/^(\\-\\-\\-|\\+\\+\\+|@@)\\s/.test(line)) {\n          break;\n        } // Diff index\n\n\n        var header = /^(?:Index:|diff(?: -r \\w+)+)\\s+(.+?)\\s*$/.exec(line);\n\n        if (header) {\n          index.index = header[1];\n        }\n\n        i++;\n      } // Parse file headers if they are defined. Unified diff requires them, but\n      // there's no technical issues to have an isolated hunk without file header\n\n\n      parseFileHeader(index);\n      parseFileHeader(index); // Parse hunks\n\n      index.hunks = [];\n\n      while (i < diffstr.length) {\n        var _line = diffstr[i];\n\n        if (/^(Index:|diff|\\-\\-\\-|\\+\\+\\+)\\s/.test(_line)) {\n          break;\n        } else if (/^@@/.test(_line)) {\n          index.hunks.push(parseHunk());\n        } else if (_line && options.strict) {\n          // Ignore unexpected content unless in strict mode\n          throw new Error('Unknown line ' + (i + 1) + ' ' + JSON.stringify(_line));\n        } else {\n          i++;\n        }\n      }\n    } // Parses the --- and +++ headers, if none are found, no lines\n    // are consumed.\n\n\n    function parseFileHeader(index) {\n      var fileHeader = /^(---|\\+\\+\\+)\\s+(.*)$/.exec(diffstr[i]);\n\n      if (fileHeader) {\n        var keyPrefix = fileHeader[1] === '---' ? 'old' : 'new';\n        var data = fileHeader[2].split('\\t', 2);\n        var fileName = data[0].replace(/\\\\\\\\/g, '\\\\');\n\n        if (/^\".*\"$/.test(fileName)) {\n          fileName = fileName.substr(1, fileName.length - 2);\n        }\n\n        index[keyPrefix + 'FileName'] = fileName;\n        index[keyPrefix + 'Header'] = (data[1] || '').trim();\n        i++;\n      }\n    } // Parses a hunk\n    // This assumes that we are at the start of a hunk.\n\n\n    function parseHunk() {\n      var chunkHeaderIndex = i,\n          chunkHeaderLine = diffstr[i++],\n          chunkHeader = chunkHeaderLine.split(/@@ -(\\d+)(?:,(\\d+))? \\+(\\d+)(?:,(\\d+))? @@/);\n      var hunk = {\n        oldStart: +chunkHeader[1],\n        oldLines: +chunkHeader[2] || 1,\n        newStart: +chunkHeader[3],\n        newLines: +chunkHeader[4] || 1,\n        lines: [],\n        linedelimiters: []\n      };\n      var addCount = 0,\n          removeCount = 0;\n\n      for (; i < diffstr.length; i++) {\n        // Lines starting with '---' could be mistaken for the \"remove line\" operation\n        // But they could be the header for the next file. Therefore prune such cases out.\n        if (diffstr[i].indexOf('--- ') === 0 && i + 2 < diffstr.length && diffstr[i + 1].indexOf('+++ ') === 0 && diffstr[i + 2].indexOf('@@') === 0) {\n          break;\n        }\n\n        var operation = diffstr[i].length == 0 && i != diffstr.length - 1 ? ' ' : diffstr[i][0];\n\n        if (operation === '+' || operation === '-' || operation === ' ' || operation === '\\\\') {\n          hunk.lines.push(diffstr[i]);\n          hunk.linedelimiters.push(delimiters[i] || '\\n');\n\n          if (operation === '+') {\n            addCount++;\n          } else if (operation === '-') {\n            removeCount++;\n          } else if (operation === ' ') {\n            addCount++;\n            removeCount++;\n          }\n        } else {\n          break;\n        }\n      } // Handle the empty block count case\n\n\n      if (!addCount && hunk.newLines === 1) {\n        hunk.newLines = 0;\n      }\n\n      if (!removeCount && hunk.oldLines === 1) {\n        hunk.oldLines = 0;\n      } // Perform optional sanity checking\n\n\n      if (options.strict) {\n        if (addCount !== hunk.newLines) {\n          throw new Error('Added line count did not match for hunk at line ' + (chunkHeaderIndex + 1));\n        }\n\n        if (removeCount !== hunk.oldLines) {\n          throw new Error('Removed line count did not match for hunk at line ' + (chunkHeaderIndex + 1));\n        }\n      }\n\n      return hunk;\n    }\n\n    while (i < diffstr.length) {\n      parseIndex();\n    }\n\n    return list;\n  }\n\n  // Iterator that traverses in the range of [min, max], stepping\n  // by distance from a given start position. I.e. for [0, 4], with\n  // start of 2, this will iterate 2, 3, 1, 4, 0.\n  function distanceIterator (start, minLine, maxLine) {\n    var wantForward = true,\n        backwardExhausted = false,\n        forwardExhausted = false,\n        localOffset = 1;\n    return function iterator() {\n      if (wantForward && !forwardExhausted) {\n        if (backwardExhausted) {\n          localOffset++;\n        } else {\n          wantForward = false;\n        } // Check if trying to fit beyond text length, and if not, check it fits\n        // after offset location (or desired location on first iteration)\n\n\n        if (start + localOffset <= maxLine) {\n          return localOffset;\n        }\n\n        forwardExhausted = true;\n      }\n\n      if (!backwardExhausted) {\n        if (!forwardExhausted) {\n          wantForward = true;\n        } // Check if trying to fit before text beginning, and if not, check it fits\n        // before offset location\n\n\n        if (minLine <= start - localOffset) {\n          return -localOffset++;\n        }\n\n        backwardExhausted = true;\n        return iterator();\n      } // We tried to fit hunk before text beginning and beyond text length, then\n      // hunk can't fit on the text. Return undefined\n\n    };\n  }\n\n  function applyPatch(source, uniDiff) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    if (typeof uniDiff === 'string') {\n      uniDiff = parsePatch(uniDiff);\n    }\n\n    if (Array.isArray(uniDiff)) {\n      if (uniDiff.length > 1) {\n        throw new Error('applyPatch only works with a single input.');\n      }\n\n      uniDiff = uniDiff[0];\n    } // Apply the diff to the input\n\n\n    var lines = source.split(/\\r\\n|[\\n\\v\\f\\r\\x85]/),\n        delimiters = source.match(/\\r\\n|[\\n\\v\\f\\r\\x85]/g) || [],\n        hunks = uniDiff.hunks,\n        compareLine = options.compareLine || function (lineNumber, line, operation, patchContent) {\n      return line === patchContent;\n    },\n        errorCount = 0,\n        fuzzFactor = options.fuzzFactor || 0,\n        minLine = 0,\n        offset = 0,\n        removeEOFNL,\n        addEOFNL;\n    /**\n     * Checks if the hunk exactly fits on the provided location\n     */\n\n\n    function hunkFits(hunk, toPos) {\n      for (var j = 0; j < hunk.lines.length; j++) {\n        var line = hunk.lines[j],\n            operation = line.length > 0 ? line[0] : ' ',\n            content = line.length > 0 ? line.substr(1) : line;\n\n        if (operation === ' ' || operation === '-') {\n          // Context sanity check\n          if (!compareLine(toPos + 1, lines[toPos], operation, content)) {\n            errorCount++;\n\n            if (errorCount > fuzzFactor) {\n              return false;\n            }\n          }\n\n          toPos++;\n        }\n      }\n\n      return true;\n    } // Search best fit offsets for each hunk based on the previous ones\n\n\n    for (var i = 0; i < hunks.length; i++) {\n      var hunk = hunks[i],\n          maxLine = lines.length - hunk.oldLines,\n          localOffset = 0,\n          toPos = offset + hunk.oldStart - 1;\n      var iterator = distanceIterator(toPos, minLine, maxLine);\n\n      for (; localOffset !== undefined; localOffset = iterator()) {\n        if (hunkFits(hunk, toPos + localOffset)) {\n          hunk.offset = offset += localOffset;\n          break;\n        }\n      }\n\n      if (localOffset === undefined) {\n        return false;\n      } // Set lower text limit to end of the current hunk, so next ones don't try\n      // to fit over already patched text\n\n\n      minLine = hunk.offset + hunk.oldStart + hunk.oldLines;\n    } // Apply patch hunks\n\n\n    var diffOffset = 0;\n\n    for (var _i = 0; _i < hunks.length; _i++) {\n      var _hunk = hunks[_i],\n          _toPos = _hunk.oldStart + _hunk.offset + diffOffset - 1;\n\n      diffOffset += _hunk.newLines - _hunk.oldLines;\n\n      if (_toPos < 0) {\n        // Creating a new file\n        _toPos = 0;\n      }\n\n      for (var j = 0; j < _hunk.lines.length; j++) {\n        var line = _hunk.lines[j],\n            operation = line.length > 0 ? line[0] : ' ',\n            content = line.length > 0 ? line.substr(1) : line,\n            delimiter = _hunk.linedelimiters[j];\n\n        if (operation === ' ') {\n          _toPos++;\n        } else if (operation === '-') {\n          lines.splice(_toPos, 1);\n          delimiters.splice(_toPos, 1);\n          /* istanbul ignore else */\n        } else if (operation === '+') {\n          lines.splice(_toPos, 0, content);\n          delimiters.splice(_toPos, 0, delimiter);\n          _toPos++;\n        } else if (operation === '\\\\') {\n          var previousOperation = _hunk.lines[j - 1] ? _hunk.lines[j - 1][0] : null;\n\n          if (previousOperation === '+') {\n            removeEOFNL = true;\n          } else if (previousOperation === '-') {\n            addEOFNL = true;\n          }\n        }\n      }\n    } // Handle EOFNL insertion/removal\n\n\n    if (removeEOFNL) {\n      while (!lines[lines.length - 1]) {\n        lines.pop();\n        delimiters.pop();\n      }\n    } else if (addEOFNL) {\n      lines.push('');\n      delimiters.push('\\n');\n    }\n\n    for (var _k = 0; _k < lines.length - 1; _k++) {\n      lines[_k] = lines[_k] + delimiters[_k];\n    }\n\n    return lines.join('');\n  } // Wrapper that supports multiple file patches via callbacks.\n\n  function applyPatches(uniDiff, options) {\n    if (typeof uniDiff === 'string') {\n      uniDiff = parsePatch(uniDiff);\n    }\n\n    var currentIndex = 0;\n\n    function processIndex() {\n      var index = uniDiff[currentIndex++];\n\n      if (!index) {\n        return options.complete();\n      }\n\n      options.loadFile(index, function (err, data) {\n        if (err) {\n          return options.complete(err);\n        }\n\n        var updatedContent = applyPatch(data, index, options);\n        options.patched(index, updatedContent, function (err) {\n          if (err) {\n            return options.complete(err);\n          }\n\n          processIndex();\n        });\n      });\n    }\n\n    processIndex();\n  }\n\n  function structuredPatch(oldFileName, newFileName, oldStr, newStr, oldHeader, newHeader, options) {\n    if (!options) {\n      options = {};\n    }\n\n    if (typeof options.context === 'undefined') {\n      options.context = 4;\n    }\n\n    var diff = diffLines(oldStr, newStr, options);\n    diff.push({\n      value: '',\n      lines: []\n    }); // Append an empty value to make cleanup easier\n\n    function contextLines(lines) {\n      return lines.map(function (entry) {\n        return ' ' + entry;\n      });\n    }\n\n    var hunks = [];\n    var oldRangeStart = 0,\n        newRangeStart = 0,\n        curRange = [],\n        oldLine = 1,\n        newLine = 1;\n\n    var _loop = function _loop(i) {\n      var current = diff[i],\n          lines = current.lines || current.value.replace(/\\n$/, '').split('\\n');\n      current.lines = lines;\n\n      if (current.added || current.removed) {\n        var _curRange;\n\n        // If we have previous context, start with that\n        if (!oldRangeStart) {\n          var prev = diff[i - 1];\n          oldRangeStart = oldLine;\n          newRangeStart = newLine;\n\n          if (prev) {\n            curRange = options.context > 0 ? contextLines(prev.lines.slice(-options.context)) : [];\n            oldRangeStart -= curRange.length;\n            newRangeStart -= curRange.length;\n          }\n        } // Output our changes\n\n\n        (_curRange = curRange).push.apply(_curRange, _toConsumableArray(lines.map(function (entry) {\n          return (current.added ? '+' : '-') + entry;\n        }))); // Track the updated file position\n\n\n        if (current.added) {\n          newLine += lines.length;\n        } else {\n          oldLine += lines.length;\n        }\n      } else {\n        // Identical context lines. Track line changes\n        if (oldRangeStart) {\n          // Close out any changes that have been output (or join overlapping)\n          if (lines.length <= options.context * 2 && i < diff.length - 2) {\n            var _curRange2;\n\n            // Overlapping\n            (_curRange2 = curRange).push.apply(_curRange2, _toConsumableArray(contextLines(lines)));\n          } else {\n            var _curRange3;\n\n            // end the range and output\n            var contextSize = Math.min(lines.length, options.context);\n\n            (_curRange3 = curRange).push.apply(_curRange3, _toConsumableArray(contextLines(lines.slice(0, contextSize))));\n\n            var hunk = {\n              oldStart: oldRangeStart,\n              oldLines: oldLine - oldRangeStart + contextSize,\n              newStart: newRangeStart,\n              newLines: newLine - newRangeStart + contextSize,\n              lines: curRange\n            };\n\n            if (i >= diff.length - 2 && lines.length <= options.context) {\n              // EOF is inside this hunk\n              var oldEOFNewline = /\\n$/.test(oldStr);\n              var newEOFNewline = /\\n$/.test(newStr);\n              var noNlBeforeAdds = lines.length == 0 && curRange.length > hunk.oldLines;\n\n              if (!oldEOFNewline && noNlBeforeAdds) {\n                // special case: old has no eol and no trailing context; no-nl can end up before adds\n                curRange.splice(hunk.oldLines, 0, '\\\\ No newline at end of file');\n              }\n\n              if (!oldEOFNewline && !noNlBeforeAdds || !newEOFNewline) {\n                curRange.push('\\\\ No newline at end of file');\n              }\n            }\n\n            hunks.push(hunk);\n            oldRangeStart = 0;\n            newRangeStart = 0;\n            curRange = [];\n          }\n        }\n\n        oldLine += lines.length;\n        newLine += lines.length;\n      }\n    };\n\n    for (var i = 0; i < diff.length; i++) {\n      _loop(i);\n    }\n\n    return {\n      oldFileName: oldFileName,\n      newFileName: newFileName,\n      oldHeader: oldHeader,\n      newHeader: newHeader,\n      hunks: hunks\n    };\n  }\n  function createTwoFilesPatch(oldFileName, newFileName, oldStr, newStr, oldHeader, newHeader, options) {\n    var diff = structuredPatch(oldFileName, newFileName, oldStr, newStr, oldHeader, newHeader, options);\n    var ret = [];\n\n    if (oldFileName == newFileName) {\n      ret.push('Index: ' + oldFileName);\n    }\n\n    ret.push('===================================================================');\n    ret.push('--- ' + diff.oldFileName + (typeof diff.oldHeader === 'undefined' ? '' : '\\t' + diff.oldHeader));\n    ret.push('+++ ' + diff.newFileName + (typeof diff.newHeader === 'undefined' ? '' : '\\t' + diff.newHeader));\n\n    for (var i = 0; i < diff.hunks.length; i++) {\n      var hunk = diff.hunks[i];\n      ret.push('@@ -' + hunk.oldStart + ',' + hunk.oldLines + ' +' + hunk.newStart + ',' + hunk.newLines + ' @@');\n      ret.push.apply(ret, hunk.lines);\n    }\n\n    return ret.join('\\n') + '\\n';\n  }\n  function createPatch(fileName, oldStr, newStr, oldHeader, newHeader, options) {\n    return createTwoFilesPatch(fileName, fileName, oldStr, newStr, oldHeader, newHeader, options);\n  }\n\n  function arrayEqual(a, b) {\n    if (a.length !== b.length) {\n      return false;\n    }\n\n    return arrayStartsWith(a, b);\n  }\n  function arrayStartsWith(array, start) {\n    if (start.length > array.length) {\n      return false;\n    }\n\n    for (var i = 0; i < start.length; i++) {\n      if (start[i] !== array[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  function calcLineCount(hunk) {\n    var _calcOldNewLineCount = calcOldNewLineCount(hunk.lines),\n        oldLines = _calcOldNewLineCount.oldLines,\n        newLines = _calcOldNewLineCount.newLines;\n\n    if (oldLines !== undefined) {\n      hunk.oldLines = oldLines;\n    } else {\n      delete hunk.oldLines;\n    }\n\n    if (newLines !== undefined) {\n      hunk.newLines = newLines;\n    } else {\n      delete hunk.newLines;\n    }\n  }\n  function merge(mine, theirs, base) {\n    mine = loadPatch(mine, base);\n    theirs = loadPatch(theirs, base);\n    var ret = {}; // For index we just let it pass through as it doesn't have any necessary meaning.\n    // Leaving sanity checks on this to the API consumer that may know more about the\n    // meaning in their own context.\n\n    if (mine.index || theirs.index) {\n      ret.index = mine.index || theirs.index;\n    }\n\n    if (mine.newFileName || theirs.newFileName) {\n      if (!fileNameChanged(mine)) {\n        // No header or no change in ours, use theirs (and ours if theirs does not exist)\n        ret.oldFileName = theirs.oldFileName || mine.oldFileName;\n        ret.newFileName = theirs.newFileName || mine.newFileName;\n        ret.oldHeader = theirs.oldHeader || mine.oldHeader;\n        ret.newHeader = theirs.newHeader || mine.newHeader;\n      } else if (!fileNameChanged(theirs)) {\n        // No header or no change in theirs, use ours\n        ret.oldFileName = mine.oldFileName;\n        ret.newFileName = mine.newFileName;\n        ret.oldHeader = mine.oldHeader;\n        ret.newHeader = mine.newHeader;\n      } else {\n        // Both changed... figure it out\n        ret.oldFileName = selectField(ret, mine.oldFileName, theirs.oldFileName);\n        ret.newFileName = selectField(ret, mine.newFileName, theirs.newFileName);\n        ret.oldHeader = selectField(ret, mine.oldHeader, theirs.oldHeader);\n        ret.newHeader = selectField(ret, mine.newHeader, theirs.newHeader);\n      }\n    }\n\n    ret.hunks = [];\n    var mineIndex = 0,\n        theirsIndex = 0,\n        mineOffset = 0,\n        theirsOffset = 0;\n\n    while (mineIndex < mine.hunks.length || theirsIndex < theirs.hunks.length) {\n      var mineCurrent = mine.hunks[mineIndex] || {\n        oldStart: Infinity\n      },\n          theirsCurrent = theirs.hunks[theirsIndex] || {\n        oldStart: Infinity\n      };\n\n      if (hunkBefore(mineCurrent, theirsCurrent)) {\n        // This patch does not overlap with any of the others, yay.\n        ret.hunks.push(cloneHunk(mineCurrent, mineOffset));\n        mineIndex++;\n        theirsOffset += mineCurrent.newLines - mineCurrent.oldLines;\n      } else if (hunkBefore(theirsCurrent, mineCurrent)) {\n        // This patch does not overlap with any of the others, yay.\n        ret.hunks.push(cloneHunk(theirsCurrent, theirsOffset));\n        theirsIndex++;\n        mineOffset += theirsCurrent.newLines - theirsCurrent.oldLines;\n      } else {\n        // Overlap, merge as best we can\n        var mergedHunk = {\n          oldStart: Math.min(mineCurrent.oldStart, theirsCurrent.oldStart),\n          oldLines: 0,\n          newStart: Math.min(mineCurrent.newStart + mineOffset, theirsCurrent.oldStart + theirsOffset),\n          newLines: 0,\n          lines: []\n        };\n        mergeLines(mergedHunk, mineCurrent.oldStart, mineCurrent.lines, theirsCurrent.oldStart, theirsCurrent.lines);\n        theirsIndex++;\n        mineIndex++;\n        ret.hunks.push(mergedHunk);\n      }\n    }\n\n    return ret;\n  }\n\n  function loadPatch(param, base) {\n    if (typeof param === 'string') {\n      if (/^@@/m.test(param) || /^Index:/m.test(param)) {\n        return parsePatch(param)[0];\n      }\n\n      if (!base) {\n        throw new Error('Must provide a base reference or pass in a patch');\n      }\n\n      return structuredPatch(undefined, undefined, base, param);\n    }\n\n    return param;\n  }\n\n  function fileNameChanged(patch) {\n    return patch.newFileName && patch.newFileName !== patch.oldFileName;\n  }\n\n  function selectField(index, mine, theirs) {\n    if (mine === theirs) {\n      return mine;\n    } else {\n      index.conflict = true;\n      return {\n        mine: mine,\n        theirs: theirs\n      };\n    }\n  }\n\n  function hunkBefore(test, check) {\n    return test.oldStart < check.oldStart && test.oldStart + test.oldLines < check.oldStart;\n  }\n\n  function cloneHunk(hunk, offset) {\n    return {\n      oldStart: hunk.oldStart,\n      oldLines: hunk.oldLines,\n      newStart: hunk.newStart + offset,\n      newLines: hunk.newLines,\n      lines: hunk.lines\n    };\n  }\n\n  function mergeLines(hunk, mineOffset, mineLines, theirOffset, theirLines) {\n    // This will generally result in a conflicted hunk, but there are cases where the context\n    // is the only overlap where we can successfully merge the content here.\n    var mine = {\n      offset: mineOffset,\n      lines: mineLines,\n      index: 0\n    },\n        their = {\n      offset: theirOffset,\n      lines: theirLines,\n      index: 0\n    }; // Handle any leading content\n\n    insertLeading(hunk, mine, their);\n    insertLeading(hunk, their, mine); // Now in the overlap content. Scan through and select the best changes from each.\n\n    while (mine.index < mine.lines.length && their.index < their.lines.length) {\n      var mineCurrent = mine.lines[mine.index],\n          theirCurrent = their.lines[their.index];\n\n      if ((mineCurrent[0] === '-' || mineCurrent[0] === '+') && (theirCurrent[0] === '-' || theirCurrent[0] === '+')) {\n        // Both modified ...\n        mutualChange(hunk, mine, their);\n      } else if (mineCurrent[0] === '+' && theirCurrent[0] === ' ') {\n        var _hunk$lines;\n\n        // Mine inserted\n        (_hunk$lines = hunk.lines).push.apply(_hunk$lines, _toConsumableArray(collectChange(mine)));\n      } else if (theirCurrent[0] === '+' && mineCurrent[0] === ' ') {\n        var _hunk$lines2;\n\n        // Theirs inserted\n        (_hunk$lines2 = hunk.lines).push.apply(_hunk$lines2, _toConsumableArray(collectChange(their)));\n      } else if (mineCurrent[0] === '-' && theirCurrent[0] === ' ') {\n        // Mine removed or edited\n        removal(hunk, mine, their);\n      } else if (theirCurrent[0] === '-' && mineCurrent[0] === ' ') {\n        // Their removed or edited\n        removal(hunk, their, mine, true);\n      } else if (mineCurrent === theirCurrent) {\n        // Context identity\n        hunk.lines.push(mineCurrent);\n        mine.index++;\n        their.index++;\n      } else {\n        // Context mismatch\n        conflict(hunk, collectChange(mine), collectChange(their));\n      }\n    } // Now push anything that may be remaining\n\n\n    insertTrailing(hunk, mine);\n    insertTrailing(hunk, their);\n    calcLineCount(hunk);\n  }\n\n  function mutualChange(hunk, mine, their) {\n    var myChanges = collectChange(mine),\n        theirChanges = collectChange(their);\n\n    if (allRemoves(myChanges) && allRemoves(theirChanges)) {\n      // Special case for remove changes that are supersets of one another\n      if (arrayStartsWith(myChanges, theirChanges) && skipRemoveSuperset(their, myChanges, myChanges.length - theirChanges.length)) {\n        var _hunk$lines3;\n\n        (_hunk$lines3 = hunk.lines).push.apply(_hunk$lines3, _toConsumableArray(myChanges));\n\n        return;\n      } else if (arrayStartsWith(theirChanges, myChanges) && skipRemoveSuperset(mine, theirChanges, theirChanges.length - myChanges.length)) {\n        var _hunk$lines4;\n\n        (_hunk$lines4 = hunk.lines).push.apply(_hunk$lines4, _toConsumableArray(theirChanges));\n\n        return;\n      }\n    } else if (arrayEqual(myChanges, theirChanges)) {\n      var _hunk$lines5;\n\n      (_hunk$lines5 = hunk.lines).push.apply(_hunk$lines5, _toConsumableArray(myChanges));\n\n      return;\n    }\n\n    conflict(hunk, myChanges, theirChanges);\n  }\n\n  function removal(hunk, mine, their, swap) {\n    var myChanges = collectChange(mine),\n        theirChanges = collectContext(their, myChanges);\n\n    if (theirChanges.merged) {\n      var _hunk$lines6;\n\n      (_hunk$lines6 = hunk.lines).push.apply(_hunk$lines6, _toConsumableArray(theirChanges.merged));\n    } else {\n      conflict(hunk, swap ? theirChanges : myChanges, swap ? myChanges : theirChanges);\n    }\n  }\n\n  function conflict(hunk, mine, their) {\n    hunk.conflict = true;\n    hunk.lines.push({\n      conflict: true,\n      mine: mine,\n      theirs: their\n    });\n  }\n\n  function insertLeading(hunk, insert, their) {\n    while (insert.offset < their.offset && insert.index < insert.lines.length) {\n      var line = insert.lines[insert.index++];\n      hunk.lines.push(line);\n      insert.offset++;\n    }\n  }\n\n  function insertTrailing(hunk, insert) {\n    while (insert.index < insert.lines.length) {\n      var line = insert.lines[insert.index++];\n      hunk.lines.push(line);\n    }\n  }\n\n  function collectChange(state) {\n    var ret = [],\n        operation = state.lines[state.index][0];\n\n    while (state.index < state.lines.length) {\n      var line = state.lines[state.index]; // Group additions that are immediately after subtractions and treat them as one \"atomic\" modify change.\n\n      if (operation === '-' && line[0] === '+') {\n        operation = '+';\n      }\n\n      if (operation === line[0]) {\n        ret.push(line);\n        state.index++;\n      } else {\n        break;\n      }\n    }\n\n    return ret;\n  }\n\n  function collectContext(state, matchChanges) {\n    var changes = [],\n        merged = [],\n        matchIndex = 0,\n        contextChanges = false,\n        conflicted = false;\n\n    while (matchIndex < matchChanges.length && state.index < state.lines.length) {\n      var change = state.lines[state.index],\n          match = matchChanges[matchIndex]; // Once we've hit our add, then we are done\n\n      if (match[0] === '+') {\n        break;\n      }\n\n      contextChanges = contextChanges || change[0] !== ' ';\n      merged.push(match);\n      matchIndex++; // Consume any additions in the other block as a conflict to attempt\n      // to pull in the remaining context after this\n\n      if (change[0] === '+') {\n        conflicted = true;\n\n        while (change[0] === '+') {\n          changes.push(change);\n          change = state.lines[++state.index];\n        }\n      }\n\n      if (match.substr(1) === change.substr(1)) {\n        changes.push(change);\n        state.index++;\n      } else {\n        conflicted = true;\n      }\n    }\n\n    if ((matchChanges[matchIndex] || '')[0] === '+' && contextChanges) {\n      conflicted = true;\n    }\n\n    if (conflicted) {\n      return changes;\n    }\n\n    while (matchIndex < matchChanges.length) {\n      merged.push(matchChanges[matchIndex++]);\n    }\n\n    return {\n      merged: merged,\n      changes: changes\n    };\n  }\n\n  function allRemoves(changes) {\n    return changes.reduce(function (prev, change) {\n      return prev && change[0] === '-';\n    }, true);\n  }\n\n  function skipRemoveSuperset(state, removeChanges, delta) {\n    for (var i = 0; i < delta; i++) {\n      var changeContent = removeChanges[removeChanges.length - delta + i].substr(1);\n\n      if (state.lines[state.index + i] !== ' ' + changeContent) {\n        return false;\n      }\n    }\n\n    state.index += delta;\n    return true;\n  }\n\n  function calcOldNewLineCount(lines) {\n    var oldLines = 0;\n    var newLines = 0;\n    lines.forEach(function (line) {\n      if (typeof line !== 'string') {\n        var myCount = calcOldNewLineCount(line.mine);\n        var theirCount = calcOldNewLineCount(line.theirs);\n\n        if (oldLines !== undefined) {\n          if (myCount.oldLines === theirCount.oldLines) {\n            oldLines += myCount.oldLines;\n          } else {\n            oldLines = undefined;\n          }\n        }\n\n        if (newLines !== undefined) {\n          if (myCount.newLines === theirCount.newLines) {\n            newLines += myCount.newLines;\n          } else {\n            newLines = undefined;\n          }\n        }\n      } else {\n        if (newLines !== undefined && (line[0] === '+' || line[0] === ' ')) {\n          newLines++;\n        }\n\n        if (oldLines !== undefined && (line[0] === '-' || line[0] === ' ')) {\n          oldLines++;\n        }\n      }\n    });\n    return {\n      oldLines: oldLines,\n      newLines: newLines\n    };\n  }\n\n  // See: http://code.google.com/p/google-diff-match-patch/wiki/API\n  function convertChangesToDMP(changes) {\n    var ret = [],\n        change,\n        operation;\n\n    for (var i = 0; i < changes.length; i++) {\n      change = changes[i];\n\n      if (change.added) {\n        operation = 1;\n      } else if (change.removed) {\n        operation = -1;\n      } else {\n        operation = 0;\n      }\n\n      ret.push([operation, change.value]);\n    }\n\n    return ret;\n  }\n\n  function convertChangesToXML(changes) {\n    var ret = [];\n\n    for (var i = 0; i < changes.length; i++) {\n      var change = changes[i];\n\n      if (change.added) {\n        ret.push('<ins>');\n      } else if (change.removed) {\n        ret.push('<del>');\n      }\n\n      ret.push(escapeHTML(change.value));\n\n      if (change.added) {\n        ret.push('</ins>');\n      } else if (change.removed) {\n        ret.push('</del>');\n      }\n    }\n\n    return ret.join('');\n  }\n\n  function escapeHTML(s) {\n    var n = s;\n    n = n.replace(/&/g, '&amp;');\n    n = n.replace(/</g, '&lt;');\n    n = n.replace(/>/g, '&gt;');\n    n = n.replace(/\"/g, '&quot;');\n    return n;\n  }\n\n  /* See LICENSE file for terms of use */\n\n  exports.Diff = Diff;\n  exports.diffChars = diffChars;\n  exports.diffWords = diffWords;\n  exports.diffWordsWithSpace = diffWordsWithSpace;\n  exports.diffLines = diffLines;\n  exports.diffTrimmedLines = diffTrimmedLines;\n  exports.diffSentences = diffSentences;\n  exports.diffCss = diffCss;\n  exports.diffJson = diffJson;\n  exports.diffArrays = diffArrays;\n  exports.structuredPatch = structuredPatch;\n  exports.createTwoFilesPatch = createTwoFilesPatch;\n  exports.createPatch = createPatch;\n  exports.applyPatch = applyPatch;\n  exports.applyPatches = applyPatches;\n  exports.parsePatch = parsePatch;\n  exports.merge = merge;\n  exports.convertChangesToDMP = convertChangesToDMP;\n  exports.convertChangesToXML = convertChangesToXML;\n  exports.canonicalize = canonicalize;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","\"use strict\";\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar JsDiff = __importStar(require(\"diff\"));\nvar Measure_1 = require(\"./Measure\");\nvar Sheet_1 = require(\"./Sheet\");\nvar Snippet = /** @class */ (function () {\n    function Snippet() {\n    }\n    Snippet.render = function (snippet, options) {\n        var parsed = Snippet.parse(snippet);\n        return Sheet_1.Sheet.render(parsed, options, true);\n    };\n    Snippet.wrapPipes = function (string) {\n        return (\"|\" + string + \"|\").replace(/\\|+/g, '|');\n    };\n    Snippet.formatForDiff = function (snippet) {\n        return Snippet.minify(snippet)\n            .replace(/\\|/g, ' | ').trim();\n    };\n    Snippet.format = function (snippet, linebreaks) {\n        if (linebreaks === void 0) { linebreaks = true; }\n        // replaces url chars back\n        var compact = Snippet.minify(snippet, false);\n        compact = Snippet.wrapPipes(compact);\n        if (linebreaks) {\n            compact = Snippet.parseBars(snippet).compact;\n        }\n        else {\n            compact = compact.replace(/\\n/g, '|');\n        }\n        return compact\n            .replace(/\\|+/g, '|')\n            .replace(/\\|( +)\\|( +)/g, ' $1 $2') // remove spacer bar pipes\n            .replace(/\\|( +)\\|([1-9])/g, ' $1|$2')\n            .replace(/^\\s+|\\s+$/g, ''); // remove spaces/line breaks from start/end\n    };\n    Snippet.parseBars = function (snippet) {\n        var compact = Snippet.minify(snippet, false);\n        compact = Snippet.wrapPipes(compact);\n        // insert spaces before first chord\n        var cells = compact.split('|').slice(1, -1);\n        cells = cells.map(function (bar, index) {\n            if (!bar[0].match(/[1-9:]/)) {\n                bar = '  ' + bar;\n            }\n            else if (bar[0] === ':') {\n                bar = ': ' + bar.slice(1);\n            }\n            return bar;\n        });\n        // find out indices of first houses\n        var houses = cells.reduce(function (offset, bar, index) {\n            if (bar[0] === '1') {\n                offset.push(index);\n            }\n            return offset;\n        }, []);\n        // insert empty cells before additional houses\n        cells = cells.reduce(function (cells, bar, index) {\n            if (bar[0].match(/[2-9]/)) {\n                var offset = houses.filter(function (h) { return h < index; }).reverse()[0];\n                cells = cells.concat(new Array(offset % 4).fill(''));\n            }\n            cells.push(bar);\n            return cells;\n        }, []);\n        // find out the maximal number of chars per column\n        var chars = cells.reduce(function (max, bar, index) {\n            max[index % 4] = Math.max(bar.length, max[index % 4] || 0);\n            return max;\n        }, []);\n        // fill up each bar with spaces\n        compact = cells.map(function (bar, index) {\n            var diff = chars[index % 4] - bar.length + 2;\n            if (diff > 0) {\n                bar += new Array(diff).fill(' ').join('');\n            }\n            // move double dots to end of bar\n            bar = bar.replace(/:(\\s+)$/, '$1:');\n            return bar;\n        }).join('|');\n        compact = Snippet.wrapPipes(compact);\n        // break string all 4 cells\n        var pipeIndex = -1;\n        compact = compact.split('').reduce(function (string, char, index) {\n            if (char === '|') {\n                pipeIndex++;\n            }\n            if (char === '|' && pipeIndex % 4 === 0 && index > 0 && index < compact.length - 1) {\n                char = \"|\\n|\";\n                pipeIndex = 0;\n            }\n            return string + char;\n        }, '');\n        return { compact: compact, cells: cells, houses: houses, chars: chars };\n    };\n    Snippet.columnChars = function (snippet) {\n        var bars = snippet.split('|');\n        var chars = bars.reduce(function (max, bar, index) {\n            max[index % 4] = Math.max(bar.length, max[index % 4] || 0);\n            return max;\n        }, []);\n    };\n    Snippet.getCellBounds = function (index, snippet) {\n        var _a = Snippet.parseBars(snippet), chars = _a.chars, cells = _a.cells, houses = _a.houses;\n        if (houses.length && index > houses[0]) {\n            var offset = (houses.filter(function (h) { return h < index; }).reverse()[0]) % 4;\n            index += offset;\n        }\n        index = index % cells.length;\n        var col = index % 4;\n        var row = Math.floor(index / 4);\n        var rowlength = chars.reduce(function (sum, current) { return sum + current + 3; }, 0) + 2;\n        var rowLeft = rowlength * row;\n        var left = rowLeft + chars.slice(0, col).reduce(function (sum, current, i) { return sum + current + 3; }, 0) + 1;\n        return [left, left + chars[col] + 2];\n    };\n    Snippet.minify = function (snippet, urlsafe) {\n        if (urlsafe === void 0) { urlsafe = false; }\n        var compact = (\"|\" + snippet + \"|\")\n            .replace(/\\n+/g, '|') // replace line breaks with pipes\n            .replace(/\\s+/g, ' ') // no repeated pipes\n            .replace(/\\s?\\|\\s?/g, '|') // no pipes with spaces\n            .replace(/\\s?\\:\\s?/g, ':') // no repeat with spaces\n            .replace(/\\|+/g, '|'); // no repeated pipes\n        if (urlsafe) {\n            // replaces url unfriendly chars\n            compact = compact\n                .replace(/\\|+/g, 'I')\n                .replace(/\\s+/g, '_')\n                .replace(/:/g, 'R')\n                .replace(/\\^/g, 'M')\n                .replace(/\\#/g, 'Y')\n                .replace(/\\%/g, 'X');\n        }\n        else {\n            // replaces url unfriendly chars\n            compact = compact\n                .replace(/\\I+/g, '|')\n                .replace(/\\_+/g, ' ')\n                .replace(/R/g, ':')\n                .replace(/M/g, '^')\n                .replace(/X/g, 'x')\n                .replace(/Y/g, '#');\n        }\n        return compact.slice(1, -1);\n    };\n    Snippet.getControlSigns = function (symbols) {\n        if (symbols === void 0) { symbols = []; }\n        return symbols\n            .filter(function (s) { return typeof s === 'string'; }) // control should not be nested!\n            .map(function (s) { return Snippet.controlSigns.find(function (c) { return [c.name, c.short]\n            .includes(s.replace('(', '').replace(')', '')); }); })\n            .filter(function (s) { return !!s; });\n    };\n    Snippet.parse = function (snippet, simplify) {\n        if (simplify === void 0) { simplify = true; }\n        var formatted = Snippet.format(snippet, false);\n        return formatted\n            .split('|') // split into measures\n            .map(function (measure) { return measure.split(' '); }) // split measures by spaces\n            .map(function (measure) { return measure.filter(function (chord) { return !!chord; }); }) // kill empty chords\n            .filter(function (measure) { return !measure || measure.length; }) // kill empty measures\n            .map(function (measure) { return ({ symbols: measure, signs: [] }); })\n            // parse symbols to chords and signs\n            .map(function (measure) {\n            // repeat start\n            if (measure.symbols[0][0] === ':') {\n                if (measure.symbols[0].length === 1) {\n                    measure.symbols = measure.symbols.slice(1);\n                }\n                measure.signs.unshift('{');\n            }\n            var last = measure.symbols[measure.symbols.length - 1];\n            // repeat end\n            if (last[last.length - 1] === ':') {\n                if (last.length === 1) {\n                    measure.symbols.pop();\n                }\n                measure.signs.push('}');\n            }\n            measure.symbols = measure.symbols.map(function (s) { return s.replace(/:/g, ''); });\n            var house = measure.symbols.find(function (s) { return s.match(/^[1-9]$/); });\n            if (house) {\n                measure.house = parseInt(house);\n            }\n            measure.symbols = measure.symbols.filter(function (s) { return !s.match(/^[1-9]$/); });\n            var controlSigns = Snippet.getControlSigns(measure.symbols);\n            if (controlSigns.length) {\n                measure.signs = measure.signs.concat(controlSigns.map(function (sign) { return sign.name; }));\n                measure.symbols = measure.symbols\n                    .filter(function (s) { return !controlSigns\n                    .find(function (c) { return [c.name, c.short].includes(s.replace(')', '').replace('(', '')); }); });\n            }\n            measure.chords = [].concat(measure.symbols);\n            delete measure.symbols;\n            return measure;\n        })\n            .map(function (measure) {\n            if (!simplify) {\n                return measure;\n            }\n            if (measure.signs.length === 0) {\n                delete measure.signs;\n            }\n            if (measure.chords.length === 0) {\n                delete measure.chords;\n            }\n            return measure;\n        })\n            // kill empty measures\n            .filter(function (measure) { return Object.keys(measure).length > 0; })\n            // simplify => measures with only chords will be arrays\n            .map(function (measure) {\n            if (!simplify) {\n                return measure;\n            }\n            if (measure.chords && Object.keys(measure).length === 1) {\n                return measure.chords.length === 1 ?\n                    measure.chords[0] : // simplify one chord measures\n                    measure.chords;\n            }\n            return measure;\n        });\n    };\n    Snippet.nest = function (string) {\n        var nested = string.split('.')\n            .map(function (group) { return group.trim(); })\n            .map(function (group) { return group.split(' '); })\n            .map(function (group) { return group.filter(function (chord) { return !!chord; }); }) // kill empty chords\n            .filter(function (group) { return !group || group.length; })\n            .map(function (group) { return group.length === 1 ? group[0] : group; });\n        nested = nested.length === 1 ? nested[0] : nested;\n        return nested;\n    };\n    Snippet.parse2 = function (snippet, simplify) {\n        if (simplify === void 0) { simplify = true; }\n        var formatted = Snippet.format(snippet, false);\n        return formatted\n            .split('|') // split into measures\n            .filter(function (measure) { return measure && measure.length; }) // kill empty measures\n            .map(function (measure) { return ({ symbols: measure.trim(), signs: [] }); })\n            // parse symbols to chords and signs\n            .map(function (measure) {\n            // repeat start\n            if (measure.symbols[0] === ':') {\n                measure.signs.unshift('{');\n            }\n            var last = measure.symbols[measure.symbols.length - 1];\n            // repeat end\n            if (last === ':') {\n                measure.signs.push('}');\n            }\n            measure.symbols = measure.symbols.replace(/:/g, '');\n            var house = measure.symbols[0].match(/^[1-9]$/);\n            if (house) {\n                measure.house = parseInt(house);\n                measure.symbols = measure.symbols.slice(1);\n            }\n            measure.symbols = [].concat(Snippet.nest(measure.symbols));\n            var controlSigns = Snippet.getControlSigns(measure.symbols);\n            if (controlSigns.length) {\n                measure.signs = measure.signs.concat(controlSigns.map(function (sign) { return sign.name; }));\n                measure.symbols = measure.symbols\n                    .filter(function (s) { return !controlSigns\n                    .find(function (c) { return [c.name, c.short].includes(s.replace(')', '').replace('(', '')); }); });\n            }\n            measure.chords = measure.symbols;\n            delete measure.symbols;\n            return measure;\n        })\n            .map(function (measure) {\n            if (!simplify) {\n                return measure;\n            }\n            if (measure.signs.length === 0) {\n                delete measure.signs;\n            }\n            if (measure.chords.length === 0) {\n                delete measure.chords;\n            }\n            return measure;\n        })\n            // kill empty measures\n            .filter(function (measure) { return Object.keys(measure).length > 0; })\n            // simplify => measures with only chords will be arrays\n            .map(function (measure) {\n            if (!simplify) {\n                return measure;\n            }\n            if (measure.chords && Object.keys(measure).length === 1) {\n                return measure.chords.length === 1 ?\n                    measure.chords[0] : // simplify one chord measures\n                    measure.chords;\n            }\n            return measure;\n        });\n    };\n    Snippet.testFormat = function (sheet) {\n        return sheet.map(function (m) { return Measure_1.Measure.from(m); }).map(function (m) { return m.chords; }).join(' ');\n    };\n    Snippet.from = function (sheet, format) {\n        if (format === void 0) { format = true; }\n        var snippet = sheet\n            .map(function (m) { return Measure_1.Measure.from(m); })\n            .reduce(function (snippet, _a) {\n            var signs = _a.signs, house = _a.house, chords = _a.chords;\n            var controlSigns = Snippet.getControlSigns(signs || []);\n            var start = controlSigns.filter(function (c) { return !c.end; }).map(function (c) { return '(' + c.short + ')'; }).join(' ');\n            var end = controlSigns.filter(function (c) { return !!c.end; }).map(function (c) { return '(' + c.short + ')'; }).join(' ');\n            var repeatStart = signs && signs.includes('{');\n            var repeatEnd = signs && signs.includes('}');\n            return snippet + (\"|\" + (repeatStart ? ':' : '') + (house || '') + \" \" + (start ? start + ' ' : '') + (chords ? chords.join(' ') : '') + (end ? ' ' + end : '') + (repeatEnd ? ':' : ''));\n        }, '');\n        if (format) {\n            return Snippet.format(snippet);\n        }\n        return Snippet.minify(snippet);\n    };\n    Snippet.expand = function (snippet, options) {\n        return Snippet.from(Snippet.render(snippet, options));\n    };\n    Snippet.diff = function (snippetA, snippetB) {\n        var diffFormat = [Snippet.formatForDiff(snippetA), Snippet.formatForDiff(snippetB)];\n        return JsDiff.diffWords(diffFormat[0], diffFormat[1]);\n    };\n    Snippet.controlSigns = [\n        {\n            name: 'DC',\n            short: 'DC',\n            end: true\n        },\n        {\n            name: 'DS',\n            short: 'DS',\n            end: true\n        },\n        {\n            name: 'Segno',\n            short: 'S',\n        },\n        {\n            name: 'DS.Fine',\n            short: 'DS',\n            end: true\n        },\n        {\n            name: 'DS.Coda',\n            short: 'DS',\n            end: true\n        },\n        {\n            name: 'DC.Fine',\n            short: 'DC',\n            end: true\n        },\n        {\n            name: 'DC.Coda',\n            short: 'DC',\n            end: true\n        },\n        {\n            name: 'Fine',\n            short: 'F',\n            end: true\n        },\n        {\n            name: 'ToCoda',\n            short: '2Q',\n            end: true\n        },\n        {\n            name: 'Coda',\n            short: 'Q'\n        },\n    ];\n    return Snippet;\n}());\nexports.Snippet = Snippet;\n","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tonal_1 = require(\"tonal\");\nvar Harmony_1 = require(\"../harmony/Harmony\");\nvar Voicing_1 = require(\"../harmony/Voicing\");\nvar Snippet_1 = require(\"../sheet/Snippet\");\nvar util_1 = require(\"./util\");\nvar Logger = /** @class */ (function () {\n    function Logger() {\n    }\n    Logger.logCustom = function (args, logFn) {\n        if (logFn === void 0) { logFn = console.log; }\n        /* console.clear(); */\n        logFn.apply(console, args);\n    };\n    Logger.logLegend = function () {\n        if (console.groupCollapsed) {\n            console.groupCollapsed('Show Emoji Legend');\n            console.table(Logger.emoji);\n            console.groupEnd();\n        }\n        else {\n            console.log('Emoji Legend:', Logger.emoji);\n        }\n    };\n    Logger.logSheet = function (sheet) {\n        sheet = __assign({ title: 'Untitled', composer: 'Unkown', chords: [], forms: 3, tempo: 130, style: 'Swing' }, sheet);\n        var snippet = Snippet_1.Snippet.from(sheet.chords);\n        console.log(sheet.composer + \" - \" + sheet.title);\n        console.log(sheet.tempo + \"bpm, Style: \" + sheet.style);\n        console.log(snippet);\n        if (console.groupCollapsed) {\n            console.log('Sheet', sheet);\n            /* console.log('Groove', sheet.groove); */\n            console.groupCollapsed(\"show \" + sheet.forms + \" rendered forms\");\n            console.log(\"expanded view\\n\\n\" + Snippet_1.Snippet.expand(snippet, { forms: sheet.forms || 1 }));\n            console.groupEnd();\n        }\n    };\n    Logger.logLabel = function (key) {\n        if (!Logger.emoji[key]) {\n            return key;\n        }\n        return Logger.emoji[key].icon + ' ' + key;\n    };\n    Logger.logChoice = function (choice) {\n        var _a;\n        if (!choice) {\n            return;\n        }\n        var difference = choice.difference, origin = choice.origin, targets = choice.targets, from = choice.from, to = choice.to, movement = choice.movement, similar = choice.similar, added = choice.added, dropped = choice.dropped, contrary = choice.contrary, parallel = choice.parallel, topInterval = choice.topInterval, bottomInterval = choice.bottomInterval, topNotes = choice.topNotes, bottomNotes = choice.bottomNotes, intervals = choice.intervals, degrees = choice.degrees;\n        console.table((_a = {\n                difference: difference,\n                movement: movement,\n                origin: origin.join(' '),\n                dropped: dropped.join(' '),\n                added: added.join(' '),\n                targets: targets.join(' '),\n                /* from: from.join(' '),\n                to: to.join(' '), */\n                intervals: intervals.join(' '),\n                degrees: degrees.join(' ')\n            },\n            _a[Logger.logLabel('similar')] = similar,\n            _a[Logger.logLabel('contrary')] = contrary,\n            _a[Logger.logLabel('parallel')] = parallel,\n            _a.topNotes = topNotes.join(' '),\n            _a.topInterval = topInterval,\n            _a.bottomNotes = bottomNotes.join(' '),\n            _a.bottomInterval = bottomInterval,\n            _a));\n    };\n    Logger.logNotes = function (options) {\n        var _a = __assign({ labels: [] }, options), notes = _a.notes, active = _a.active, idle = _a.idle, added = _a.added, range = _a.range, labels = _a.labels;\n        var span = [\n            tonal_1.Distance.transpose(range[0], tonal_1.Interval.fromSemitones(-7)),\n            tonal_1.Distance.transpose(range[1], tonal_1.Interval.fromSemitones(12))\n        ];\n        var allNotes = util_1.noteArray(span);\n        var keyboard = allNotes.map(function (note, index) {\n            var isActive = active.find(function (n) { return Harmony_1.Harmony.hasSamePitch(note, n); });\n            var isUsed = notes.find(function (n) { return Harmony_1.Harmony.hasSamePitch(note, n); });\n            var i = notes.indexOf(isUsed);\n            var isIdle = idle.find(function (n) { return Harmony_1.Harmony.hasSamePitch(note, n); });\n            var isAdded = added.find(function (n) { return Harmony_1.Harmony.hasSamePitch(note, n); });\n            var isBlack = Harmony_1.Harmony.isBlack(note);\n            var css = '', sign = '_';\n            if (isAdded && !isBlack) {\n                css = 'background:green;color:white;';\n                sign = labels[i] || '█';\n            }\n            else if (isAdded && isBlack) {\n                css = 'background:darkgreen;color:white;';\n                sign = labels[i] || '█';\n            }\n            else if (isActive && isBlack) {\n                css = 'background:#a50909;color:white;';\n                sign = labels[i] || '█';\n            }\n            else if (isActive && !isBlack) {\n                css = 'background:#e52929;color:white;';\n                sign = labels[i] || '█';\n            }\n            else if (isIdle && !isBlack) {\n                css = 'background:gray;color:white;';\n                sign = labels[i] || '█';\n            }\n            else if (isIdle && isBlack) {\n                css = 'background:darkgray;color:white;';\n                sign = labels[i] || '█';\n            }\n            else {\n                css = isBlack ? 'color:black;' : 'color:#eee;';\n            }\n            var position = util_1.getRangePosition(note, range);\n            if (position < 0 || position > 1) {\n                if (active || idle || added) {\n                    css += 'color:red;';\n                    sign = ' ';\n                }\n                else {\n                    sign = ' ';\n                }\n            }\n            return {\n                sign: sign,\n                css: css\n            };\n        });\n        var args = [\n            keyboard.map(function (key) { return \"%c\" + key.sign; }).join('')\n        ].concat((keyboard.map(function (key) { return key.css + \";\"; })));\n        /* Snippet.logCustom(args); */\n        return args;\n    };\n    Logger.logVoicing = function (_a) {\n        var chord = _a.chord, previousVoicing = _a.previousVoicing, combinations = _a.combinations, bestPick = _a.bestPick, pick = _a.pick, range = _a.range, choice = _a.choice, direction = _a.direction, choices = _a.choices;\n        /* pick = pick.map(n => Note.simplify(n)); */\n        pick = pick || [];\n        previousVoicing = previousVoicing || [];\n        var idle = previousVoicing.filter(function (n) { return pick.find(function (p) { return Harmony_1.Harmony.hasSamePitch(n, p); }); });\n        var isIdle = choice && choice.oblique.length === choice.targets.length;\n        if (isIdle) {\n            return;\n        }\n        var active = pick.filter(function (n) { return !previousVoicing.find(function (p) { return Harmony_1.Harmony.hasSamePitch(n, p); }); });\n        var added = choice ? choice.added : [];\n        var degrees = util_1.getStepsInChord(pick, chord, true)\n            .map(function (step) { return util_1.getDegreeFromStep(step); })\n            .map(function (step) { return step === 8 ? 1 : step; });\n        var konsole = Logger.logNotes({ notes: pick, active: active, idle: idle, added: added, range: range, labels: degrees });\n        var movement = choice ? choice.movement : 0;\n        var difference = choice ? choice.difference : 0;\n        choices = choices || [];\n        if (movement > 0) {\n            konsole.push(Logger.emoji.movedUp.icon);\n        }\n        else if (movement < 0) {\n            konsole.push(Logger.emoji.movedDown.icon);\n        }\n        else {\n            konsole.push(Logger.emoji.equilibrium.icon);\n        }\n        if (!pick.length) {\n            konsole.push(Logger.emoji.error.icon);\n        }\n        // TODO replace force with filter of choices after isInRange\n        //      isInRange: checks if top and bottom note are inside the range\n        if (!direction) {\n            konsole.push(Logger.emoji.bestMatch.icon);\n        }\n        else {\n            if (bestPick !== pick) {\n                konsole.push(Logger.emoji.force.icon);\n            }\n            else {\n                konsole.push(Logger.emoji.lucky.icon);\n            }\n            // wrong direction?\n            if ((direction === 'up' && movement < 0) || (direction === 'down' && movement > 0)) {\n                konsole.push(Logger.emoji.wrong.icon);\n            }\n        }\n        if (choice) {\n            if (choice.similar) {\n                konsole.push(Logger.emoji.similar.icon);\n            }\n            if (choice.contrary) {\n                konsole.push(Logger.emoji.contrary.icon);\n            }\n            if (choice.parallel) {\n                konsole.push(Logger.emoji.parallel.icon);\n            }\n            if (choice.added.length && choice.added[choice.added.length - 1] === choice.topNotes[1]) {\n                konsole.push(Logger.emoji.topAdded.icon);\n            }\n            if (choice.dropped.length && choice.dropped[choice.dropped.length - 1] === choice.topNotes[0]) {\n                konsole.push(Logger.emoji.topRemoved.icon);\n            }\n            if (choice.dropped.length && choice.dropped[0] === choice.origin[0]) {\n                konsole.push(Logger.emoji.bottomRemoved.icon);\n            }\n            if (choice.added.length && choice.added[0] === choice.targets[0]) {\n                konsole.push(Logger.emoji.bottomAdded.icon);\n            }\n            if (!Voicing_1.Voicing.hasTonic(pick, chord)) {\n                konsole.push(Logger.emoji.rootless.icon);\n            }\n            if (!choice.parallel && choice.oblique.length === 0) {\n                konsole.push(Logger.emoji.noOblique.icon);\n            }\n            if (isIdle) {\n                konsole.push(Logger.emoji.noChange.icon);\n            }\n        }\n        if (choices.length) {\n            if (choices.length < pick.length) {\n                konsole.push(Logger.emoji.fewChoices.icon);\n            }\n        }\n        konsole.push(\"\" + chord);\n        if (console && console.table) {\n            Logger.logCustom(konsole, console.groupCollapsed);\n            console.log(previousVoicing.join(' ') + \" > \" + pick.join(' ') + \" (\" + (choices.indexOf(choice) + 1) + \". choice of \" + choices.length + \")\");\n            previousVoicing = previousVoicing || [];\n            if (choice) {\n                console.group('Choice:');\n                Logger.logChoice(choice);\n                console.groupEnd();\n                console.groupCollapsed('All Choices:');\n                choices.forEach(function (c) { return Logger.logChoice(c); });\n                console.groupEnd();\n                console.groupCollapsed('Combinations:');\n                console.log(combinations);\n                console.groupEnd();\n            }\n            console.groupEnd();\n        }\n        //console.log(`${ Snippet.voicing(voicing, ['G2', 'C5']) } ${ chord }: ${ voicing.join(' ') } `);\n        //console.log(`#${ event.path[1] + 1 }: ${ chord }: ${ latest } > ${ voicing }.moved ${ moves } (avg | ${ avgDiff } | total ${ totalMoves })`);\n        // console.log(chord, voicing);\n        // G#o7 2 (5.25) (4) [\"G3\", \"D4\", \"F4\", \"Bb4\"] > (4) [\"B2\", \"D3\", \"E#3\", \"G#3\"]\n        /* } */\n        return pick;\n    };\n    Logger.emoji = {\n        bestMatch: {\n            icon: '🎹',\n            description: 'The selected voicing had the best possible voice leading from the previous voicing'\n        },\n        force: {\n            icon: '💪',\n            description: 'Voicing had to be forced in the desired direction. The best pick would have gone in the wrong direction.'\n        },\n        lucky: {\n            icon: '🍀',\n            description: 'The best pick moved in the direction that would have been forced.'\n        },\n        wrong: {\n            icon: '💀',\n            description: 'Continued moving in the wrong direction'\n        },\n        similar: {\n            icon: '😇',\n            description: 'All voices are moving in the same direction'\n        },\n        parallel: {\n            icon: '⛓',\n            description: 'All voices are moving by parallel intervals'\n        },\n        contrary: {\n            icon: '👹',\n            description: 'Some voices were moving in opposite directions'\n        },\n        noOblique: {\n            icon: '🥌',\n            description: 'All voices changed position. (Not shown when parallel)'\n        },\n        noChange: {\n            icon: '🛋',\n            description: 'All voices remained in position.'\n        },\n        topAdded: {\n            icon: '🌤',\n            description: 'A top voice was added',\n        },\n        topRemoved: {\n            icon: '⛅',\n            description: 'A top voice was dropped'\n        },\n        bottomRemoved: {\n            icon: '🛫',\n            description: 'A bottom voice was dropped'\n        },\n        bottomAdded: {\n            icon: '🌳',\n            description: 'A bottom note was added'\n        },\n        movedUp: {\n            icon: '↗️',\n            description: 'The Voices generally moved up'\n        },\n        movedDown: {\n            icon: '↙️',\n            description: 'The Voices generally moved down'\n        },\n        equilibrium: {\n            icon: '☯️',\n            description: 'The Voices generally did not move anywhere'\n        },\n        fewChoices: {\n            icon: '❓',\n            description: 'There were very few valid combinations to choose from'\n        },\n        error: {\n            icon: '❌',\n            description: 'No notes could be selected. Some error happened.'\n        },\n        rootless: {\n            icon: '⛵',\n            description: 'The voicing does not contain its root note (tonic).'\n        }\n        // ️️️️️➡️↘️↗️⬇️⬆️⬅️\n    };\n    return Logger;\n}());\nexports.Logger = Logger;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Pulse_1 = require(\"./Pulse\");\nvar Sheet_1 = require(\"./sheet/Sheet\");\nvar Metronome_1 = require(\"./Metronome\");\nvar Logger_1 = require(\"./util/Logger\");\nvar Snippet_1 = require(\"./sheet/Snippet\");\n/** Band */\nvar Band = /** @class */ (function () {\n    function Band(_a) {\n        var _b = _a === void 0 ? {} : _a, context = _b.context, musicians = _b.musicians, onMeasure = _b.onMeasure;\n        this.defaults = {\n            cycle: 4,\n            division: 3,\n            transpose: 0,\n            style: 'Medium Swing',\n        };\n        this.context = context || new AudioContext();\n        this.onMeasure = onMeasure;\n        this.musicians = musicians || [];\n        this.mix = this.setupMix(this.context);\n        this.metronome = new Metronome_1.Metronome(this.mix);\n    }\n    Band.prototype.setupMix = function (context) {\n        var mix = context.createGain();\n        mix.gain.value = 0.9;\n        mix.connect(context.destination);\n        return mix;\n    };\n    Band.prototype.addMember = function (musician) {\n        this.musicians = this.musicians.concat(musician);\n    };\n    Band.prototype.ready = function () {\n        return Promise.all([this.resume()].concat(this.musicians.map(function (m) { return m.ready; })));\n    };\n    Band.prototype.resume = function () {\n        var _this = this;\n        return this.context.resume ? this.context.resume().then(function () { return _this.context; }) : Promise.resolve(this.context);\n    };\n    Band.prototype.comp = function (sheet, settings) {\n        if (this.pulse) {\n            this.pulse.stop();\n        }\n        Logger_1.Logger.logLegend();\n        Logger_1.Logger.logSheet(sheet);\n        if (settings.onMeasure) {\n            this.onMeasure = settings.onMeasure;\n        }\n        console.log('sheet', sheet);\n        var measures = Sheet_1.Sheet.render(sheet.chords, settings.render);\n        console.log(Snippet_1.Snippet.from(measures));\n        settings = Object.assign(this.defaults, settings, { context: this.context });\n        this.play(measures, settings);\n    };\n    Band.prototype.play = function (measures, settings) {\n        var _this = this;\n        this.ready().then(function () {\n            _this.pulse = settings.pulse || new Pulse_1.Pulse(settings);\n            return _this.count(_this.pulse, settings.metronome ? null : 0);\n        }).then(function (tick) {\n            /* settings.deadline = tick.deadline; */\n            if (_this.onMeasure) {\n                // TODO: add onChord for setting tonics + circle chroma etc\n                _this.pulse.tickArray(measures.map(function (measure) { return ({ measure: measure }); }), function (tick) { return _this.onMeasure(tick.value.measure, tick); });\n            }\n            measures = measures.map(function (m) { return m.chords ? m.chords : m; });\n            console.log('Band#play', settings);\n            var musicians = (settings.musicians || _this.musicians);\n            if (settings.exact) {\n                musicians = _this.musicians.slice(0, 2);\n            }\n            musicians.forEach(function (musician) { return musician.play({ pulse: _this.pulse, measures: measures, settings: settings }); });\n            _this.pulse.start();\n        });\n    };\n    Band.prototype.count = function (pulse, bars) {\n        if (bars === void 0) { bars = 1; }\n        if (pulse.getMeasureLength() < 1.5) {\n            bars *= 2; //double countin bars when countin would be shorter than 1.5s\n        }\n        return this.metronome.count(pulse, bars);\n    };\n    return Band;\n}());\nexports.default = Band;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Musician = /** @class */ (function () {\n    function Musician(instrument) {\n        this.name = 'Musician';\n        this.gain = 1;\n        if (!instrument) {\n            console.warn('musician has no instrument', this);\n        }\n        this.instrument = instrument;\n        this.ready = this.instrument ? this.instrument.ready : Promise.resolve();\n    }\n    Musician.prototype.play = function (_a) {\n        var pulse = _a.pulse, measures = _a.measures, settings = _a.settings;\n        console.log('play..', pulse, measures, settings);\n    };\n    Musician.prototype.getGain = function (value) {\n        if (value === void 0) { value = 1; }\n        return value * this.gain * this.instrument.gain;\n    };\n    return Musician;\n}());\nexports.Musician = Musician;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"../util/util\");\nvar off = function () { return util_1.randomElement([0, [0, 0, 2]], [6, 1]); };\nvar eightFour = function () { return util_1.randomElement([[1, 0, 1], 1, [0, 0, 1, 1]], [4, 2, 1]); };\nvar eightOff = function () { return util_1.randomElement([[1, 0, 1], [0, 0, 1]], [4, 1]); };\nvar halfTriplet = function () { return util_1.randomElement([\n    [2, 0],\n    [[2, 0, 2], [0, 2, 0]],\n    [1, 1, 1, 1]\n], [2, 1, 1]); };\nexports.swing = {\n    name: 'Swing',\n    tempo: 130,\n    chords: function (_a) {\n        var measure = _a.measure, settings = _a.settings;\n        var r = Math.random() > 0.5 ? .6 : 0;\n        var t = settings.cycle + \"/\" + measure.length;\n        if (t === '4/1') {\n            return util_1.randomElement([\n                [[1, 0], [0, 0, 7], 0, 0],\n                [1, [0, 0, 2], 0, off()],\n                [[0, 0, 1], 0, 2, 0],\n                [[0, 0, 4], 0, 1, 0],\n                [2, 0, 0, 0],\n                [3, 0, 0, 0],\n                [1, 0, r, off()],\n                [[0, 0, 2], 0, r, 0],\n                [1.5, [0, 0, 2], 0, off()],\n            ]); //, [2, 1, 1]\n        }\n        if (t === '4/2') {\n            return util_1.randomElement([\n                [[1, 0], [0, 0, 7], 0, 0],\n                [1, [0, 0, 3], 0, 0],\n                [1, 0, 2, 0],\n                [2, 0, 1, 0],\n                [1, 0, .7, off()],\n                [[1, 0, 0], 0, .7, off()],\n                [[4, 0, 0], [0, 0, 2.8], 0, off()],\n            ]);\n        }\n        if (t === '4/3') {\n            return util_1.randomElement([\n                [1, [0, 0, 2], [0, 0, 4], 0],\n                [1, [2, 0, 0], 2, 0],\n                [1, 1, 2, 0],\n                [[2, 0, 0], 1, 2, 0],\n                [2, 0, 1, 1]\n            ]);\n        }\n        if ('4/4') {\n            return util_1.randomElement([\n                [1, 1, 1, 1],\n            ]);\n        }\n    },\n    bass: function () { return util_1.randomElement([\n        [1, 1, 1, 1],\n        /* [2, 0, 2, 0] */ \n    ]); },\n    crash: function (_a) {\n        var measures = _a.measures, index = _a.index;\n        var fill = index !== 0 && index % measures.length === 0;\n        if (fill) {\n            return [4, 0, 0, 0];\n        }\n        return [0, 0, 0, 0];\n    },\n    ride: function (_a) {\n        var measures = _a.measures, index = _a.index;\n        return util_1.randomElement([\n            [.6, [.9, 0, 1], .6, [.9, 0, 1]],\n            [.6, [.4, 0, 1], .8, [0, 0, 1],],\n            [.6, .9, [.6, 0, 1], 1],\n            [.6, .9, .6, [.9, 0, 1]],\n        ], [3, 2, 1, 2]);\n    },\n    hihat: function () { return [0, .8, 0, 1]; },\n    solo: function () { return util_1.randomElement([\n        [eightFour(), eightFour(), eightFour(), eightFour()],\n        [eightFour(), 2, 0, eightFour()],\n        [0, 0, eightFour(), eightFour()],\n        [[1, 0, 4], 0, eightFour(), eightFour()],\n        [3, 0, 0, eightFour()],\n        halfTriplet().concat(halfTriplet()),\n        [eightOff(), eightOff(), eightOff(), eightOff()],\n    ]); }\n    /* solo: () => [1, 1, 0, 1] */\n};\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"../util/util\");\nvar Musician_1 = require(\"./Musician\");\nvar swing_1 = require(\"../grooves/swing\");\nvar Voicing_1 = require(\"../harmony/Voicing\");\nvar tonal_1 = require(\"tonal\");\nvar Pianist = /** @class */ (function (_super) {\n    __extends(Pianist, _super);\n    function Pianist(instrument, props) {\n        if (props === void 0) { props = {}; }\n        var _this = _super.call(this, instrument) || this;\n        _this.name = 'Pianist';\n        _this.playedNotes = [];\n        _this.playedChords = [];\n        _this.defaults = { groove: swing_1.swing };\n        _this.min = Math.min;\n        _this.rollFactor = 1; // how much keyroll effect? controls interval between notes\n        _this.voicingOptions = {};\n        _this.props = Object.assign({}, _this.defaults, props || {});\n        return _this;\n    }\n    Pianist.prototype.play = function (_a) {\n        var _this = this;\n        var pulse = _a.pulse, measures = _a.measures, settings = _a.settings;\n        var groove = settings.groove || this.defaults.groove;\n        var grooveKey = 'chords';\n        this.voicingOptions = __assign({}, this.voicingOptions, settings.voicings || {});\n        // if no groove or groove without chords, or exact, play whats there\n        // TODO: exact timing is false with metronome\n        if (settings.exact || !groove || !groove[grooveKey]) {\n            if (!groove[grooveKey]) {\n                console.warn('Groove has no chords, Pianist will play exact.', groove);\n            }\n            measures = measures\n                .map(function (pattern, i) { return util_1.resolveChords(pattern, measures, [i]); });\n            return pulse.tickArray(measures, function (_a) {\n                var value = _a.value, deadline = _a.deadline;\n                var fraction = util_1.getDuration(value.divisions, 1);\n                // TODO: find out why value fraction is NaN\n                var duration = fraction * pulse.getMeasureLength();\n                _this.playChord(value.chord || value, { deadline: deadline, duration: duration, pulse: pulse });\n            });\n        }\n        // else, play groovy\n        var pattern = groove[grooveKey];\n        measures = measures\n            // generate random patterns\n            .map(function (measure) { return pattern({ measures: measures, pulse: pulse, measure: measure, settings: settings })\n            .slice(0, Math.floor(settings.cycle)); })\n            // fill in chords\n            .map(function (pattern, i) { return util_1.resolveChords(pattern, measures, [i]); })\n            // fix chords at last offbeat\n            .reduce(util_1.offbeatReducer(settings), []);\n        pulse.tickArray(measures, function (_a) {\n            var path = _a.path, value = _a.value, deadline = _a.deadline;\n            var measureLength = pulse.getMeasureLength();\n            var concurrency = settings.bpm / (_this.rollFactor || 1);\n            var interval = settings.arpeggio ? measureLength / settings.cycle : Math.random() / (concurrency * 20);\n            if (path[0] % 2 === 0 && !path[1] && !path[2]) {\n                interval = Math.random() / concurrency;\n            }\n            var duration = settings.arpeggio ? interval : value.fraction * measureLength;\n            var slice = settings.arpeggio ? Math.ceil(value.fraction / 1000 * 4) : null;\n            var gain = _this.getGain(value.gain);\n            _this.playChord(value.chord, { deadline: deadline, gain: gain, duration: duration, interval: interval, slice: slice, pulse: pulse });\n        }, settings.deadline);\n    };\n    Pianist.prototype.getLastVoicing = function () {\n        return this.playedNotes.length ? this.playedNotes[this.playedNotes.length - 1] : null;\n    };\n    // plays the given notes at the given interval\n    Pianist.prototype.playNotes = function (scorenotes, _a) {\n        var deadline = _a.deadline, interval = _a.interval, gain = _a.gain, duration = _a.duration, pulse = _a.pulse;\n        this.playedNotes.push([].concat(scorenotes));\n        this.instrument.playNotes(scorenotes, { deadline: deadline, interval: interval, gain: gain, duration: duration, pulse: pulse });\n    };\n    Pianist.prototype.playChord = function (chord, settings) {\n        if (chord === 'x') { // repeat\n            chord = this.playedChords[this.playedChords.length - 1];\n        }\n        if (!chord || chord === '0') {\n            this.playedChords.push('');\n            return;\n        }\n        this.playedChords.push(chord);\n        var notes = Voicing_1.Voicing.getNextVoicing(chord, this.getLastVoicing(), this.voicingOptions);\n        notes = notes.map(function (note) { return tonal_1.Note.simplify(note); });\n        settings.deadline += 0.02 + util_1.randomDelay(5);\n        this.playNotes(notes, settings);\n    };\n    return Pianist;\n}(Musician_1.Musician));\nexports.default = Pianist;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Musician_1 = require(\"./Musician\");\nvar swing_1 = require(\"../grooves/swing\");\nvar util_1 = require(\"../util/util\");\nvar Drummer = /** @class */ (function (_super) {\n    __extends(Drummer, _super);\n    function Drummer(instrument) {\n        var _this = _super.call(this, instrument) || this;\n        _this.name = 'Drummer';\n        _this.set = {\n            kick: 0,\n            snare: 1,\n            hihat: 2,\n            ride: 3,\n            crash: 4,\n            rimshot: 5\n        };\n        _this.defaults = { groove: swing_1.swing };\n        return _this;\n    }\n    Drummer.prototype.play = function (_a) {\n        var _this = this;\n        var measures = _a.measures, pulse = _a.pulse, settings = _a.settings;\n        var groove = settings.groove || this.defaults.groove;\n        Object.keys(groove)\n            .filter(function (t) { return Object.keys(_this.set).includes(t); }) // only use drum set patterns\n            .forEach(function (key) {\n            var patterns = measures\n                .map(function (measure, index) { return groove[key]({ measures: measures, index: index, measure: measure, settings: settings, pulse: pulse })\n                .slice(0, Math.floor(settings.cycle)); });\n            pulse.tickArray(patterns, function (_a) {\n                var deadline = _a.deadline, value = _a.value;\n                deadline += util_1.randomDelay(5);\n                _this.instrument.playKeys([_this.set[key]], { deadline: deadline, gain: _this.getGain(value) });\n            }, settings.deadline);\n        });\n    };\n    return Drummer;\n}(Musician_1.Musician));\nexports.default = Drummer;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"../util/util\");\nvar Musician_1 = require(\"./Musician\");\nvar tonal_1 = require(\"tonal\");\nvar swing_1 = require(\"../grooves/swing\");\nvar Harmony_1 = require(\"../harmony/Harmony\");\nvar Bassist = /** @class */ (function (_super) {\n    __extends(Bassist, _super);\n    function Bassist(instrument) {\n        var _this = _super.call(this, instrument) || this;\n        _this.name = 'Bassist';\n        _this.defaults = { groove: swing_1.swing };\n        _this.playedChords = [];\n        return _this;\n    }\n    Bassist.prototype.play = function (_a) {\n        var _this = this;\n        var measures = _a.measures, pulse = _a.pulse, settings = _a.settings;\n        var groove = settings.groove || this.defaults.groove;\n        var pattern = groove['bass'];\n        if (!pattern) {\n            console.warn('no bass pattern found in groove', groove);\n            return;\n        }\n        measures = measures\n            .map(function (measure) {\n            /* if (Array.isArray(measure)) {\n                return measure;\n            } */\n            return pattern({ measures: measures, measure: measure, settings: settings, pulse: pulse }).slice(0, Math.floor(settings.cycle));\n        })\n            .map(function (pattern, i) { return util_1.resolveChords(pattern, measures, [i]); });\n        pulse.tickArray(measures, function (tick) {\n            _this.playBass(tick, measures, pulse);\n        }, settings.deadline);\n    };\n    Bassist.prototype.getStep = function (step, chord, octave) {\n        if (octave === void 0) { octave = 2; }\n        var tokens = tonal_1.Chord.tokenize(Harmony_1.Harmony.getTonalChord(chord));\n        var interval = tonal_1.Chord.intervals(tokens[1]).find(function (i) { return parseInt(i[0]) === step; });\n        return tonal_1.Distance.transpose(tokens[0] + octave, interval);\n    };\n    Bassist.prototype.playBass = function (_a, measures, pulse) {\n        var value = _a.value, cycle = _a.cycle, path = _a.path, deadline = _a.deadline, interval = _a.interval;\n        var chord = value.chord;\n        if (chord === 'N.C.') {\n            return;\n        }\n        if (chord === 'x') {\n            chord = this.playedChords[this.playedChords.length - 1];\n        }\n        if (!chord || chord === '0') {\n            this.playedChords.push('');\n            return;\n        }\n        this.playedChords.push(chord);\n        var note;\n        /* const steps = [1, randomElement([3, 5]), 1, randomElement([3, 5])]; */\n        var steps = [1, 5, 1, util_1.randomElement([3, 5])];\n        var octave = 2;\n        if (steps[path[1]] === 1) {\n            note = Harmony_1.Harmony.getBassNote(chord) + octave;\n        }\n        else {\n            note = this.getStep(steps[path[1]], Harmony_1.Harmony.getTonalChord(chord), octave);\n        }\n        var duration = value.fraction * pulse.getMeasureLength();\n        deadline += util_1.randomDelay(10);\n        this.instrument.playNotes([note], { deadline: deadline, interval: interval, gain: this.getGain() * .7, duration: duration, pulse: pulse });\n    };\n    return Bassist;\n}(Musician_1.Musician));\nexports.default = Bassist;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Instrument_1 = require(\"./Instrument\");\nvar util_1 = require(\"../util/util\");\nvar Sampler = /** @class */ (function (_super) {\n    __extends(Sampler, _super);\n    function Sampler(options) {\n        if (options === void 0) { options = {}; }\n        var _this = _super.call(this, options) || this;\n        _this.buffers = {};\n        _this.duration = 10000;\n        _this.type = 'sine';\n        _this.gain = 1;\n        _this.attack = 0;\n        _this.decay = 0;\n        _this.sustain = 1;\n        _this.release = .2;\n        _this.gain = options.gain || _this.gain;\n        _this.gainNode = _this.context.createGain();\n        _this.gainNode.connect(_this.context.destination);\n        _this.duration = options.duration || _this.duration;\n        // this.overlap = options.overlap;\n        if (options.samples) {\n            _this.sources = options.samples;\n            _this.ready = _this.loadSources(options.samples);\n        }\n        return _this;\n    }\n    // returns buffer from buffer cache or loads buffer data from source\n    Sampler.prototype.getBuffer = function (src, context) {\n        var _this = this;\n        if (context === void 0) { context = this.context; }\n        if (this.buffers[src] && this.buffers[src].context === context) {\n            // console.log('buffer already present');\n            return Promise.resolve(this.buffers[src].buffer);\n        }\n        return fetch(src)\n            .then(function (res) { return res.arrayBuffer(); })\n            .then(function (buffer) {\n            return new Promise(function (resolve, reject) {\n                context.decodeAudioData(buffer, function (decodedData) {\n                    _this.buffers[src] = { buffer: decodedData, context: context };\n                    resolve(decodedData);\n                });\n            });\n        });\n    };\n    Sampler.prototype.getSource = function (buffer, connect) {\n        var source = this.context.createBufferSource();\n        connect = connect || this.gainNode;\n        source.buffer = buffer;\n        source.connect(connect);\n        return source;\n    };\n    Sampler.prototype.getSources = function (sources, context) {\n        var _this = this;\n        if (context === void 0) { context = this.context; }\n        if (!this.hasLoaded(sources)) {\n            console.error('not all sources loaded!!!');\n            return [];\n        }\n        return sources.map(function (source) { return _this.getSource(_this.buffers[source].buffer); });\n    };\n    // loads a sound file into the context\n    Sampler.prototype.loadSource = function (src, context) {\n        var _this = this;\n        if (context === void 0) { context = this.context; }\n        return this.getBuffer(src, context)\n            .then(function (decodedData) { return _this.getSource(decodedData); });\n    };\n    // loads multiple sources into the context\n    Sampler.prototype.loadSources = function (sources, context) {\n        var _this = this;\n        if (context === void 0) { context = this.context; }\n        sources.forEach(function (source, i) {\n            if (!source) {\n                console.warn(\"note at index \" + i + \" cannot be played!\");\n            }\n        });\n        return Promise.all(sources.filter(function (source) { return !!source; }).map(function (source) { return _this.loadSource(source, context); }));\n    };\n    Sampler.prototype.hasLoaded = function (sources, context) {\n        var _this = this;\n        if (context === void 0) { context = this.context; }\n        return sources.reduce(function (allLoaded, src) {\n            return allLoaded && _this.buffers[src] && _this.buffers[src].context === context;\n        }, true);\n    };\n    Sampler.prototype.playSounds = function (sounds, deadline, interval) {\n        if (deadline === void 0) { deadline = this.context.currentTime; }\n        if (interval === void 0) { interval = 0; }\n        sounds.forEach(function (sound, i) { return sound.start(deadline + interval * i); });\n    };\n    Sampler.prototype.playSource = function (source, settings) {\n        var gainNode = this.context.createGain();\n        if (!this.buffers[source]) {\n            console.warn('no buffer found for source', source);\n            return;\n        }\n        var sound = this.getSource(this.buffers[source].buffer, gainNode);\n        var _a = [\n            settings.attack || this.attack,\n            settings.decay || this.decay,\n            settings.sustain || this.sustain,\n            settings.release || this.release,\n            (settings.duration || this.duration) / 1000,\n            (settings.gain || 1) * this.gain\n        ], attack = _a[0], decay = _a[1], sustain = _a[2], release = _a[3], duration = _a[4], gain = _a[5];\n        var time = settings.deadline || this.context.currentTime;\n        //gainNode.gain.value = typeof settings.gain === 'number' ? settings.gain : this.gain;\n        gainNode.connect(this.mix);\n        util_1.adsr({ attack: attack, decay: decay, sustain: sustain, release: release, gain: gain, duration: duration }, time, gainNode.gain);\n        this.playSounds([sound], time); //, settings.interval\n    };\n    /* playSources(sources, deadline = 0, interval = 0) {\n        if (this.hasLoaded(sources, this.context)) {\n            this.playSounds(this.getSources(sources, this.context), deadline, interval)\n        } else {\n            console.warn('need to load');\n            this.loadSources(sources, this.context)\n                .then(sounds => this.playSounds(sounds, deadline, interval));\n        }\n    } */\n    Sampler.prototype.playKeys = function (keys, settings) {\n        var _this = this;\n        _super.prototype.playKeys.call(this, keys, settings);\n        keys.forEach(function (key, index) {\n            if (settings.delay) {\n                settings.deadline += settings.delay;\n            }\n            _this.playSource(_this.sources[key], settings);\n        });\n    };\n    return Sampler;\n}(Instrument_1.Instrument));\nexports.Sampler = Sampler;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Kick = /** @class */ (function () {\n    function Kick(context) {\n        this.context = context;\n    }\n    Kick.prototype.setup = function () {\n        this.osc = this.context.createOscillator();\n        this.gain = this.context.createGain();\n        this.osc.connect(this.gain);\n        this.gain.connect(this.context.destination);\n    };\n    Kick.prototype.trigger = function (time) {\n        this.setup();\n        this.osc.frequency.setValueAtTime(150, time);\n        this.gain.gain.setValueAtTime(1, time);\n        this.osc.frequency.exponentialRampToValueAtTime(0.01, time + 0.5);\n        this.gain.gain.exponentialRampToValueAtTime(0.01, time + 0.5);\n        this.osc.start(time);\n        this.osc.stop(time + 0.5);\n    };\n    return Kick;\n}());\nexports.Kick = Kick;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Snare = /** @class */ (function () {\n    function Snare(context) {\n        this.context = context;\n    }\n    Snare.prototype.noiseBuffer = function () {\n        var bufferSize = this.context.sampleRate;\n        var buffer = this.context.createBuffer(1, bufferSize, this.context.sampleRate);\n        var output = buffer.getChannelData(0);\n        for (var i = 0; i < bufferSize; i++) {\n            output[i] = Math.random() * 2 - 1;\n        }\n        return buffer;\n    };\n    Snare.prototype.setup = function () {\n        this.noise = this.context.createBufferSource();\n        this.noise.buffer = this.noiseBuffer();\n        var noiseFilter = this.context.createBiquadFilter();\n        noiseFilter.type = 'highpass';\n        noiseFilter.frequency.value = 1000;\n        this.noise.connect(noiseFilter);\n        this.noiseEnvelope = this.context.createGain();\n        noiseFilter.connect(this.noiseEnvelope);\n        this.noiseEnvelope.connect(this.context.destination);\n        this.osc = this.context.createOscillator();\n        this.osc.type = 'triangle';\n        this.oscEnvelope = this.context.createGain();\n        this.osc.connect(this.oscEnvelope);\n        this.oscEnvelope.connect(this.context.destination);\n    };\n    ;\n    Snare.prototype.trigger = function (time) {\n        this.setup();\n        this.noiseEnvelope.gain.setValueAtTime(1, time);\n        this.noiseEnvelope.gain.exponentialRampToValueAtTime(0.01, time + 0.2);\n        this.noise.start(time);\n        this.osc.frequency.setValueAtTime(100, time);\n        this.oscEnvelope.gain.setValueAtTime(0.7, time);\n        this.oscEnvelope.gain.exponentialRampToValueAtTime(0.01, time + 0.1);\n        this.osc.start(time);\n        this.osc.stop(time + 0.2);\n        this.noise.stop(time + 0.2);\n    };\n    ;\n    return Snare;\n}());\nexports.Snare = Snare;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Instrument_1 = require(\"./Instrument\");\nvar Kick_1 = require(\"./Kick\");\nvar Snare_1 = require(\"./Snare\");\nvar PlasticDrums = /** @class */ (function (_super) {\n    __extends(PlasticDrums, _super);\n    function PlasticDrums(options) {\n        var _this = _super.call(this, options) || this;\n        _this.keys = [\n            new Kick_1.Kick(_this.context),\n            new Snare_1.Snare(_this.context)\n        ];\n        return _this;\n    }\n    PlasticDrums.prototype.playKeys = function (keys, _a) {\n        var _this = this;\n        var deadline = _a.deadline, gain = _a.gain, value = _a.value;\n        var sounds = keys.filter(function (key) { return !!_this.keys[key]; }).map(function (key) { return _this.keys[key]; });\n        if (sounds.length < keys.length) {\n            var missing = keys.filter(function (key) { return !_this.keys[key]; });\n            // console.warn('PlasticDrums missing keys:', missing);\n        }\n        sounds.forEach(function (sound) { return sound.trigger(deadline); });\n    };\n    return PlasticDrums;\n}(Instrument_1.Instrument));\nexports.PlasticDrums = PlasticDrums;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Improvisation = /** @class */ (function () {\n    function Improvisation(rules) {\n        this.rules = rules;\n        this.cache = {};\n    }\n    Improvisation.prototype.get = function (key, fromCache) {\n        if (fromCache === void 0) { fromCache = false; }\n        if (fromCache) {\n            return this.cache[key];\n        }\n        var rule = this.rules[key];\n        if (rule === undefined) {\n            console.error('could not resolve key', key, '!');\n        }\n        if (typeof rule === 'function') {\n            rule = rule(this.getRuleFactories(key));\n        }\n        this.cache[key] = rule;\n        return rule;\n    };\n    Improvisation.prototype.enhance = function (rules) {\n        return new Improvisation(Object.assign({}, this.rules, rules));\n    };\n    Improvisation.prototype.mutate = function (reducer) {\n        this.rules = Object.assign({}, this.rules, reducer(this.getRuleFactories()));\n        return this;\n    };\n    Improvisation.prototype.getRuleFactories = function (originKey) {\n        var _this = this;\n        return Object.keys(this.rules)\n            .map(function (key) { return ({ key: key, factory: function () { return _this.get(key); } }); })\n            .reduce(function (factories, _a) {\n            var key = _a.key, factory = _a.factory;\n            var _b, _c;\n            return (Object.assign({}, factories, (_b = {}, _b[key] = factory, _b), (originKey ? (_c = {}, _c[originKey] = function () { return _this.cache[originKey]; }, _c) : {})));\n        }, {});\n    };\n    return Improvisation;\n}());\nexports.Improvisation = Improvisation;\n/**\n *\n * methods: { [method: string]: ImprovisationRules } = {\n        guideTones: {\n            pattern: [3, 7]\n        },\n        flippedGuideTones: {\n            pattern: [3, 7],\n            flip: true,\n        },\n        chordTones: {\n            pattern: [1, 3, 7],\n            variance: .5,\n            variety: .5,\n            drill: .5,\n            flip: ({ drill }) => Math.random() * Math.abs(drill()) > .5,\n        }\n    }\n */ \n","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar swing_1 = require(\"../grooves/swing\");\nvar tonal_1 = require(\"tonal\");\nvar util_1 = require(\"../util/util\");\nvar Improvisation_1 = require(\"./Improvisation\");\nvar Harmony_1 = require(\"../harmony/Harmony\");\nexports.permutator = new Improvisation_1.Improvisation({\n    groove: swing_1.swing,\n    groovePattern: function (_a) {\n        var groove = _a.groove;\n        return groove()['solo'] || (function (m) {\n            return m.measure.map(function () { return [1]; });\n        });\n    },\n    octave: 4,\n    reach: 1,\n    lineBreaks: false,\n    direction: null,\n    force: false,\n    flip: false,\n    playedNotes: [],\n    fixRange: true,\n    startRandom: false,\n    range: ['Bb3', 'Bb5'],\n    /* chanceCurve: () => (distance, length) => (length - distance) * 10, */\n    firstNoteInPattern: function (_a) {\n        var pattern = _a.pattern, chord = _a.chord;\n        return util_1.getPatternInChord([pattern()[0]], chord());\n    },\n    firstNote: function (_a) {\n        var randomNote = _a.randomNote, firstNoteInPattern = _a.firstNoteInPattern, startRandom = _a.startRandom, octave = _a.octave;\n        return startRandom() ? randomNote() : firstNoteInPattern() + octave();\n    },\n    lastNote: function (_a) {\n        var playedNotes = _a.playedNotes;\n        return playedNotes().length ? playedNotes()[0] : null;\n    },\n    material: function (_a) {\n        var pattern = _a.pattern, chord = _a.chord;\n        return util_1.getPatternInChord(pattern(), chord());\n    },\n    randomNote: function (_a) {\n        var material = _a.material, octave = _a.octave;\n        return util_1.randomElement(material()) + octave();\n    },\n    nextNotes: function (_a) {\n        var fixRange = _a.fixRange, firstNote = _a.firstNote, chord = _a.chord, reach = _a.reach, lineBreaks = _a.lineBreaks, lastNote = _a.lastNote, range = _a.range, material = _a.material, direction = _a.direction, force = _a.force, flip = _a.flip;\n        var note;\n        if (!lastNote() || lineBreaks()) {\n            note = firstNote();\n        }\n        else {\n            var choices = material();\n            if (!choices.length) {\n                console.warn('no choice..');\n                return;\n            }\n            var targets = Harmony_1.Harmony.getNearestTargets(lastNote(), material(), direction(), flip());\n            targets = targets.slice(0, reach());\n            note = util_1.randomElement(targets);\n            note = tonal_1.Note.simplify(note, true);\n        }\n        if (fixRange()) {\n            note = util_1.transposeToRange([note], range())[0];\n        }\n        var step = util_1.getStepInChord(note, chord());\n        /* console.log(`${step} in ${chord()} = ${note}`); */\n        return [note];\n    }\n});\n/** MODIFIERS */\nvar getStraightBar = function (notes, cycle) {\n    if (cycle === void 0) { cycle = 4; }\n    return new Array(cycle).fill(new Array(Math.ceil(notes / cycle)).fill(1));\n};\nvar straightNotes = function (n, cycle) {\n    if (cycle === void 0) { cycle = 4; }\n    return ({\n        groove: null,\n        groovePattern: function () { return (function (m) {\n            return getStraightBar(n, cycle);\n        }); },\n    });\n};\nvar fixedNotesPerChord = function (n, cycle) {\n    if (cycle === void 0) { cycle = 4; }\n    return ({\n        groove: null,\n        groovePattern: function () { return (function (m) { return m.measure.map(function () {\n            return getStraightBar(n, cycle);\n        }); }); },\n    });\n};\nvar pendulum = function (defaultDirection, softForce, comfort) {\n    if (defaultDirection === void 0) { defaultDirection = 'up'; }\n    if (softForce === void 0) { softForce = false; }\n    if (comfort === void 0) { comfort = .4; }\n    return ({\n        exclude: 1,\n        force: !softForce ? true : function (_a) {\n            var lastNote = _a.lastNote, range = _a.range;\n            var position = util_1.getRangePosition(lastNote(), range());\n            return position < 0 || position > 1; // only force if out of range..    \n        },\n        fixRange: false,\n        direction: function (_a) {\n            var lastNote = _a.lastNote, range = _a.range, direction = _a.direction, barNumber = _a.barNumber, isBarStart = _a.isBarStart;\n            var position = util_1.getRangePosition(lastNote(), range());\n            var comfortSwitchBars = 1; // switch direction each x bars when in comfort zone\n            var isComfortZone = (position > comfort && position < 1 - comfort);\n            if ((position <= 0 && direction() === 'down') ||\n                (position >= 1 && direction() === 'up') ||\n                (isComfortZone && isBarStart() && barNumber() % comfortSwitchBars === 0)) {\n                /* console.log('change direction', otherDirection(direction(), defaultDirection)); */\n                return util_1.otherDirection(direction(), defaultDirection);\n            }\n            return direction() || defaultDirection;\n        }\n    });\n};\nvar beatPattern = function (_a) {\n    var pattern = _a.pattern, on = _a.on, off = _a.off, barStart = _a.barStart;\n    return ({\n        beatPattern: function (_a) {\n            var isBarStart = _a.isBarStart, isOffbeat = _a.isOffbeat;\n            if (isBarStart()) {\n                return barStart || on || pattern;\n            }\n            else if (!isOffbeat()) {\n                return on || pattern;\n            }\n            return off || pattern;\n        },\n        pattern: function (_a) {\n            var beatPattern = _a.beatPattern;\n            return beatPattern();\n        },\n    });\n};\nvar notesPerChord = function (n) { return (__assign({}, fixedNotesPerChord(1, n))); };\nvar patternPractise = function (direction, notes, lineBreaks) {\n    if (direction === void 0) { direction = 'up'; }\n    if (notes === void 0) { notes = 4; }\n    if (lineBreaks === void 0) { lineBreaks = false; }\n    return (__assign({}, straightNotes(notes), { firstNoteInPattern: function (_a) {\n            var pattern = _a.pattern, chord = _a.chord;\n            return util_1.getPatternInChord(direction === 'up' ? [pattern()[0]] : pattern().slice(-1), chord());\n        }, direction: direction, force: true, fixRange: false, lineBreaks: function (_a) {\n            var isBarStart = _a.isBarStart;\n            return lineBreaks ? isBarStart() : false;\n        }, exclude: 1, reach: 1 }));\n};\n/** FORMULAS */\nexports.advancedPermutator = exports.permutator.enhance({\n    drill: .5,\n    direction: function (_a) {\n        var drill = _a.drill;\n        return drill() > 0 ? 'up' : 'down';\n    },\n    force: function (_a) {\n        var drill = _a.drill;\n        return Math.random() * Math.abs(drill()) > .5;\n    },\n    exclude: 1,\n    reach: 1,\n    material: function (_a) {\n        var pattern = _a.pattern, chord = _a.chord, playedNotes = _a.playedNotes, exclude = _a.exclude;\n        var all = util_1.getPatternInChord(pattern(), chord());\n        if (!playedNotes().length) {\n            return all;\n        }\n        var excludeNotes = playedNotes()\n            .slice(0, exclude())\n            .map(function (n) { return tonal_1.Note.pc(n); });\n        return all.filter(function (n) { return !excludeNotes.includes(n); });\n    }\n});\nexports.guideTones = exports.advancedPermutator.enhance(__assign({ name: 'Guide Lines' }, notesPerChord(1), pendulum('down', true), { pattern: [3, 7], exclude: 0 }));\nexports.guideTonesFlipped = exports.guideTones.enhance({\n    name: 'Distant Guide Tones',\n    flip: true\n});\nexports.chordTones = exports.advancedPermutator.enhance({\n    name: 'Only Chord Tones',\n    pattern: [1, 3, 5, 7],\n    drill: .75,\n    direction: function (_a) {\n        var drill = _a.drill;\n        return drill() > 0 ? 'up' : 'down';\n    },\n});\n/* export const digitalPattern = advancedPermutator.enhance({\n    pattern: ({ chord }) => getDigitalPattern(chord()),\n    ...pendulum(),\n    ...straightNotes(4)\n}); */\nexports.fullScale = exports.advancedPermutator.enhance(__assign({ name: 'Heptatonic' }, beatPattern({ on: [1, 3, 5, 7], off: [1, 2, 3, 4, 5, 6, 7] }), pendulum()));\nexports.scalePendulum = exports.advancedPermutator.enhance(__assign({ name: 'Heptatonic Pendulum' }, beatPattern({ pattern: [1, 2, 3, 4, 5, 6, 7] }), pendulum(), straightNotes(8)));\nexports.digitalPattern = exports.advancedPermutator.enhance(__assign({ name: 'Digital Patterns', pattern: function (_a) {\n        var chord = _a.chord;\n        return util_1.getDigitalPattern(chord());\n    } }, pendulum('up', true, .2), { exclude: 2, reach: 3 }));\nexports.digitalPendulum = exports.advancedPermutator.enhance(__assign({ name: 'Digital Pendulum', pattern: function (_a) {\n        var chord = _a.chord;\n        return util_1.getDigitalPattern(chord());\n    } }, pendulum('up', false, 1), straightNotes(8), { \n    /* lineBreaks: ({ isBarStart }) => isBarStart(), */\n    exclude: 1, reach: 1 }));\nexports.digitalWalker = exports.advancedPermutator.enhance(__assign({ name: 'Digital Fourths', pattern: function (_a) {\n        var chord = _a.chord;\n        return util_1.getDigitalPattern(chord());\n    } }, pendulum('up', true, .4), straightNotes(4), { lineBreaks: false, \n    /* lineBreaks: ({ isBarStart }) => isBarStart(), */\n    exclude: 2, reach: 2 }));\nexports.digitalPractiseUp = exports.advancedPermutator.enhance(__assign({ name: 'Digital Practise Up' }, patternPractise('up', 4, true), { pattern: function (_a) {\n        var chord = _a.chord;\n        return util_1.getDigitalPattern(chord());\n    } }));\nexports.digitalPractiseDown = exports.advancedPermutator.enhance(__assign({ name: 'Digital Practise Down' }, patternPractise('down', 4, true), { pattern: function (_a) {\n        var chord = _a.chord;\n        return util_1.getDigitalPattern(chord());\n    } }));\nexports.heptatonicPractise = exports.advancedPermutator.enhance(__assign({ name: 'Heptatonic Practise' }, patternPractise('up', 8, false), beatPattern({ barStart: [1], on: [3, 5, 7], off: [1, 2, 3, 4, 5, 6, 7] })));\nexports.defaultMethod = exports.guideTones;\nexports.improvisationMethods = {\n    guideTones: exports.guideTones,\n    guideTonesFlipped: exports.guideTonesFlipped,\n    chordTones: exports.chordTones,\n    digitalPattern: exports.digitalPattern,\n    digitalPendulum: exports.digitalPendulum,\n    digitalWalker: exports.digitalWalker,\n    fullScale: exports.fullScale,\n    scalePendulum: exports.scalePendulum,\n    digitalPractiseUp: exports.digitalPractiseUp,\n    digitalPractiseDown: exports.digitalPractiseDown,\n};\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar swing_1 = require(\"../grooves/swing\");\nvar methods_1 = require(\"../improvisation/methods\");\nvar util_1 = require(\"../util/util\");\nvar Musician_1 = require(\"./Musician\");\nvar Improvisor = /** @class */ (function (_super) {\n    __extends(Improvisor, _super);\n    function Improvisor(instrument, method) {\n        var _this = _super.call(this, instrument) || this;\n        _this.name = 'Improvisor';\n        _this.defaultMethod = methods_1.defaultMethod;\n        method = method || _this.defaultMethod;\n        _this.method = method /* .enhance({\n            range: ['F3', 'F5']\n        }) */;\n        return _this;\n    }\n    Improvisor.prototype.useMethod = function (method) {\n        this.method = method;\n    };\n    Improvisor.prototype.play = function (_a) {\n        var _this = this;\n        var measures = _a.measures, pulse = _a.pulse, settings = _a.settings;\n        if (settings.method) {\n            this.useMethod(settings.method);\n        }\n        var groove = settings.groove || swing_1.swing;\n        this.method.mutate(function () { return ({ groove: groove, playedNotes: [] }); });\n        var pattern = this.method.get('groovePattern');\n        measures = measures\n            .map(function (measure) { return pattern({ measures: measures, measure: measure, settings: settings, pulse: pulse }); }\n        /*     .slice(0, Math.floor(settings.cycle)) */\n        )\n            .map(function (pattern, i) { return util_1.resolveChords(pattern, measures, [i]); });\n        pulse.tickArray(measures, function (tick) {\n            _this.improvise(tick, measures, pulse);\n        }, settings.deadline);\n    };\n    Improvisor.prototype.improvise = function (_a, measures, pulse) {\n        var _this = this;\n        var value = _a.value, deadline = _a.deadline, interval = _a.interval;\n        var chord = value.chord;\n        if (chord === 'N.C.') {\n            return;\n        }\n        this.method.mutate(function () { return ({\n            chord: chord,\n            isFormStart: util_1.isFormStart(value.path),\n            isBarStart: util_1.isBarStart(value.path),\n            isOffbeat: util_1.isOffbeat(value.path),\n            // TODO: is ChordStart\n            barNumber: value.path[0]\n        }); })\n            .mutate(function (_a) {\n            var nextNotes = _a.nextNotes, playedNotes = _a.playedNotes;\n            var pick = nextNotes();\n            var duration = value.fraction * pulse.getMeasureLength();\n            _this.instrument.playNotes(pick, { deadline: deadline, interval: interval, gain: _this.getGain(), duration: duration, pulse: pulse });\n            return {\n                playedNotes: [].concat(pick, playedNotes())\n            };\n        });\n    };\n    return Improvisor;\n}(Musician_1.Musician));\nexports.default = Improvisor;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"./util/util\");\nvar Band_1 = __importDefault(require(\"./Band\"));\nvar Pianist_1 = __importDefault(require(\"./musicians/Pianist\"));\nvar Bassist_1 = __importDefault(require(\"./musicians/Bassist\"));\nvar Drummer_1 = __importDefault(require(\"./musicians/Drummer\"));\nvar PlasticDrums_1 = require(\"./instruments/PlasticDrums\");\nvar Improvisor_1 = __importDefault(require(\"./musicians/Improvisor\"));\nvar Trio = /** @class */ (function (_super) {\n    __extends(Trio, _super);\n    function Trio(_a) {\n        var context = _a.context, piano = _a.piano, bass = _a.bass, drums = _a.drums, onMeasure = _a.onMeasure, solo = _a.solo;\n        var _this = _super.call(this, { context: context, onMeasure: onMeasure }) || this;\n        var instruments = _this.setupInstruments({ piano: piano, bass: bass, drums: drums });\n        _this.pianist = new Pianist_1.default(instruments.piano);\n        _this.bassist = new Bassist_1.default(instruments.bass);\n        _this.drummer = new Drummer_1.default(instruments.drums);\n        _this.musicians = [_this.pianist, _this.bassist, _this.drummer];\n        if (solo) {\n            // this.soloist = new Permutator(instruments.piano);\n            _this.soloist = new Improvisor_1.default(instruments.piano);\n            _this.musicians.push(_this.soloist);\n        }\n        return _this;\n    }\n    Trio.prototype.setupInstruments = function (_a) {\n        var piano = _a.piano, bass = _a.bass, drums = _a.drums;\n        bass = bass || util_1.randomSynth(this.mix);\n        piano = piano || util_1.randomSynth(this.mix);\n        drums = drums || new PlasticDrums_1.PlasticDrums({ mix: this.mix });\n        return { piano: piano, bass: bass, drums: drums };\n    };\n    return Trio;\n}(Band_1.default));\nexports.Trio = Trio;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Measure_1 = require(\"./Measure\");\n// extension of https://github.com/daumling/ireal-renderer/blob/master/src/ireal-renderer.js\nvar RealParser = /** @class */ (function () {\n    function RealParser() {\n    }\n    RealParser.getChord = function (iRealChord) {\n        return iRealChord.note + iRealChord.modifiers + (iRealChord.over ? '/' + this.getChord(iRealChord.over) : '');\n    };\n    RealParser.parseSheet = function (raw) {\n        var tokens = RealParser.parse(raw);\n        return RealParser.getSheet(tokens);\n    };\n    RealParser.getSheet = function (tokens) {\n        var _this = this;\n        var parsed = tokens\n            .reduce(function (current, token, index, array) {\n            var lastBarEnded = ['{', '|', '[', '||' /* 'Z',  */ /* , ']' */]\n                .includes(token.bars || token.token);\n            var signs = token.annots || [];\n            var repeatStart = (token.bars || token.token) === '{';\n            var repeatEnd = (token.bars || token.token) === '}';\n            if (repeatStart) {\n                signs.push('{');\n            }\n            if (repeatEnd) {\n                signs.push('}');\n            }\n            // current.measure ends\n            if (lastBarEnded) {\n                if (current.measure) {\n                    // simplify measure if no signs\n                    /* if (Object.keys(current.measure).find(k=>k)) {\n                        current.measure = current.measure.chords;\n                    } */\n                    current.measures.push(current.measure);\n                }\n                current.measure = { chords: [] };\n            }\n            var sectionStart = signs.find(function (a) { return a.match(/^\\*[a-zA-Z]/); });\n            if (sectionStart) {\n                signs = signs.filter(function (s) { return s !== sectionStart; });\n                current.measure.section = sectionStart.replace('*', '');\n            }\n            var hasCodaSign = signs.includes('Q');\n            if (hasCodaSign) {\n                signs = signs.filter(function (s) { return s !== 'Q'; });\n                var codaSign = 'ToCoda';\n                if (!!current.measures.find(function (m) { return Measure_1.Measure.hasSign('ToCoda', m); })) {\n                    codaSign = 'Coda';\n                }\n                current.measure.signs = (current.measure.signs || []).concat([codaSign]);\n            }\n            var houseStart = signs.find(function (s) { return !!s.match(/^N./); });\n            if (houseStart) {\n                signs = signs.filter(function (s) { return s !== houseStart; });\n                current.measure.house = parseInt(houseStart.replace('N', ''));\n            }\n            var time = signs.find(function (a) { return a.match(/^T\\d\\d/); });\n            if (time) {\n                signs = signs.filter(function (s) { return s !== time; });\n                current.measure.time = time.replace('T', '');\n            }\n            if (token.chord) {\n                current.measure.chords.push(_this.getChord(token.chord));\n            }\n            else if (token.token === 'n') {\n                current.measure.chords.push(0);\n            }\n            var last = current.measures[current.measures.length - 1];\n            if (last && last.chords[0] === 'r') {\n                last.chords = current.measures[current.measures.length - 3].chords;\n                current.measure.chords = current.measures[current.measures.length - 2].chords;\n            }\n            if (last && current.measure.chords[0] === 'x') {\n                current.measure.chords = [].concat(last.chords);\n                current.measure.idle = true;\n            }\n            if (signs.length) {\n                current.measure.signs = (current.measure.signs || [])\n                    .concat(signs);\n            }\n            if (token.comments.length) {\n                current.measure.comments = (current.measure.comments || [])\n                    .concat(token.comments.map(function (c) { return c.trim(); }));\n            }\n            return current;\n        }, { measure: null, signs: null, measures: [] });\n        if (parsed.measure.chords.length) {\n            parsed.measures.push(parsed.measure);\n        }\n        return parsed.measures;\n    };\n    RealParser.parse = function (raw) {\n        var text = raw;\n        var arr = [], headers = [], comments = [];\n        var i;\n        text = text.trim();\n        // text = text.trimRight();\n        while (text) {\n            var found = false;\n            for (i = 0; i < RealParser.regExps.length; i++) {\n                var match = RealParser.regExps[i].exec(text);\n                if (match) {\n                    found = true;\n                    if (match.length <= 2) {\n                        var replacement = match[0];\n                        var repl = RealParser.replacements[replacement];\n                        arr = arr.concat(repl ? repl : [replacement]);\n                        text = text.substr(replacement.length);\n                    }\n                    else { // a chord\n                        arr.push(match);\n                        text = text.substr(match[0].length);\n                    }\n                    break;\n                }\n            }\n            if (!found) {\n                // ignore the comma separator\n                if (text[0] !== ',')\n                    arr.push(text[0]);\n                text = text.substr(1);\n            }\n        }\n        //\t\tconsole.log(arr);\n        // pass 2: extract prefixes, suffixes, annotations and comments\n        var out = [];\n        var obj = RealParser.newToken(out);\n        for (i = 0; i < arr.length; i++) {\n            var token = arr[i];\n            if (token instanceof Array) {\n                obj.chord = RealParser.parseChord(token);\n                token = \" \";\n            }\n            switch (token[0]) {\n                case ',':\n                    token = null;\n                    break; // separator\n                case 'S': // segno\n                case 'T': // time measurement\n                case 'Q': // coda\n                case 'N': // repeat\n                case 'U': // END\n                case 's': // small\n                case 'l': // normal\n                case 'f': // fermata\n                case '*':\n                    obj.annots.push(token);\n                    token = null;\n                    break;\n                case 'Y':\n                    obj.spacer++;\n                    token = null;\n                    break;\n                case 'r':\n                case 'x':\n                case 'W':\n                    obj.chord = new iRealChord(token, \"\", null, null);\n                    break;\n                case '<':\n                    token = token.substr(1, token.length - 2);\n                    token = token.replace(/XyQ/g, \"   \"); // weird; needs to be done\n                    obj.comments.push(token);\n                    token = null;\n                    break;\n                default:\n            }\n            if (token) {\n                if (\"]}Z\".indexOf(arr[i + 1]) >= 0)\n                    obj.bars += arr[++i];\n                if (\"{[|\".indexOf(token) >= 0) {\n                    obj.bars += token;\n                    token = null;\n                }\n            }\n            if (token && i < arr.length - 1) {\n                obj.token = token;\n                obj = RealParser.newToken(out);\n            }\n        }\n        return out;\n    };\n    RealParser.parseChord = function (match) {\n        var note = match[1] || \" \";\n        var modifiers = match[2] || \"\";\n        var comment = match[3] || \"\";\n        if (comment)\n            modifiers += comment.substr(1, comment.length - 2).replace(\"XyQ\", \"   \");\n        var over = match[4] || \"\";\n        if (over[0] === '/')\n            over = over.substr(1);\n        var alternate = match[5] || null;\n        if (alternate) {\n            match = RealParser.chordRegex.exec(alternate.substr(1, alternate.length - 2));\n            if (!match)\n                alternate = null;\n            else\n                alternate = this.parseChord(match);\n        }\n        // empty cell?\n        if (note === \" \" && !alternate && !over)\n            return null;\n        if (over) {\n            var offset = (over[1] === '#' || over[1] === 'b') ? 2 : 1;\n            over = new iRealChord(over.substr(0, offset), over.substr(offset), null, null);\n        }\n        else\n            over = null;\n        return new iRealChord(note, modifiers, over, alternate);\n    };\n    RealParser.newToken = function (arr) {\n        var obj = new iRealToken;\n        arr.push(obj);\n        return obj;\n    };\n    /**\n     * The RegExp for a complete chord. The match array contains:\n     * 1 - the base note\n     * 2 - the modifiers (+-ohd0123456789 and su for sus)\n     * 3 - any comments (may be e.g. add, sub, or private stuff)\n     * 4 - the \"over\" part starting with a slash\n     * 5 - the top chord as (chord)\n     * @type RegExp\n     */\n    RealParser.chordRegex = /^([ A-GW][b#]?)((?:sus|[\\+\\-\\^\\dhob#])*)(\\*.+?\\*)*(\\/[A-G][#b]?)?(\\(.*?\\))?/;\n    RealParser.regExps = [\n        /^\\*[a-zA-Z]/,\n        /^T\\d\\d/,\n        /^N./,\n        /^<.*?>/,\n        /^ \\(.*?\\)/,\n        RealParser.chordRegex,\n        /^LZ/,\n        /^XyQ/,\n        /^Kcl/ // repeat last bar\n    ];\n    RealParser.replacements = {\n        \"LZ\": [\" \", \"|\"],\n        \"XyQ\": [\" \", \" \", \" \"],\n        \"Kcl\": [\"|\", \"x\", \" \"]\n    };\n    return RealParser;\n}());\nexports.RealParser = RealParser;\nvar iRealChord = /** @class */ (function () {\n    function iRealChord(note, modifiers, over, alternate) {\n        this.note = note;\n        this.modifiers = modifiers;\n        this.over = over;\n        this.alternate = alternate;\n    }\n    return iRealChord;\n}());\nvar iRealToken = /** @class */ (function () {\n    function iRealToken() {\n        this.annots = [];\n        this.comments = [];\n        this.bars = \"\";\n        this.spacer = 0;\n        this.chord = null;\n    }\n    return iRealToken;\n}());\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Instrument_1 = require(\"./Instrument\");\nvar MidiOut = /** @class */ (function (_super) {\n    __extends(MidiOut, _super);\n    function MidiOut(props) {\n        var _this = _super.call(this, props) || this;\n        _this.gain = 0.9;\n        _this.output = 'Scarlett 6i6 USB';\n        _this.gain = props.gain || _this.gain;\n        if (!navigator['requestMIDIAccess']) {\n            console.warn('This browser does not support WebMIDI!');\n            return _this;\n        }\n        navigator['requestMIDIAccess']().then(function (midi) { return _this.midiInit(midi); }, _this.midiFail);\n        return _this;\n    }\n    MidiOut.prototype.midiInit = function (midi) {\n        var _this = this;\n        console.log('midi init', midi);\n        console.log(midi.outputs.size, 'outputs');\n        console.log(midi.inputs.size, 'inputs');\n        this.midi = midi;\n        midi.outputs.forEach(function (output) {\n            console.log('ouput', output);\n        });\n        midi.inputs.forEach(function (input) {\n            console.log('input', input);\n            input.onmidimessage = _this.getMidiMessage;\n        });\n        this.onTrigger = function (_a) {\n            var on = _a.on, off = _a.off;\n            on.forEach(function (_a) {\n                var midi = _a.midi, gain = _a.gain, deadline = _a.deadline;\n                _this.noteOn(midi, Math.round(gain * 127), deadline);\n            });\n            off.forEach(function (event) {\n                _this.noteOff(event.midi, Math.round(event.gain * 127));\n            });\n        };\n    };\n    MidiOut.prototype.midiFail = function () {\n        console.warn('could not get midi access!');\n    };\n    MidiOut.prototype.getMidiMessage = function (message) {\n        console.log('midi data', message.data, 'message', message);\n    };\n    MidiOut.prototype.send = function (message, deadline) {\n        var _this = this;\n        if (!this.midi) {\n            console.warn('tried to play keys but midi was not ready');\n            return;\n        }\n        console.log('send', message, deadline);\n        this.midi.outputs.forEach(function (output) {\n            if (true || output.name === _this.output) {\n                output.send(message);\n            }\n        });\n    };\n    MidiOut.prototype.noteOn = function (key, velocity, deadline) {\n        if (velocity === void 0) { velocity = 127; }\n        if (deadline === void 0) { deadline = 0; }\n        this.send([144, key, 0x7f], deadline); //velocity\n    };\n    MidiOut.prototype.noteOff = function (key, velocity, deadline) {\n        if (velocity === void 0) { velocity = 127; }\n        if (deadline === void 0) { deadline = 0; }\n        this.send([144, key, 0], deadline); //velocity\n    };\n    MidiOut.prototype.playKeys = function (keys, settings) {\n        if (settings === void 0) { settings = {}; }\n        /* if (!this.midi) {\n            console.warn('tried to play keys but midi was not ready');\n            return;\n        }\n        this.midi.outputs.forEach(output => {\n            console.log(keys, 'send to', output);\n            keys.forEach(key => {\n                output.send([144, key, 9]);\n            })\n        });\n    } */\n    };\n    return MidiOut;\n}(Instrument_1.Instrument));\nexports.MidiOut = MidiOut;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"../util/util\");\nvar Musician_1 = require(\"./Musician\");\nvar swing_1 = require(\"../grooves/swing\");\nvar Permutator = /** @class */ (function (_super) {\n    __extends(Permutator, _super);\n    function Permutator(instrument) {\n        var _this = _super.call(this, instrument) || this;\n        _this.defaults = { groove: swing_1.swing };\n        _this.playedChords = [];\n        return _this;\n    }\n    Permutator.prototype.play = function (_a) {\n        var _this = this;\n        var measures = _a.measures, pulse = _a.pulse, settings = _a.settings;\n        var groove = settings.groove || this.defaults.groove;\n        var pattern = groove['solo'] || (function (m) {\n            return m.measure.map(function (c) { return [1, 1, 1, 1]; });\n        }); // dont changes anything\n        measures = measures\n            .map(function (measure) { return pattern({ measures: measures, measure: measure, settings: settings, pulse: pulse }).slice(0, Math.floor(settings.cycle)); })\n            .map(function (pattern, i) { return util_1.resolveChords(pattern, measures, [i]); });\n        pulse.tickArray(measures, function (tick) {\n            _this.playPermutations(tick, measures, pulse);\n        }, settings.deadline);\n    };\n    Permutator.prototype.playPermutations = function (_a, measures, pulse) {\n        var value = _a.value, cycle = _a.cycle, path = _a.path, deadline = _a.deadline, interval = _a.interval;\n        var chord = value.chord;\n        if (chord === 'N.C.') {\n            return;\n        }\n        if (chord === 'x') {\n            chord = this.playedChords[this.playedChords.length - 1];\n        }\n        if (!chord || chord === '0') {\n            this.playedChords.push('');\n            return;\n        }\n        this.playedChords.push(chord);\n        // digital patterns\n        var notes = util_1.renderDigitalPattern(chord);\n        var note = util_1.randomElement(notes) + '5';\n        // all scale notes with different chances\n        /* const notes = getPatternInChord([1, 2, 3, 4, 5, 6, 7], chord);\n        const note = randomElement(notes, [4, 3, 6, 1, 3, 4, 6]) + '5'; */\n        /* console.log('beat (starting from zero)', path[1]); */\n        var duration = value.fraction * pulse.getMeasureLength();\n        /* deadline += randomDelay(10); */\n        this.instrument.playNotes([note], { deadline: deadline, interval: interval, gain: 1, duration: duration, pulse: pulse });\n    };\n    return Permutator;\n}(Musician_1.Musician));\nexports.default = Permutator;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Band_1 = __importDefault(require(\"./Band\"));\nexports.Band = Band_1.default;\nvar Pianist_1 = __importDefault(require(\"./musicians/Pianist\"));\nexports.Pianist = Pianist_1.default;\nvar Drummer_1 = __importDefault(require(\"./musicians/Drummer\"));\nexports.Drummer = Drummer_1.default;\nvar Bassist_1 = __importDefault(require(\"./musicians/Bassist\"));\nexports.Bassist = Bassist_1.default;\nvar Instrument_1 = require(\"./instruments/Instrument\");\nexports.Instrument = Instrument_1.Instrument;\nvar Musician_1 = require(\"./musicians/Musician\");\nexports.Musician = Musician_1.Musician;\nvar Synthesizer_1 = require(\"./instruments/Synthesizer\");\nexports.Synthesizer = Synthesizer_1.Synthesizer;\nvar Sampler_1 = require(\"./instruments/Sampler\");\nexports.Sampler = Sampler_1.Sampler;\nvar PlasticDrums_1 = require(\"./instruments/PlasticDrums\");\nexports.PlasticDrums = PlasticDrums_1.PlasticDrums;\nvar Trio_1 = require(\"./Trio\");\nexports.Trio = Trio_1.Trio;\nvar util = __importStar(require(\"./util/util\"));\nexports.util = util;\nvar Pulse_1 = require(\"./Pulse\");\nexports.Pulse = Pulse_1.Pulse;\nvar RealParser_1 = require(\"./sheet/RealParser\");\nexports.RealParser = RealParser_1.RealParser;\nvar MidiOut_1 = require(\"./instruments/MidiOut\");\nexports.MidiOut = MidiOut_1.MidiOut;\nvar Permutator_1 = __importDefault(require(\"./musicians/Permutator\"));\nexports.Permutator = Permutator_1.default;\nvar Voicing_1 = require(\"./harmony/Voicing\");\nexports.Voicing = Voicing_1.Voicing;\nvar Permutation_1 = require(\"./util/Permutation\");\nexports.Permutation = Permutation_1.Permutation;\n","import { Note } from 'tonal';\nimport { Chord } from 'tonal';\nimport { Interval } from 'tonal';\nimport { Distance } from 'tonal';\nimport { isPitchClass } from '../util/util';\n\nexport declare type intervalDirection = 'up' | 'down';\nexport declare type step = string | number;\n\nexport class Harmony {\n    // mapping for ireal chords to tonal symbols, see getTonalChord\n    static irealToTonal = {\n        \"^7\": \"M7\",\n        \"7\": \"7\",\n        \"-7\": \"m7\",\n        \"h7\": \"m7b5\",\n        \"7#9\": \"7#9\",\n        \"7b9\": \"7b9\",\n        \"^7#5\": \"M7#5\",\n        \"\": \"\",\n        \"6\": \"6\",\n        \"9\": \"9\",\n        \"-6\": \"m6\",\n        \"o7\": \"o7\",\n        \"h\": \"m7b5\",\n        \"-^7\": \"mM7\",\n        \"o\": \"o\",\n        \"^9\": \"M9\",\n        \"7#11\": \"7#11\",\n        \"7#5\": \"7#5\",\n        \"-\": \"m\",\n        \"7sus\": \"7sus\",\n        \"69\": \"M69\",\n        \"7b13\": \"7b13\",\n        \"^\": \"M\",\n        \"+\": \"+\",\n        \"7b9b5\": \"7b5b9\",\n        \"-9\": \"m9\",\n        \"9sus\": \"9sus\",\n        \"7b9sus\": \"7b9sus\",\n        \"7b9#5\": \"7#5b9\",\n        \"13\": \"13\",\n        \"^7#11\": \"M7#11\",\n        \"-7b5\": \"m7b5\",\n        \"^13\": \"M13\",\n        \"7#9b5\": \"7b5#9\",\n        \"-11\": \"m11\",\n        \"11\": \"11\",\n        \"7b5\": \"7b5\",\n        \"9#5\": \"9#5\",\n        \"13b9\": \"13b9\",\n        \"9#11\": \"9#11\",\n        \"13#11\": \"13#11\",\n        \"-b6\": \"mb6\",\n        \"7#9#5\": \"7#5#9\",\n        \"-69\": \"m69\",\n        \"13sus\": \"13sus\",\n        \"^9#11\": \"M9#11\",\n        \"7b9#9\": \"7b9#9\",\n        \"sus\": \"sus\",\n        \"7#9#11\": \"7#9#11\",\n        \"7b9b13\": \"7b9b13\",\n        \"7b9#11\": \"7b9#11\",\n        \"13#9\": \"13#9\",\n        \"9b5\": \"9b5\",\n        \"-^9\": \"mM9\",\n        \"2\": \"Madd9\",\n        \"-#5\": \"m#5\",\n        \"7+\": \"7#5\",\n        \"7sus4\": \"7sus\", // own addition\n        \"M69\": \"M69\", // own addition\n        // \"5\": \"5\",\n        // \"7b13sus\": \"7b13sus\",\n    };\n    static pitchRegex = /^([A-G^][b|#]?)/;\n\n    static isBlack(note) {\n        return Note.props(note)['acc'] !== '';\n    }\n\n    static hasSamePitch(noteA, noteB, ignoreOctave = false) {\n        if (ignoreOctave || isPitchClass(noteA) || isPitchClass(noteB)) {\n            return Note.props(noteA).chroma === Note.props(noteB).chroma;\n        }\n        return Note.midi(noteA) === Note.midi(noteB);\n    }\n\n    static getTonalChord(chord: string) {\n        if (!chord) {\n            return null;\n        }\n        const root = Harmony.getBassNote(chord, true) || '';\n        let symbol = chord.replace(root, '');\n        symbol = symbol.split('/')[0]; // ignore slash\n        // check if already a proper tonal chord\n        if (!!Object.keys(Harmony.irealToTonal).find(i => Harmony.irealToTonal[i] === symbol)) {\n            return root + symbol;\n        }\n        symbol = Harmony.irealToTonal[symbol];\n        if (symbol === undefined) {\n            return null;\n        }\n        return root + symbol;\n    }\n\n    static getBassNote(chord: string, ignoreSlash = false) {\n        if (!chord) {\n            return null;\n        }\n        if (!ignoreSlash && chord.includes('/')) {\n            return chord.split('/')[1];\n        }\n        const match = chord.match(/^([A-G][b|#]?)/);\n        if (!match || !match.length) {\n            return '';\n        }\n        return match[0];\n    }\n\n    static transposeChord(chord, interval) {\n        if (!chord) {\n            return chord;\n        }\n        const tokens = Chord.tokenize(Harmony.getTonalChord(chord));\n        let root = Distance.transpose(tokens[0], interval);\n        root = Note.simplify(root);\n        return root + tokens[1];\n    }\n\n    static getMidi(note, offset = 0) {\n        return Note.midi(note) - offset;\n    }\n\n\n    static intervalComplement(interval) {\n        const fix = {\n            '8P': '1P',\n            '8d': '1A',\n            '8A': '1d',\n            '1A': '8d',\n            '1d': '8A',\n        }\n        const fixIndex = Object.keys(fix).find(key => interval.match(key));\n        if (fixIndex) {\n            return fix[fixIndex];\n        }\n\n        return Interval.invert(interval);\n    }\n\n    static invertInterval(interval) {\n        if (!interval) {\n            return null;\n        }\n        const positive = interval.replace('-', '');\n        const complement = Harmony.intervalComplement(positive);\n        const isNegative = interval.length > positive.length;\n        return (isNegative ? '' : '-') + complement;\n    }\n\n    /** Transforms interval into one octave (octave+ get octaved down) */\n    static fixInterval(interval = '', simplify = false) {\n        let fix: { [key: string]: string } = {\n            '0A': '1P',\n            '-0A': '1P',\n            /*  */\n        }\n        if (simplify) {\n            fix = {\n                ...fix,\n                '8P': '1P',\n                '-8P': '1P',\n                /* '-1A': '-2m',\n                '1A': '2m',\n                '8d': '7M',\n                '-8d': '-7M', */\n            }\n            interval = Interval.simplify(interval);\n        }\n        if (Object.keys(fix).includes(interval)) {\n            return fix[interval];\n        }\n        return interval;\n    }\n\n    /** inverts the interval if it does not go to the desired direction */\n    static forceDirection(interval, direction: intervalDirection, noUnison = false) {\n        const semitones = Interval.semitones(interval);\n        if ((direction === 'up' && semitones < 0) ||\n            (direction === 'down' && semitones > 0)) {\n            return Harmony.invertInterval(interval);\n        }\n        if (interval === '1P' && noUnison) {\n            return (direction === 'down' ? '-' : '') + '8P';\n        }\n        return interval;\n    }\n\n    // use Interval.ic?\n    static minInterval(interval, direction?: intervalDirection, noUnison?) {\n        interval = Harmony.fixInterval(interval, true);\n        if (direction) {\n            return Harmony.forceDirection(interval, direction, noUnison)\n        }\n        let inversion = Harmony.invertInterval(interval);\n        if (Math.abs(Interval.semitones(inversion)) < Math.abs(Interval.semitones(interval))) {\n            interval = inversion;\n        }\n        return interval;\n    }\n\n    // returns array of intervals that lead the voices of chord A to chordB\n    static minIntervals(chordA, chordB) {\n        return chordA.map((n, i) => Harmony.minInterval(Distance.interval(n, chordB[i])));\n    }\n\n    static mapMinInterval(direction?: intervalDirection) {\n        return (interval) => Harmony.minInterval(interval, direction);\n    }\n\n    // sort function\n    static sortMinInterval(preferredDirection: intervalDirection = 'up', accessor = (i => i)) {\n        return (a, b) => {\n            const diff = Math.abs(Interval.semitones(accessor(a))) - Math.abs(Interval.semitones(accessor(b)));\n            if (diff === 0) {\n                return preferredDirection === 'up' ? -1 : 1;\n            }\n            return diff;\n        }\n    }\n\n    /** Returns the note with the least distance to \"from\" */\n    static getNearestNote(from, to, direction?: intervalDirection) {\n        let interval = Harmony.minInterval(Distance.interval(Note.pc(from), Note.pc(to)), direction);\n        return Distance.transpose(from, interval) + '';\n    }\n\n    /** Returns the note with the least distance to \"from\". TODO: add range */\n    static getNearestTargets(from, targets, preferredDirection: intervalDirection = 'down', flip = false) {\n        let intervals = targets\n            .map((target) => Distance.interval(Note.pc(from), target))\n            .map(Harmony.mapMinInterval(preferredDirection))\n            .sort(Harmony.sortMinInterval(preferredDirection))\n        /* if (flip) {\n            intervals = intervals.reverse();\n        } */\n        return intervals.map(i => Distance.transpose(from, i));\n    }\n\n    static intervalMatrix(from, to) {\n        return to.map(note => from\n            .map(n => {\n                return Distance.interval(n, note)\n            })\n            .map(d => Harmony.minInterval(d))\n            /* .map(i => i.slice(0, 2) === '--' ? i.slice(1) : i) */\n        )\n    }\n\n}","import { Pulse } from \"../Pulse\";\nimport { Harmony } from '../harmony/Harmony';\n\nexport interface NoteEvent {\n    note: string;\n    midi?: number;\n    gain?: number;\n    off?: number;\n    deadline?: number;\n}\n\nexport class Instrument {\n    midiOffset = 0;\n    onTrigger: (events: { on: NoteEvent[], off: NoteEvent[], active: NoteEvent[] }) => any;\n    ready: Promise<any>;\n    gain = 1;\n\n    activeEvents = [];\n    context: any;\n    mix: any;\n    constructor({ context, gain, mix, onTrigger, midiOffset }: any = {}) {\n        this.onTrigger = onTrigger;\n        this.midiOffset = midiOffset || this.midiOffset;\n        this.gain = gain || this.gain;\n        this.init({ context, mix });\n    }\n\n    init({ context, mix }) {\n        if (!context && (!mix || !mix.context)) {\n            console.warn(`you should pass a context or a mix (gainNode) to a new Instrument. \n            You can also Call init with {context,mix} to setup the Instrument later`);\n            return;\n        }\n        this.context = context || mix.context;\n        this.mix = mix || this.context.destination;\n    }\n\n    playNotes(notes: string[], settings: any = {}) {\n        const deadline = (settings.deadline || this.context.currentTime);\n        settings = Object.assign({\n            duration: 2000,\n            gain: 1,\n        }, settings, { deadline });\n        if (settings.interval) {\n            // call recursively with single notes at interval\n            return notes.map((note, index) => {\n                this.playNotes([note], Object.assign({}, settings, {\n                    interval: 0,\n                    deadline: deadline + index * settings.interval\n                }))\n            });\n        }\n        const midi = notes.map(note => Harmony.getMidi(note, this.midiOffset));\n        const noteOff = settings.deadline + settings.duration / 1000;\n\n        const notesOn = notes.map((note, index) => ({\n            note,\n            midi: midi[index],\n            gain: settings.gain,\n            noteOff,\n            deadline: settings.deadline\n        }));\n\n        if (settings.pulse && this.onTrigger) {\n            settings.pulse.clock.callbackAtTime((deadline) => {\n                this.activeEvents = this.activeEvents.concat(notesOn);\n                this.onTrigger({ on: notesOn, off: [], active: this.activeEvents });\n            }, settings.deadline);\n        }\n        if (settings.duration && settings.pulse) {\n            settings.pulse.clock.callbackAtTime((deadline) => {\n                // find out which notes need to be deactivated\n                const notesOff = notes\n                    .filter(note => !this.activeEvents\n                        .find(event => {\n                            const keep = note === event.note && event.noteOff > deadline;\n                            if (keep) {\n                                console.log('keep', note);\n                            }\n                            return keep;\n                        })).map(note => this.activeEvents.find(e => e.note === note));\n\n                this.activeEvents = this.activeEvents\n                    .filter(e => !notesOff.includes(e));\n\n                if (this.onTrigger) {\n                    this.onTrigger({ on: [], off: notesOff, active: this.activeEvents });\n                }\n            }, noteOff);\n        }\n        return this.playKeys(midi, settings);\n    }\n\n    playKeys(keys: number[], settings?) {\n        // TODO: fire callbacks after keys.map((key,i)=>i*settings.interval)?\n    }\n}","import { Instrument } from './Instrument';\nimport { Note } from 'tonal';\nimport { adsr } from '../util/util';\n\nexport class Synthesizer extends Instrument {\n    duration = 200;\n    type = 'sine';\n    gain = 0.9;\n    attack = .05;\n    decay = .05;\n    sustain = .4;\n    release = .1;\n\n    constructor(props: any) {\n        super(props);\n        this.duration = props.duration || this.duration;\n        this.type = props.type || this.type;\n        this.gain = props.gain || this.gain;\n    }\n\n    getVoice(type = 'sine', gain = 0, key) {\n        const frequency = Note.freq(key);\n        const oscNode = this.context.createOscillator();\n        oscNode.type = type;\n        const gainNode = this.context.createGain();\n        oscNode.connect(gainNode);\n        gainNode.gain.value = typeof gain === 'number' ? gain : 0.8;\n        gainNode.connect(this.mix);\n        oscNode.frequency.value = frequency;\n        return { oscNode, gainNode, key, frequency };\n    }\n\n    lowestGain(a, b) {\n        return a.gain.gain.value < b.gain.gain.value ? -1 : 0;\n    }\n\n    startKeys(keys: number[], settings: any = {}) {\n\n    }\n\n    playKeys(keys: number[], settings: any = {}) {\n        super.playKeys(keys, settings); // fires callback   \n        //const time = this.context.currentTime + settings.deadline / 1000;\n        const time = settings.deadline || this.context.currentTime;\n        const interval = settings.interval || 0;\n        return keys.map((key, i) => {\n            const delay = i * interval;\n            const [endless, attack, decay, sustain, release, duration, gain] =\n                [\n                    settings.endless,\n                    settings.attack || this.attack,\n                    settings.decay || this.decay,\n                    settings.sustain || this.sustain,\n                    settings.release || this.release,\n                    (settings.duration || this.duration) / 1000,\n                    (settings.gain || 1) * this.gain\n                ]\n            const voice = this.getVoice(this.type, 0, key);\n            adsr({ attack, decay, sustain, release, gain, duration, endless }, time + delay, voice.gainNode.gain);\n            voice.oscNode.start(settings.deadline + delay);\n            return voice;\n        });\n    }\n\n    stopVoice(voice, settings: any = {}) {\n        if (!voice) {\n            return;\n        }\n        const time = settings.deadline || this.context.currentTime;\n        voice.gainNode.gain.setTargetAtTime(0, time, settings.release || this.release);\n        //voice.oscNode.stop()\n    }\n\n    stopVoices(voices, settings) {\n        voices.forEach(voice => {\n            this.stopVoice(voice, settings);\n        });\n    }\n}","import * as Chord from 'tonal-chord';\nimport * as Scale from 'tonal-scale';\n\nexport const chords = [\n    {\n        symbol: 'm',\n        long: 'minor',\n        short: '-',\n        groups: ['Basic', 'Triads']\n    },\n    {\n        symbol: 'M',\n        long: 'major',\n        short: '△',\n        groups: ['Basic', 'Triads']\n    },\n    {\n        symbol: 'o',\n        groups: ['Basic', 'Symmetric', 'Triads'],\n        long: 'Vermindert'\n        /* short: 'o' */\n    },\n    {\n        symbol: 'M#5', // = Mb6\n        groups: ['Advanced', 'Symmetric', 'Triads'],\n        short: '△#5'\n    },\n    {\n        symbol: 'Msus4',\n        groups: ['Advanced', 'Symmetric'],\n        short: 'sus4'\n    },\n    {\n        symbol: 'Msus2',\n        groups: ['Advanced', 'Symmetric'],\n        short: 'sus2'\n    },\n    // 5 4 64 m#5 Mb5  7no5  \n    {\n        symbol: '7',\n        groups: ['Basic', 'Diatonic', 'Modes'],\n        long: 'Dominantsept'\n    },\n    {\n        symbol: '7#11',\n        groups: ['Advanced', 'Diatonic', 'Modes'],\n        long: 'Dominant #11'\n    },\n    {\n        symbol: 'M6',\n        groups: ['Advanced'],\n        long: 'major 6',\n        short: '6'\n    },\n    {\n        symbol: 'o7',\n        groups: ['Advanced', 'Symmetric', 'Diatonic'], // HM 7 chord\n        long: 'Vermindert 7',\n    },\n    {\n        symbol: 'm7',\n        groups: ['Basic', 'Diatonic', 'Modes'],\n        long: 'minor 7',\n        short: '-7'\n    },\n    {\n        symbol: 'oM7',\n        groups: ['Expert'],\n        long: 'diminished major 7',\n        short: 'o△7'\n    },\n    {\n        symbol: 'm7b5',\n        groups: ['Basic', 'Diatonic', 'Modes'],\n        long: 'Halbvermindert',\n        short: '-7b5'\n    },\n    {\n        symbol: '7#5',\n        groups: ['Advanced', 'Symmetric'],\n        long: 'Dominantsept #5'\n    },\n    {\n        symbol: 'Maj7',\n        groups: ['Basic', 'Diatonic', 'Modes'],\n        long: 'Major 7',\n        short: '△7'\n    },\n    {\n        symbol: 'mMaj7',\n        short: '-△7',\n        groups: ['Advanced', 'Diatonic']\n    },\n    {\n        symbol: 'M7#5',\n        groups: ['Advanced', 'Diatonic'],\n        short: '△7#5'\n    },\n    {\n        symbol: '7sus4',\n        groups: ['Advanced'],\n    },\n    {\n        symbol: '9',\n        groups: ['Advanced'],\n    },\n    {\n        symbol: 'M9',\n        groups: ['Advanced'],\n        short: '△9'\n    },\n    {\n        symbol: 'M69',\n        groups: ['Advanced'],\n        short: '69'\n    }\n    /*\n7b13 M7b5 m7#5 9no5  M7b6 7b5 Madd9 mb6b9 mb6M7 madd4 sus24 madd9 Maddb9 +add#9 M7sus4 7#5sus4 M#5add9 M7#5sus4\n11 m9 m6 9#5 7b9 7#9 M69 9b5 m69 mM9 7b6 m9b5 m9#5 7#11 M7b9 9b13 o7M7 M9b5 11b9 M9#5 7add6 M6#11 M7#11 7#5#9 13no5 9sus4 7#5b9 M9sus4 7sus4b9 m7add11 mMaj7b6 M9#5sus4\n13 m11 M13 9#11 13#9 13b5 13b9 m11b5 7b9#9 mM9b6 M9#11 9#5#11 7#9b13 7b9b13 13sus4 m11A 5 7#9#11 7b9#11 M69#11 7#11b13 M7#9#11 M7add13 7#5b9#11 7sus4b9b13\nm13 13#11 M13#11 13b9#11 9#11b13 13#9#11 7b9b13#11 7#9#11b13\n    */\n];\n\nexport const scales = [\n    {\n        symbol: 'major pentatonic',\n        groups: ['Basic', 'Pentatonic'],\n    },\n    {\n        symbol: 'minor pentatonic',\n        groups: ['Basic', 'Pentatonic'],\n    },\n    {\n        symbol: 'minor blues',\n        groups: ['Basic'],\n    },\n    // gregorian modes\n    {\n        symbol: 'major',\n        groups: ['Basic', 'Diatonic', 'Modes'],\n    },\n    {\n        symbol: 'dorian',\n        groups: ['Basic', 'Diatonic', 'Modes'],\n    },\n    {\n        symbol: 'phrygian',\n        groups: ['Basic', 'Diatonic', 'Modes'],\n    },\n    {\n        symbol: 'lydian',\n        groups: ['Basic', 'Diatonic', 'Modes'],\n    },\n    {\n        symbol: 'mixolydian',\n        groups: ['Basic', 'Diatonic', 'Modes'],\n    },\n    {\n        symbol: 'aeolian',\n        groups: ['Basic', 'Diatonic', 'Modes'],\n    },\n    {\n        symbol: 'locrian',\n        groups: ['Basic', 'Diatonic', 'Modes'],\n    },\n    {\n        symbol: 'whole tone',\n        groups: ['Advanced', 'Symmetric']\n    },\n    {\n        symbol: 'diminished',\n        groups: ['Advanced', 'Symmetric']\n    },\n    //HTGT ?\n    {\n        symbol: 'augmented',\n        groups: ['Advanced', 'Symmetric']\n    },\n    {\n        symbol: 'chromatic',\n        groups: ['Expert', 'Symmetric']\n    },\n    // harmonic minor modes\n    {\n        symbol: 'harmonic minor', // HM 1\n        groups: ['Advanced', 'Diatonic']\n    },\n    // HM 2 locrian #6 !\n    {\n        symbol: 'ionian augmented', // HM 3\n        groups: ['Expert', 'Diatonic']\n    },\n    {\n        symbol: 'dorian #4', // HM 4\n        groups: ['Expert', 'Diatonic']\n    },\n    {\n        symbol: 'spanish', // HM 5\n        groups: ['Advanced', 'Diatonic']\n    },\n    // HM 6 lydian #9\n    // HM 7 ???\n\n    // melodic minor modes\n    {\n        symbol: 'melodic minor', // MM 1\n        groups: ['Advanced', 'Diatonic']\n    },\n    {\n        symbol: 'melodic minor second mode', // MM 2\n        groups: ['Expert', 'Diatonic']\n    },\n    {\n        symbol: 'lydian augmented', // MM 3\n        groups: ['Expert', 'Diatonic']\n    },\n    {\n        symbol: 'lydian dominant', // MM 4\n        groups: ['Advanced', 'Diatonic'],\n        long: 'mixolydian #11'\n    },\n    {\n        symbol: 'melodic minor fifth mode', // MM 5\n        groups: ['Expert', 'Diatonic']\n    },\n    {\n        symbol: 'locrian #2', // MM 6\n        groups: ['Expert', 'Diatonic']\n    },\n    {\n        symbol: 'altered', // MM 7\n        groups: ['Advanced', 'Diatonic']\n    },\n    //non european\n    {\n        symbol: 'kumoijoshi',\n        groups: ['Exotic', 'Pentatonic']\n    },\n    {\n        symbol: 'iwato',\n        groups: ['Exotic', 'Pentatonic']\n    },\n    {\n        symbol: 'pelog',\n        groups: ['Exotic', 'Pentatonic']\n    },\n    // hyojo?\n    {\n        symbol: 'egyptian',\n        groups: ['Exotic', 'Pentatonic']\n    },\n    {\n        symbol: 'in-sen',\n        groups: ['Exotic', 'Pentatonic']\n    },\n    {\n        symbol: 'scriabin',\n        groups: ['Exotic', 'Pentatonic']\n    },\n    {\n        symbol: 'ritusen',\n        groups: ['Exotic', 'Pentatonic']\n    },\n    {\n        symbol: 'hirajoshi',\n        groups: ['Exotic', 'Pentatonic']\n    },\n    {\n        symbol: 'malkos raga',\n        groups: ['Exotic', 'Pentatonic']\n    },\n    {\n        symbol: 'vietnamese 1',\n        groups: ['Exotic', 'Pentatonic']\n    },\n    /* {\n        symbol: 'vietnamese 2',\n        groups: ['Exotic', 'Pentatonic'] // = minor pentatonic\n    }, */\n    {\n        symbol: 'lydian pentatonic', // = China (Sikora S. 61)\n        groups: ['Pentatonic']\n    },\n    {\n        symbol: 'mixolydian pentatonic',\n        groups: ['Pentatonic']\n    },\n    {\n        symbol: 'ionian pentatonic',\n        groups: ['Pentatonic']\n    },\n    {\n        symbol: 'locrian pentatonic',\n        groups: ['Pentatonic']\n    },\n    {\n        symbol: 'flat six pentatonic',\n        groups: ['Pentatonic']\n    },\n    {\n        symbol: 'minor six pentatonic',\n        groups: ['Pentatonic']\n    },\n    {\n        symbol: 'minor #7M pentatonic',\n        groups: ['Pentatonic']\n    },\n    {\n        symbol: 'lydian #5P pentatonic',\n        groups: ['Pentatonic']\n    },\n    {\n        symbol: 'whole tone pentatonic',\n        groups: ['Pentatonic', 'Symmetric']\n    },\n    {\n        symbol: 'flat three pentatonic',\n        groups: ['Pentatonic']\n    },\n    {\n        symbol: 'super locrian pentatonic',\n        groups: ['Pentatonic']\n    },\n    {\n        symbol: 'major flat two pentatonic',\n        groups: ['Pentatonic']\n    },\n    {\n        symbol: 'lydian dominant pentatonic',\n        groups: ['Pentatonic']\n    },\n    {\n        symbol: 'neopolitan major pentatonic',\n        groups: ['Pentatonic']\n    }\n\n    /*            \n    mystery #1 piongio    prometheus major blues minor hexatonic six tone symmetric prometheus neopolitan\n     persian  spanish  oriental flamenco balinese   todi raga enigmatic lydian #9 neopolitan locrian #2  lydian minor  locrian major  romanian minor harmonic major hungarian major hungarian minor lydian dominant   neopolitan minor neopolitan major lydian diminished leading whole tone augmented heptatonic double harmonic major double harmonic lydian melodic minor fifth mode melodic minor second mode\n    bebop kafi raga  purvi raga ichikosucho bebop minor minor bebop bebop major bebop locrian bebop dominant spanish heptatonic minor six diminished\n    composite blues\n    */\n];\n\nexport const symbols = { chords, scales };\n\nexport const levels = ['Basic', 'Advanced', 'Expert'];\n\nexport function groupFilter(group) {\n    return (item) => {\n        const level = Math.max(item.groups.filter(group => levels.indexOf(group) !== -1)\n            .map(group => levels.indexOf(group) + 1));\n        const groups = level > 0 ? Array.from(new Set(levels.slice(level).concat(item.groups))) : item.groups;\n        return groups.indexOf(group) !== -1;\n    };\n}\n\nexport function scaleNames(group = 'Basic') {\n    if (!group || group === 'All') {\n        return Scale.names();\n    }\n    return scales.filter(groupFilter(group))\n        .map(scale => scale.symbol);\n}\nexport function chordNames(group = 'Basic') {\n    if (!group || group === 'All') {\n        return Chord.names();\n    }\n    return chords.filter(groupFilter(group))\n        .map(scale => scale.symbol);\n}\n\nexport function groupNames() {\n    return Array.from(new Set(levels.concat(scales.concat(chords)\n        .map(item => item.groups)\n        .reduce((groups, current) => groups.concat(current))))).concat(['All']);\n}\n\nexport function symbolName(type, symbol, long) {\n    const pool = symbols[type + 's'];\n    const match = pool.find(item => item.symbol === symbol);\n    if (!match) {\n        return symbol;\n    }\n    /* return symbol; */\n    return (long ? match.long : match.short) || symbol;\n}\n\nexport function scaleName(symbol, long = false) {\n    return symbolName('scale', symbol, long);\n}\n\nexport function chordName(symbol, long = false) {\n    return symbolName('chord', symbol, long);\n}\n\nexport function randomItem(array) {\n    return array[Math.floor(Math.random() * array.length)];\n}\n\nexport function randomScale(group) {\n    return randomItem(scaleNames(group));\n}\n\nexport function randomChord(group) {\n    return randomItem(chordNames(group));\n}","import { Chord, Distance, Interval, Note, PcSet, Scale } from 'tonal';\nimport { Synthesizer } from '../instruments/Synthesizer';\nimport { scaleNames } from '../symbols';\nimport { Harmony, step, intervalDirection } from '../harmony/Harmony';\n\nconst steps = {\n    '1P': ['1', '8'],\n    '2m': ['b9', 'b2'],\n    '2M': ['9', '2',],\n    '2A': ['#9', '#2'],\n    '3m': ['b3'],\n    '3M': ['3'],\n    '4P': ['11', '4'],\n    '4A': ['#11', '#4'],\n    '5d': ['b5'],\n    '5P': ['5'],\n    '5A': ['#5'],\n    '6m': ['b13', 'b6'],\n    '6M': ['13', '6'],\n    '7m': ['b7'],\n    '7M': ['7', '^7', 'maj7']\n};\n\n/*\nLower Interval Limits (just guidelines):\n2m: E3-F3\n2M: Eb3-F3\n3m: C3-Eb3\n3M: Bb2-D3\n4P: Bb2-Eb3\n5D: B2-F3\n5P: Bb1-F2\n6m: F2-Db3\n6M: F2-D3\n7m: F2-Eb3\n7m: F2-E3\n8P: -\n\nmore rough: top note should be D3 or higher.\ntaken from https://www.youtube.com/watch?v=iW6YeDJklhQ\n*/\n\nexport function randomNumber(n) {\n    return Math.floor(Math.random() * n)\n}\n\nexport function arraySum(array) {\n    return array.reduce((s, i) => s + i, 0);\n}\n\nexport function randomElement(array, weighted?) {\n    if (!weighted) {\n        return array[randomNumber(array.length)];\n    }\n    const r = randomNumber(arraySum(weighted)) + 1;\n    const total = weighted\n        .reduce((abs, w, i) => abs.concat(w + (abs.length ? abs[i - 1] : 0)), []);\n    return array[total.indexOf(total.find((s, i) => s >= r))];\n}\n\nexport function shuffleArray(a) {\n    for (let i = a.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [a[i], a[j]] = [a[j], a[i]];\n    }\n    return a;\n}\n\n/** OLD SHEET / RHYTHM STUFF */\n\n/** Travels path along measures */\nexport function getPath(path, measures, traveled = []) {\n    if (!Array.isArray(measures[path[0]]) || path.length === 1) {\n        return measures[Math.min(path[0], measures.length - 1)];\n    }\n    return this.getPath(path.slice(1), measures[path[0]], traveled.concat(path[0]));\n}\n\nexport function getDuration(divisions, noteLength = 1, measureLength = 1) {\n    return noteLength * divisions.reduce((f, d) => f / d, 1000) * measureLength; // fraction of one\n}\n\nexport function resolveChords(pattern, measures, path, divisions = []) {\n    if (Array.isArray(pattern)) {\n        // division: array of children lengths down the path (to calculate fraction)\n        divisions = [].concat(divisions, [pattern.length]);\n        return pattern.map((p, i) => this.resolveChords(p, measures, path.concat([i]), divisions));\n    }\n    if (pattern === 0) {\n        return 0;\n    }\n    const fraction = getDuration(divisions, pattern);\n    if (fraction === 0) {\n        console.warn('fraction is 0', pattern);\n    }\n    if (fraction === NaN) {\n        console.warn('fraction NaN', divisions, pattern);\n    }\n    return { chord: this.getPath(path, measures), pattern, path, divisions, fraction };\n}\n\nexport function hasOff(pattern, division = 3) {\n    return Array.isArray(pattern) && pattern.length === division && pattern[division - 1] !== 0;\n}\n\n// replaces offs on last beat with next chord + erases next one\nexport function offbeatReducer(settings) {\n    // TODO: find out why some offbeats sound sketchy\n    return (measures, bar, index) => {\n        const last = index > 0 ? measures[index - 1] : null;\n        if (last && this.hasOff(last[settings.cycle - 1], settings.division)) {\n            last[settings.cycle - 1][settings.division - 1] = bar[0];\n            bar[0] = 0;\n        }\n        return measures.concat([bar]);\n    };\n}\n\n\nexport function randomSynth(mix, allowed = ['sine', 'triangle', 'square', 'sawtooth'], settings = {}) {\n    const gains = {\n        sine: 0.9,\n        triangle: 0.8,\n        square: 0.2,\n        sawtooth: 0.3\n    }\n    const wave = randomElement(allowed);\n    return new Synthesizer(Object.assign({ gain: gains[wave], type: wave, mix }, settings));\n}\n\nexport interface ADSRParams {\n    attack?: number,\n    decay?: number,\n    sustain?: number,\n    release?: number,\n    gain?: number,\n    duration?: number,\n    endless?: boolean\n}\n\nexport function adsr({ attack, decay, sustain, release, gain, duration, endless }: ADSRParams, time, param) {\n    // console.log('adsr', attack, decay, sustain, release, gain, duration, time);\n    param.linearRampToValueAtTime(gain, time + attack);\n    param.setTargetAtTime(sustain * gain, time + Math.min(attack + decay, duration), decay);\n    if (!endless) {\n        param.setTargetAtTime(0, time + Math.max(duration - attack - decay, attack + decay, duration), release);\n    }\n}\n\nexport function randomDelay(maxMs) {\n    return Math.random() * maxMs * 2 / 1000;\n}\n\nexport function isInRange(note, range) {\n    return Distance.semitones(note, range[0]) <= 0 && Distance.semitones(note, range[1]) >= 0;\n}\n\nexport function transposeNotes(notes, interval) {\n    return notes.map(note => Distance.transpose(note, interval));\n}\n\nexport function transposeToRange(notes, range, times = 0) {\n    if (times > 10) {\n        return notes;\n    }\n    if (notes.find(note => Distance.semitones(note, range[0]) > 0)) {\n        notes = notes.map(note => Distance.transpose(note, '8P'));\n        console.log('tp up');\n        return transposeToRange(notes, range, ++times);\n    }\n    if (notes.find(note => Distance.semitones(note, range[1]) < 0)) {\n        console.log('tp down');\n        notes = notes.map(note => Distance.transpose(note, '-8P'));\n        return transposeToRange(notes, range, ++times);\n    }\n    return notes;\n}\n\nexport function getAverageMidi(notes, offset?) {\n    return notes.reduce((sum, note) => sum + Harmony.getMidi(note, offset), 0) / notes.length;\n}\n\nexport function getDistancesToRangeEnds(notes: string[], range: string[]) {\n    if (notes.length > 2) {\n        notes = [notes[0], notes[notes.length - 1]];\n    }\n    const midi = notes.map(n => Harmony.getMidi(n));\n    const rangeMidi = range.map(n => Harmony.getMidi(n));\n    return [midi[0] - rangeMidi[0], rangeMidi[1] - midi[1]];\n}\n\nexport function getRangePosition(note: string | number, range) {\n    note = Harmony.getMidi(note);\n    range = range.map(n => Harmony.getMidi(n));\n    const semitones = [note - range[0], range[1] - range[0]];\n    return semitones[0] / semitones[1];\n}\n\nexport function getRangeDirection(note, range, defaultDirection: intervalDirection = 'down', border = 0): { direction: intervalDirection, force: boolean } {\n    const position = getRangePosition(note, range);\n    if (position <= border) {\n        return { direction: 'up', force: true }\n    } if (position >= (1 - border)) {\n        return { direction: 'down', force: true }\n    }\n    return {\n        direction: defaultDirection, force: false\n    }\n}\n\n// accepts both strings or numbers where negative means minor, \n// returns unified step string that can be turned into an interval\nexport function getStep(step: step) {\n    if (typeof step === 'number' && step < 0) {\n        step = 'b' + (step * -1);\n    }\n    return step + ''; // to string\n}\n\nexport function getIntervalFromStep(step: step) {\n    step = getStep(step);\n    const interval = Object.keys(steps)\n        .find(i => steps[i].includes(step));\n    if (!interval) {\n        // console.warn(`step ${step} has no defined inteval`);\n    }\n    return interval;\n}\n\nexport function getStepsFromDegree(degree) {\n    return\n}\n\nexport function getStepsInChord(notes: string[], chord: string, min = false) {\n    const root = Chord.tokenize(Harmony.getTonalChord(chord))[0];\n    return notes.map(note => {\n        let interval = Distance.interval(root, Note.pc(note));\n        return getStepFromInterval(interval, min);\n    });\n}\nexport function getStepInChord(note, chord, min = false) {\n    return getStepFromInterval(\n        Distance.interval(\n            Chord.tokenize(Harmony.getTonalChord(chord))[0],\n            Note.pc(note), min)\n    );\n}\n\nexport function getChordScales(chord, group = 'Diatonic') {\n    const tokens = Chord.tokenize(Harmony.getTonalChord(chord));\n    /* const isSuperset = PcSet.isSupersetOf(Chord.intervals(tokens[1])); */\n    return scaleNames(group).filter(name =>\n        /* isSuperset(Scale.intervals(name)) */\n        PcSet.isSupersetOf(Chord.intervals(tokens[1]), Scale.intervals(name))\n    );\n}\n\nexport function pickChordScale(chord, group = 'Diatonic') {\n    const scales = getChordScales(chord);\n    if (!scales.length) {\n        console.warn(`cannot pick chord scale: no scales found for chord ${chord} in group ${group}`);\n        return;\n    }\n    return scales[0];\n}\n\n\nexport function findDegree(degreeOrStep: number | step, intervalsOrSteps: string[]) {\n    const intervals = intervalsOrSteps.map(i => isInterval(i) ? i : getIntervalFromStep(i));\n    if (typeof degreeOrStep === 'number') { // is degree\n        const degree = Math.abs(degreeOrStep);\n        return intervals.find(i => {\n            i = Harmony.minInterval(i, 'up');\n            if (!steps[i]) {\n                console.error('interval', i, 'is not valid', intervals);\n            }\n            return !!(steps[i].find(step => getDegreeFromStep(step) === degree));\n        });\n    }\n    // is step\n    const step = getStep(degreeOrStep);\n    return intervals.find(i => i.includes(step) ||\n        i === getIntervalFromStep(step));\n}\n\nexport function hasDegree(degree, intervals) {\n    return !!findDegree(degree, intervals);\n}\n\nexport function hasAllDegrees(degrees, intervals) {\n    return degrees.reduce((res, d) => res && hasDegree(d, intervals), true);\n}\n\nexport function getScaleDegree(degree, scale) {\n    return findDegree(degree, Scale.intervals(scale));\n}\n\n\nexport function getScalePattern(pattern, scale) {\n    return pattern.map(degree => getScaleDegree(degree, scale));\n}\n\nexport function renderIntervals(intervals, root) {\n    return intervals.map(i => Distance.transpose(root, i));\n}\n\nexport function renderSteps(steps, root) {\n    return renderIntervals(steps.map(step => getIntervalFromStep(step)), root);\n}\n\nexport function permutateIntervals(intervals, pattern) {\n    return pattern.map(d => findDegree(d, intervals));\n}\n\nexport function getStepFromInterval(interval, min = false) {\n    const step = steps[interval] || [];\n    if (min) {\n        return step[1] || step[0] || 0;\n    }\n    return step[0] || 0;\n}\n\nexport function getDegreeFromInterval(interval = '-1', simplify = false) {\n    const fixed = Harmony.fixInterval(interval + '', simplify) || '';\n    const match = fixed.match(/[-]?([1-9])+/);\n    if (!match) {\n        return 0;\n    }\n    return Math.abs(parseInt(match[0], 10));\n}\n\nexport function getDegreeFromStep(step: step) {\n    step = getStep(step);\n    const match = step.match(/([1-9])+/);\n    if (!match || !match.length) {\n        console.log('no valid step', step);\n        return 0;\n    }\n    return parseInt(match[0], 10);\n}\n\nexport function getDegreeInChord(degree, chord) {\n    chord = Harmony.getTonalChord(chord);\n    const intervals = Chord.intervals(chord);\n    const tokens = Chord.tokenize(chord);\n    return Distance.transpose(tokens[0], findDegree(degree, intervals));\n}\n\nexport function getPatternInChord(pattern, chord) {\n    chord = Harmony.getTonalChord(chord);\n    const intervals = Chord.intervals(chord);\n    const tokens = Chord.tokenize(chord);\n    let permutation;\n    if (hasAllDegrees(pattern, intervals)) {\n        permutation = permutateIntervals(intervals, pattern);\n    } else {\n        // not all degrees of the pattern are in the chord > get scale\n        const scale = pickChordScale(chord);\n        permutation = permutateIntervals(Scale.intervals(scale), pattern);\n    }\n    if (tokens[0]) {\n        return renderIntervals(permutation, tokens[0]);\n    }\n    return permutation;\n}\n\n// TODO: other way around: find fixed interval pattern in a scale\n// TODO: motives aka start pattern from same note in different scale\n// TODO: motives aka start pattern from different note in same scale\n// TODO: motives aka start pattern from different note in different scale\n\nexport function getDigitalPattern(chord) {\n    chord = Harmony.getTonalChord(chord);\n    const intervals = Chord.intervals(chord);\n    if (intervals.includes('3m')) {\n        return [1, 3, 4, 5];\n    } else if (intervals.includes('3M')) {\n        return [1, 2, 3, 5];\n    } else {\n        return [1, 1, 1, 1];\n    }\n}\n\nexport function renderDigitalPattern(chord) {\n    return getPatternInChord(getDigitalPattern(chord), chord);\n}\n\nexport function getGuideTones(chord) {\n    chord = Harmony.getTonalChord(chord);\n    return getPatternInChord([3, 7], chord);\n}\n\n\nexport function isFirstInPath(path, index) {\n    return path.slice(index)\n        .reduce((sum, value) => sum + value, 0) === 0;\n}\n\nexport function isBarStart(path) {\n    return isFirstInPath(path, 1);\n}\n\nexport function isFormStart(path) {\n    return isFirstInPath(path, 0);\n}\n\nexport function isOffbeat(path) {\n    return path[2] !== 0;\n}\n\n\nexport function otherDirection(direction, defaultDirection?) {\n    if (direction === 'up') {\n        return 'down';\n    } else if (direction === 'down') {\n        return 'up'\n    }\n    return defaultDirection;\n}\n\n\n\nexport function totalDiff(diff) {\n    const total = diff.reduce((weight, diff) => {\n        weight.added += diff.added ? diff.count : 0;\n        weight.removed += diff.added ? diff.count : 0;\n        weight.kept += (!diff.added && !diff.removed) ? diff.count : 0;\n        return weight;\n    }, { added: 0, removed: 0, kept: 0, balance: 0 });\n    total.balance = total.added - total.removed;\n    total.changes = total.added + total.removed;\n    return total;\n}\n\n/** Reorders the given notes to contain the given step as close as possible */\nexport function sortByDegree(notes, degree) {\n    degree = Math.max(degree, (degree + 8) % 8)\n    /* const semitones = Interval.semitones(interval); */\n    const diffDegrees = (a, b) => Math.abs(getDegreeFromInterval(Distance.interval(a, b) + '') - degree);\n    /* const diffTones = (a, b) => Math.abs(Distance.interval(a, b) - semitones); */\n    notes = notes.slice(1).reduce((chain, note) => {\n        const closest = notes\n            .filter(n => !chain.includes(n))\n            .sort((a, b) => diffDegrees(chain[0], a) < diffDegrees(chain[0], b) ? -1 : 1);\n        chain.unshift(closest[0]);\n        return chain;\n    }, [notes[0]]).reverse();\n\n    return notes;\n}\n\n/** Returns the given notes with octaves either moving bottom up or top down */\nexport function renderAbsoluteNotes(notes, octave = 3, direction: intervalDirection = 'up') {\n    return notes.reduce((absolute, current, index, notes) => {\n        if (index === 0) {\n            return [current + octave];\n        }\n        let interval = Distance.interval(notes[index - 1], current);\n        interval = Harmony.minInterval(interval, direction);\n        if (interval === '1P') {\n            interval = direction === 'down' ? '-8P' : '8P';\n        }\n        absolute.push(Distance.transpose(absolute[index - 1], interval + ''));\n        return absolute;\n    }, []);\n}\n\nexport function getIntervals(notes) {\n    return notes.reduce((intervals, note, index, notes) => {\n        if (index === 0) {\n            return [];\n        }\n        intervals.push(Distance.interval(notes[index - 1], note));\n        return intervals;\n    }, []);\n}\n\nexport function isInterval(interval) {\n    return typeof Interval.semitones(interval) === 'number';\n}\n\nexport function smallestInterval(intervals) {\n    return intervals.reduce((min, current) => {\n        if (!min || Interval.semitones(current) < Interval.semitones(min)) {\n            return current;\n        }\n        return min;\n    });\n}\n\nexport function sortNotes(notes, direction: intervalDirection = 'up') {\n    return notes.sort((a, b) => Harmony.getMidi(a) - Harmony.getMidi(b));\n}\n\nexport function analyzeVoicing(notes, root?) {\n    if (!notes || notes.length < 2) {\n        throw new Error('Can only analyze Voicing with at least two notes');\n    }\n    notes = sortNotes(notes);\n    root = root || notes[0]; // TODO: get degrees\n    const intervals = getIntervals(notes);\n    const sortedIntervals = intervals.sort(Harmony.sortMinInterval());\n    return {\n        notes,\n        minInterval: sortedIntervals[0],\n        maxInterval: sortedIntervals[sortedIntervals.length - 1],\n        intervals,\n        spread: Distance.interval(notes[0], notes[notes.length - 1])\n    }\n}\n\n\nexport function semitoneDifference(intervals) {\n    return intervals.reduce((semitones, interval) => {\n        return semitones + Math.abs(Interval.semitones(interval))\n    }, 0);\n}\nexport function semitoneMovement(intervals) {\n    return intervals.reduce((semitones, interval) => {\n        return semitones + Interval.semitones(interval)\n    }, 0);\n}\n\nexport function longestChild(array: any[][]) {\n    return array.reduce((max, current) => (current.length > max.length ? current : max), array[0]);\n}\n\nexport function isPitchClass(note) {\n    return Note.pc(note) === note;\n}\n\n\nexport function mapTree(\n    tree,\n    modifier?,\n    simplify = false,\n    path = [],\n    siblings = [],\n    position = 0) {\n    // skip current tree if only one child\n    if (simplify && Array.isArray(tree) && tree.length === 1) {\n        return mapTree(\n            tree[0], modifier, simplify,\n            path, siblings, position\n        );\n    }\n\n    let fraction = siblings.reduce((f, d) => f / d, 1);\n    if (!Array.isArray(tree)) {\n        return modifier ? modifier(tree, { path, siblings, fraction, position }) : tree;\n    }\n    if (Array.isArray(tree)) {\n        siblings = siblings.concat([tree.length]);\n        fraction = fraction / tree.length;\n        return tree.map((subtree, index) =>\n            mapTree(\n                subtree, modifier, simplify,\n                path.concat([index]),\n                siblings,\n                position + index * fraction\n            )\n        )\n    }\n}\n\nexport function flattenTree(tree) {\n    const flat = []\n    mapTree(tree, (value, props) => flat.push(Object.assign(props, { value })));\n    return flat;\n}\n\nexport function expandTree(tree) {\n    // TODO\n}\n\n/* Returns true if the given intervals are all present in the chords interval structure\nIntervals can be appendend with \"?\" to indicate that those degrees could also be omitted \n(but when present they should match)\n*/\nexport function chordHasIntervals(chord, intervals) {\n    chord = Harmony.getTonalChord(chord);\n    const has = Chord.intervals(chord);\n    return intervals.reduce((match, current) => {\n        const isOptional = current.includes('?');\n        const isForbidden = current.includes('!');\n        if (isOptional) {\n            current = current.replace('?', '');\n            return (!hasDegree(getDegreeFromInterval(current), has) ||\n                has.includes(current)) && match;\n        }\n        if (isForbidden) {\n            current = current.replace('!', '');\n            return !hasDegree(getDegreeFromInterval(current), has);\n        }\n        return has.includes(current) && match;\n    }, true);\n}\n\nexport function isDominantChord(chord) {\n    return chordHasIntervals(chord, ['3M', '7m']) || chordHasIntervals(chord, ['!3', '4P', '7m']);\n}\nexport function isMajorChord(chord) {\n    return chordHasIntervals(chord, ['3M', '7M?']);\n}\nexport function isMinorChord(chord) {\n    return chordHasIntervals(chord, ['3m']);\n}\nexport function isMinorTonic(chord) {\n    return chordHasIntervals(chord, ['3m', '5P', '13M?', '7M?']);\n}\n\nexport function getChordType(chord) {\n    if (isDominantChord(chord)) {\n        return 'dominant';\n    }\n    if (isMajorChord(chord)) {\n        return 'major';\n    }\n    if (isMinorTonic(chord)) {\n        return 'minor-tonic';\n    }\n    if (isMinorChord(chord)) {\n        return 'minor';\n    }\n}\n\nexport function getChordNotes(chord, validate?) {\n    chord = Harmony.getTonalChord(chord);\n    const tokens = Chord.tokenize(chord);\n    const notes = Chord.notes(chord);\n    return notes.filter(note => {\n        const interval = Distance.interval(tokens[0], note);\n        return !validate || validate(note, {\n            root: tokens[0],\n            symbol: tokens[1],\n            interval,\n            step: getStepFromInterval(interval),\n            degree: getDegreeFromInterval(interval + '')\n        });\n    });\n}\n\nexport function validateWithoutRoot(note, { degree }) {\n    return degree !== 1;\n}\n\n// OLD...\nexport function getVoicing(chord, { voices, previousVoicing, omitRoot, quartal }: {\n    previousVoicing?: string[],\n    voices?: number,\n    omitRoot?: boolean,\n    quartal?: boolean\n} = {}) {\n    chord = Harmony.getTonalChord(chord);\n    const tokens = Chord.tokenize(chord);\n    let notes = Chord.notes(chord);\n    if (omitRoot) {\n        notes = notes.filter(n => n !== tokens[0]);\n    }\n    if (quartal) {\n    }\n    if (previousVoicing) {\n\n    }\n    return notes;\n}\n\nexport function semitoneDistance(noteA, noteB) {\n    return Interval.semitones(Distance.interval(noteA, noteB) + '');\n}\n\nexport function noteArray(range) {\n    const slots = Interval.semitones(Distance.interval(range[0], range[1]) + '');\n    return new Array(slots + 1)\n        .fill('')\n        .map((v, i) => Distance.transpose(range[0], Interval.fromSemitones(i)) + '')\n        .map(n => Note.simplify(n))\n}\n\n\nexport function factorial(n) {\n    let value = 1;\n    for (let i = 2; i <= n; ++i) {\n        value *= i;\n    }\n    return value;\n}\n\n\n\n// finds best combination following the given notes, based on minimal movement\n/* export function bestCombination(notes, combinations = []) {\n    return combinations.reduce((best, current) => {\n        const currentMovement = voicingDifference(notes, current);\n        const bestMovement = voicingDifference(notes, best);\n        if (Math.abs(currentMovement) < Math.abs(bestMovement)) {\n            return current;\n        }\n        return best;\n    });\n} */\n\n/* export function sortCombinationsByMovement(notes, combinations, direction: intervalDirection = 'up', min = true) {\n    const movements = combinations.map((combination) => ({\n        movement: voicingMovement(notes, combination, min),\n        combination\n    }));\n    let right = movements.filter(move => direction === 'up' ? move >= 0 : move <= 0);\n    if (!right.length) {\n        right = movements;\n    }\n    let sorted = right.sort((a, b) => a.movement - b.movement);\n    if (direction === 'down') {\n        sorted = sorted.reverse();\n    }\n    return sorted.map(movement => movement.combination);\n}\n */","import { randomElement } from \"../util/util\";\n\nconst off = () => randomElement([0, [0, 1]], [6, 1]);\nconst eightFour = () => randomElement(\n    [[1, 1], 1],\n    [2, 1]\n);\nconst eightOff = () => randomElement(\n    [[1, 1], [0, 1]],\n    [2, 1]\n);\nconst halfTriplet = () => randomElement(\n    [[2, 0], [[2, 0, 2], [0, 2, 0]]],\n    [2, 1]\n);\n\nconst one = (v = 1) => randomElement([0, v]);\n\nexport const bossa = {\n    name: 'Bossa',\n    tempo: 160,\n    chords: ({ measure, settings }) => {\n        return randomElement([\n            [1, [0, 1], 0, [0, 3]],\n            [one(), [0, 3], 0, [0, 1]],\n            [one(), [0, 1], [0, 3], 0],\n            [one(), [0, 3], [0, 1], 0]\n        ])\n    },\n    bass: () =>\n        [1, [0, 3], 0, randomElement([0, 1])],\n    rimshot: ({ measure, settings }) => {\n        return [0, .8, 0, 0]\n    },\n    ride: ({ measures, index }) => {\n        return randomElement([\n            [[one(.6), .9, [.4, .5], [0, .8]]],\n            [[0, .9, [.4, .5], [one(.6), .8]]],\n        ])\n    },\n    hihat: () => [0, .8, 0, 1],\n    solo: () => randomElement([\n        [eightFour(), eightFour(), eightFour(), eightFour()],\n        [eightFour(), 2, 0, eightFour()],\n        [0, 0, eightFour(), eightOff()],\n        [[1, 4], 0, eightFour(), eightFour()],\n        [4, 0, 0, 0],\n        [...halfTriplet(), ...halfTriplet()],\n        [eightOff(), eightOff(), eightOff(), eightOff()],\n    ])\n};","import { randomElement } from \"../util/util\";\nexport const funk = {\n    name: 'Funk',\n    tempo: 90,\n    chords: () => randomElement([\n        [[2, 0, 0, 1], 0, [0, .6], [0, 3.5, 0, 0]],\n        [[1, 0, 0, 5], 0, [0, .6], [1, .5, 0, 0]],\n        [[1, 0, 0, 5], 0, [0, .6], [.5, 0, 2, 0]],\n        [[1, 0, 0, 5], 0, [0, .6], [0, 2, 0, 1]],\n        [[3, 0, 0, 0], 0, 2, 0]\n    ]),\n    bass: () => randomElement(\n        [\n            [[2, 0, 0, 1], [0, 1], 1, [0, 1]],\n            [[2, 0, 0, 0], [0, 1, 0, 1], [0, 0, 1, 0], [0, 0, 0, 1]],\n        ]\n    ),\n    kick: (t) => [[[1, .7], 0, [0, 1], 0]],\n    snare: (t) => [0, 1, [0, .2, 0, 0], [1, 0, 0, .6]],\n    hihat: (t) => [[.5, .6], [.4, .7], [.3, .6], [.5, .7]]\n};","import { randomElement } from \"../util/util\";\n\nconst off = () => randomElement([0, [0, 0, 2]], [6, 1]);\nconst eightFour = () => randomElement(\n    [[1, 0, 1], 1, [0, 0, 1, 1]],\n    [4, 2, 1]\n);\nconst eightOff = () => randomElement(\n    [[1, 0, 1], [0, 0, 1]],\n    [4, 1]\n);\nconst halfTriplet = () => randomElement(\n    [\n        [2, 0],\n        [[2, 0, 2], [0, 2, 0]],\n        [1, 1, 1, 1]\n    ],\n    [2, 1, 1]\n);\n\n\nexport const swing = {\n    name: 'Swing',\n    tempo: 130,\n    chords: ({ measure, settings }) => {\n        const r = Math.random() > 0.5 ? .6 : 0;\n        const t = `${settings.cycle}/${measure.length}`;\n        if (t === '4/1') {\n            return randomElement([\n                [[1, 0], [0, 0, 7], 0, 0],\n                [1, [0, 0, 2], 0, off()],\n                [[0, 0, 1], 0, 2, 0],\n                [[0, 0, 4], 0, 1, 0],\n                [2, 0, 0, 0],\n                [3, 0, 0, 0],\n                [1, 0, r, off()],\n                [[0, 0, 2], 0, r, 0],\n                [1.5, [0, 0, 2], 0, off()],\n            ]);//, [2, 1, 1]\n        }\n        if (t === '4/2') {\n            return randomElement([\n                [[1, 0], [0, 0, 7], 0, 0],\n                [1, [0, 0, 3], 0, 0],\n                [1, 0, 2, 0],\n                [2, 0, 1, 0],\n                [1, 0, .7, off()],\n                [[1, 0, 0], 0, .7, off()],\n                [[4, 0, 0], [0, 0, 2.8], 0, off()],\n            ]);\n        }\n\n        if (t === '4/3') {\n            return randomElement([\n                [1, [0, 0, 2], [0, 0, 4], 0],\n                [1, [2, 0, 0], 2, 0],\n                [1, 1, 2, 0],\n                [[2, 0, 0], 1, 2, 0],\n                [2, 0, 1, 1]\n            ]);\n        }\n        if ('4/4') {\n            return randomElement([\n                [1, 1, 1, 1],\n                /* [[1, 0, 2], [0, 0, 2], 0, 1] */\n            ]);\n        }\n    },\n    bass: () => randomElement([\n        [1, 1, 1, 1]\n        /* [2, 0, 2, 0] */,\n    ]),\n    crash: ({ measures, index }) => {\n        const fill = index !== 0 && index % measures.length === 0;\n        if (fill) {\n            return [4, 0, 0, 0];\n        }\n        return [0, 0, 0, 0];\n    },\n    ride: ({ measures, index }) => {\n        return randomElement([\n            [.6, [.9, 0, 1], .6, [.9, 0, 1]],\n            [.6, [.4, 0, 1], .8, [0, 0, 1],],\n            [.6, .9, [.6, 0, 1], 1],\n            [.6, .9, .6, [.9, 0, 1]],\n        ], [3, 2, 1, 2])\n    },\n    hihat: () => [0, .8, 0, 1],\n    solo: () => randomElement([\n        [eightFour(), eightFour(), eightFour(), eightFour()],\n        [eightFour(), 2, 0, eightFour()],\n        [0, 0, eightFour(), eightFour()],\n        [[1, 0, 4], 0, eightFour(), eightFour()],\n        [3, 0, 0, eightFour()],\n        /* [0, 1, 2, 0], */\n        [...halfTriplet(), ...halfTriplet()],\n        [eightOff(), eightOff(), eightOff(), eightOff()],\n    ])\n    /* solo: () => [1, 1, 0, 1] */\n};","import { Measure, MeasureOrString } from './Measure';\nimport { Harmony } from '../harmony/Harmony';\n\nexport type Measures = Array<MeasureOrString>;\n\nexport type Leadsheet = {\n    name?: string,\n    composer?: string,\n    style?: string,\n    bpm?: number,\n    repeats?: number,\n    key?: string,\n    measures?: Measures,\n    chords?: Measures,\n    melody?: Measures,\n}\n\n\nexport type JumpSign = {\n    pair?: string,\n    move?: number,\n    fine?: boolean,\n    validator?: (state) => boolean,\n}\n\nexport type SheetState = {\n    measures?: [],\n    index?: number,\n    sheet?: Measures,\n    jumps?: { [key: number]: number },\n    visits?: { [key: number]: number },\n    nested?: boolean,\n    fallbackToZero?: boolean,\n    forms?: number;\n    firstTime?: boolean; // flips to false after first chorus is complete\n    lastTime?: boolean; // flips to true when last chorus starts\n}\n\n\nexport class Sheet {\n    static jumpSigns: { [sign: string]: JumpSign } = {\n        '}': { pair: '{', move: -1 },\n        'DC': {},\n        'DS': { pair: 'Segno', move: -1 },\n        'DS.Fine': { pair: 'Segno', move: -1 },\n        'DS.Coda': { pair: 'Segno', move: -1 },\n        'DC.Fine': {},\n        'DC.Coda': {},\n        'Fine': {\n            fine: true,\n            validator: (state) => Sheet.readyForFineOrCoda(state)\n        },\n        'ToCoda': {\n            pair: 'Coda', move: 1,\n            validator: (state) => Sheet.readyForFineOrCoda(state)\n        }\n    };\n\n    static render(sheet, options = {}, clear = true): Measures {\n        let state: SheetState = {\n            sheet,\n            measures: [],\n            forms: 1,\n            nested: true,\n            fallbackToZero: true,\n            firstTime: true,\n            ...options\n        };\n        state = {\n            ...state,\n            ...Sheet.newForm(state)\n        };\n\n        let runs = 0;\n        while (runs < 1000 && state.index < sheet.length) {\n            runs++;\n            state = Sheet.nextMeasure(state);\n        }\n        if (clear) {\n            return state.measures\n                .map(m => Measure.from(m))\n                .map(m => {\n                    delete m.house;\n                    delete m.signs;\n                    return m;\n                });\n        }\n        return state.measures;\n    }\n\n    static nextMeasure(state): SheetState {\n        state = {\n            ...state,\n            ...Sheet.nextSection(state)\n        } // moves to the right house (if any)\n        let { sheet, index, measures } = state;\n        state = {\n            ...state,\n            measures: measures.concat([{\n                ...Measure.from(sheet[index]),\n                index: index // add index for mapping\n            }]),\n            ...Sheet.nextIndex(state),\n        }\n        return Sheet.nextForm(state);\n    }\n\n    static nextIndex(state): SheetState {\n        let { sheet, index, jumps, nested, fallbackToZero, lastTime } = state;\n        if (!Sheet.shouldJump({ sheet, index, jumps, lastTime })) {\n            return {\n                index: index + 1\n            };\n        }\n        const braces = [Sheet.getJumpDestination({ sheet, index, fallbackToZero, nested }), index];\n        jumps = Sheet.wipeKeys(jumps, [braces[0], braces[1] - 1]); // wipes indices inside braces\n        return {\n            index: braces[0],\n            jumps: { // count jumps up\n                ...jumps,\n                [braces[1]]: (jumps[braces[1]] || 0) + 1\n            }\n        }\n    }\n\n    static newForm(state): SheetState {\n        return {\n            ...state,\n            index: 0,\n            jumps: {},\n            visits: {},\n            lastTime: state.forms === 1,\n        }\n    }\n\n    static nextForm(state, force = false): SheetState {\n        let { sheet, index, forms } = state;\n        if (force || (index >= sheet.length && forms > 1)) {\n            return Sheet.newForm({\n                ...state,\n                firstTime: false,\n                forms: forms - 1\n            });\n        }\n        return state;\n    }\n\n    // moves the index to the current house (if any)\n    static nextSection(state: SheetState): SheetState {\n        let { sheet, index, visits, firstTime, lastTime } = state;\n        // skip intro when not firstTime\n        if (!firstTime && Measure.from(sheet[index]).section === 'IN') {\n            return {\n                index: Sheet.getNextSectionIndex({ sheet, index }),\n            }\n        }\n        // skip coda when not last time\n        if (Measure.hasSign('Coda', sheet[index]) && !Sheet.readyForFineOrCoda(state, -1)) {\n            return Sheet.nextForm(state, true);\n        }\n        if (!Measure.hasHouse(sheet[index], 1)) {\n            return {};\n        }\n        let next = Sheet.getNextHouseIndex({ sheet, index, visits });\n        if (next === -1) {\n            next = index;\n            visits = {}; // reset visits\n        }\n        return {\n            visits: {\n                ...visits,\n                [next]: (visits[next] || 0) + 1\n            },\n            index: next\n        }\n    }\n    /** Starts at a given index, stops when the pair functions returned equally often */\n    static findPair(\n        sheet,\n        index: number,\n        pairs: Array<(measure?: Measure, options?: { sheet?: Measures, index?: number }) => boolean>,\n        move = 1,\n        stack = 0): number {\n        let match = -1; // start with no match\n        while (match === -1 && index >= 0 && index < sheet.length) {\n            if (pairs[0](sheet[index], { sheet, index })) { // same sign\n                stack++;\n            }\n            if (pairs[1](sheet[index], { sheet, index })) { // pair sign\n                stack--;\n            }\n            if (stack === 0) { // all pairs resolved > match!\n                match = index;\n            } else {\n                index += move;\n            }\n        }\n        return match;\n    }\n\n    static findMatch(\n        sheet,\n        index: number,\n        find: (measure?: Measure, options?: { sheet?: Measures, index?: number }) => boolean,\n        move = 1): number {\n        let match = -1; // start with no match\n        while (match === -1 && index >= 0 && index < sheet.length) {\n            if (find(sheet[index], { sheet, index })) {\n                match = index;\n            } else {\n                index += move;\n            }\n        }\n        return match;\n\n    }\n    // simple matching for brace start, ignores nested repeats\n    static getJumpDestination(state: SheetState): number {\n        let { sheet, index, fallbackToZero, nested } = state;\n        const sign = Measure.getJumpSign(sheet[index]);\n        // if fine > jump till end\n        if (sign.fine) { return sheet.length; }\n        // if no pair given => da capo\n        if (!sign.pair) { return 0; }\n        // if nested mode on and opening brace is searched, use getBracePair..\n        if (nested !== false && sign.pair === '{') {\n            return Sheet.getBracePair({ sheet, index, fallbackToZero });\n        }\n        const destination = Sheet.findMatch(sheet, index,\n            (m) => Measure.hasSign(sign.pair, m),\n            sign.move || -1); // default move back\n        if (fallbackToZero) {\n            // default to zero when searching repeat start (could be forgotten)\n            return destination === -1 ? 0 : destination;\n        }\n        return destination;\n    }\n\n    // returns the index of the repeat sign that pairs with the given index\n    static getBracePair(\n        { sheet, index, fallbackToZero }: { sheet: Measures, index: number, fallbackToZero?: boolean }\n    ): number {\n        if (fallbackToZero === undefined) {\n            fallbackToZero = true;\n        }\n        if (Measure.hasSign('{', sheet[index])) {\n            return Sheet.findPair(sheet, index,\n                [\n                    (m) => Measure.hasSign('{', m),\n                    (m) => Measure.hasSign('}', m),\n                ]\n                , 1);\n        } else if (Measure.hasSign('}', sheet[index])) {\n            const pair = Sheet.findPair(sheet, index,\n                [\n                    (m, state) => {\n                        // this logic could be infinitely complex, having many side effects and interpretations\n                        // the current behaviour is similar to musescore or ireal handling braces\n                        if (!Measure.hasSign('}', m)) {\n                            return false;\n                        }\n                        if (index === state.index) {\n                            return true;\n                        }\n                        const relatedHouse = Sheet.getRelatedHouse({ sheet, index: state.index });\n                        return relatedHouse === -1;\n                    },\n                    (m) => Measure.hasSign('{', m)\n                ]\n                , -1);\n            if (fallbackToZero) {\n                return pair === -1 ? 0 : pair; // default to zero when searching repeat start (could be forgotten)\n            }\n            return pair;\n        }\n        return -1;\n    }\n\n    // returns true if the house at the given index has not been visited enough times\n    static canVisitHouse({ sheet, index, visits }): boolean {\n        let houses = sheet[index].house;\n        if (houses === undefined) {\n            return false;\n        }\n        if (!Array.isArray(houses)) {\n            houses = [houses];\n        }\n        const visited = visits[index] || 0;\n        return visited < houses.length\n    }\n\n    // returns the next house that can be visited (from the given index)\n    static getNextHouseIndex({ sheet, index, visits }, move = 1): number {\n        return Sheet.findMatch(sheet, index,\n            (m, step) => Measure.hasHouse(m) && Sheet.canVisitHouse({ sheet, index: step.index, visits })\n            , move);\n    }\n\n    static getNextSectionIndex({ sheet, index }, move = 1): number {\n        return Sheet.findMatch(sheet, index + 1,\n            (m) => Measure.from(m).section !== undefined, 1);\n    }\n\n    // wipes all keys in the given range\n    static wipeKeys(numberMap, range): { [key: number]: number } {\n        const wiped = {};\n        Object.keys(numberMap)\n            .map(i => parseInt(i))\n            .filter(i => i < range[0] || i > range[1])\n            .forEach(i => wiped[i] = numberMap[i]);\n        return wiped;\n    }\n\n\n    static getRelatedHouse({ sheet, index }): number {\n        const latestHouse = Sheet.findPair(sheet, index,\n            [\n                (m, state) => index === state.index || Measure.hasSign('}', m),\n                (m) => Measure.hasHouse(m)\n            ], -1);\n        return latestHouse;\n    }\n\n    static isFirstHouse({ sheet, index }): boolean {\n        return Measure.hasHouse(sheet[index], 1);\n    }\n\n    static getAllowedJumps({ sheet, index }) {\n        if (!Measure.hasJumpSign(sheet[index])) {\n            return 0;\n        }\n        const measure = Measure.from(sheet[index]);\n        if (measure.times !== undefined) {\n            return measure.times;\n        }\n        return 1;\n    }\n\n    static readyForFineOrCoda({ sheet, index, jumps, lastTime }: SheetState, move = 1): boolean {\n        const signs = Object.keys(Sheet.jumpSigns)\n            .filter(s => s.includes('DC') || s.includes('DS'));\n        const backJump = Sheet.findMatch(sheet, index,\n            (m) => signs.reduce((match, sign) => match || Measure.hasSign(sign, m), false), move\n        );\n        if (backJump === -1) {\n            return lastTime; // last time\n        }\n        return jumps[backJump] > 0;\n    }\n\n\n    static shouldJump({ sheet, index, jumps, lastTime }: SheetState) {\n        if (!Measure.hasJumpSign(sheet[index])) {\n            return false;\n        }\n        const sign = Measure.getJumpSign(sheet[index]);\n        if (sign.validator && !sign.validator({ sheet, index, jumps, lastTime })) {\n            return false;\n        }\n        const allowedJumps = Sheet.getAllowedJumps({ sheet, index });\n        const timesJumped = jumps[index] || 0;\n        return timesJumped < allowedJumps;\n    }\n\n    static transpose(sheet: Leadsheet, interval) {\n        if (sheet.chords) {\n            sheet = {\n                ...sheet,\n                chords: sheet.chords\n                    .map(measure => Measure.from(measure).chords\n                        .map(chord => Harmony.transposeChord(chord, interval)))\n            }\n        }\n        if (sheet.melody) {\n            console.log('TODO: tranpose melody');\n        }\n        return sheet;\n    }\n}\n\n/*\nTODO:\n\nmore typings\nspecial sections:\nIN: only play the first time\nCODA: only play last time\n\ntest standards:\n- Alice in Wonderland (dc al 2nd ending)\n- All or Nothing at All (dc al coda)\n- Are you real (intro + coda)\n- Armageddon (intro)\n- The Bat (coda sign inside repeat): ireal plays coda directly first time..\n- Bennys Tune (intro+coda sign inside repeat): ireal plays coda directly first time..\n- Bess You Is My Woman (coda sign inside repeat): ireal plays coda directly first time..\n- Blessed Relief (nested repeats, with odd behaviour)\n- Blue in Green (coda)\n- Miles Ahead (coda)\n*/\n","import { JumpSign, Sheet } from './Sheet';\n\nexport type MeasureOrString = Measure | string[] | string;\n\nexport interface Measure {\n    chords?: string[],\n    //voices?: string[][],\n    signs?: string[],\n    comments?: string[],\n    house?: number | number[],\n    times?: number,\n    section?: string,\n    idle?: true // bar is repeated\n};\n\nexport class Measure implements Measure {\n    static from(measure: MeasureOrString): Measure {\n        if (typeof measure === 'string') {\n            return {\n                chords: [measure]\n            }\n        }\n        if (Array.isArray(measure)) {\n            return {\n                chords: [].concat(measure)\n            }\n        }\n        return Object.assign({}, measure);\n        // return measure;\n    }\n\n    static hasSign(sign: string, measure: MeasureOrString): boolean {\n        measure = Measure.from(measure);\n        return !!measure.signs && measure.signs.includes(sign);\n    }\n\n    static hasHouse(measure: MeasureOrString, number?: number): boolean {\n        measure = Measure.from(measure);\n        let { house } = measure;\n        if (!house) {\n            return false;\n        } else if (number === undefined) {\n            return true;\n        }\n        if (!Array.isArray(house)) {\n            house = [house];\n        }\n        return house.includes(number);\n    }\n\n    static getJumpSign(measure): JumpSign {\n        const signs = (Measure.from(measure).signs || [])\n            .filter(s => Object.keys(Sheet.jumpSigns).includes(s));\n        if (signs.length > 1) {\n            console.warn('measure cannot contain more than one repeat sign', measure);\n        }\n        return Sheet.jumpSigns[signs[0]];\n    }\n\n    static hasJumpSign(measure: MeasureOrString): boolean {\n        return Object.keys(Sheet.jumpSigns)\n            .reduce((match, current) => match || Measure.hasSign(current, measure), false);\n    }\n}","import { Measure } from './Measure';\nimport { Measures } from './Sheet';\n\n// extension of https://github.com/daumling/ireal-renderer/blob/master/src/ireal-renderer.js\n\nexport class RealParser {\n    /**\n     * The RegExp for a complete chord. The match array contains:\n     * 1 - the base note\n     * 2 - the modifiers (+-ohd0123456789 and su for sus)\n     * 3 - any comments (may be e.g. add, sub, or private stuff)\n     * 4 - the \"over\" part starting with a slash\n     * 5 - the top chord as (chord)\n     * @type RegExp\n     */\n\n    static chordRegex = /^([ A-GW][b#]?)((?:sus|[\\+\\-\\^\\dhob#])*)(\\*.+?\\*)*(\\/[A-G][#b]?)?(\\(.*?\\))?/;\n\n    static regExps = [\n        /^\\*[a-zA-Z]/,\t\t\t\t\t\t\t// section\n        /^T\\d\\d/,\t\t\t\t\t\t\t\t// time measurement\n        /^N./,\t\t\t\t\t\t\t\t\t// repeat marker\n        /^<.*?>/,\t\t\t\t\t\t\t\t// comments\n        /^ \\(.*?\\)/,\t\t\t\t\t\t\t// blank and (note)\n        RealParser.chordRegex,\t\t\t\t// chords\n        /^LZ/,\t\t\t\t\t\t\t\t\t// 1 cell + right bar\n        /^XyQ/,\t\t\t\t\t\t\t\t\t// 3 empty cells\n        /^Kcl/\t\t\t\t\t\t\t\t\t// repeat last bar\n    ];\n\n    static replacements = {\n        \"LZ\": [\" \", \"|\"],\n        \"XyQ\": [\" \", \" \", \" \"],\n        \"Kcl\": [\"|\", \"x\", \" \"]\n    };\n\n    static getChord(iRealChord) {\n        return iRealChord.note + iRealChord.modifiers + (iRealChord.over ? '/' + this.getChord(iRealChord.over) : '');\n    }\n\n    static parseSheet(raw): Measures {\n        const tokens = RealParser.parse(raw);\n        return RealParser.getSheet(tokens);\n    }\n\n    static getSheet(tokens): Measures {\n        const parsed = tokens\n            .reduce((current, token, index, array) => {\n                const lastBarEnded = ['{', '|', '[', '||' /* 'Z',  *//* , ']' */]\n                    .includes(token.bars || token.token);\n                let signs = token.annots || [];\n                const repeatStart = (token.bars || token.token) === '{';\n                const repeatEnd = (token.bars || token.token) === '}';\n                if (repeatStart) {\n                    signs.push('{');\n                }\n                if (repeatEnd) {\n                    signs.push('}');\n                }\n                // current.measure ends\n                if (lastBarEnded) {\n                    if (current.measure) {\n                        // simplify measure if no signs\n                        /* if (Object.keys(current.measure).find(k=>k)) {\n                            current.measure = current.measure.chords;\n                        } */\n                        current.measures.push(current.measure);\n                    }\n                    current.measure = { chords: [] };\n                }\n\n                const sectionStart = signs.find(a => a.match(/^\\*[a-zA-Z]/));\n                if (sectionStart) {\n                    signs = signs.filter(s => s !== sectionStart);\n                    current.measure.section = sectionStart.replace('*', '');\n                }\n\n                const hasCodaSign = signs.includes('Q');\n                if (hasCodaSign) {\n                    signs = signs.filter(s => s !== 'Q');\n                    let codaSign = 'ToCoda';\n                    if (!!current.measures.find(m => Measure.hasSign('ToCoda', m))) {\n                        codaSign = 'Coda';\n                    }\n                    current.measure.signs = (current.measure.signs || []).concat([codaSign]);\n                }\n\n                const houseStart = signs.find(s => !!s.match(/^N./));\n                if (houseStart) {\n                    signs = signs.filter(s => s !== houseStart);\n                    current.measure.house = parseInt(houseStart.replace('N', ''));\n                }\n\n                const time = signs.find(a => a.match(/^T\\d\\d/));\n                if (time) {\n                    signs = signs.filter(s => s !== time);\n                    current.measure.time = time.replace('T', '');\n                }\n\n                if (token.chord) {\n                    current.measure.chords.push(this.getChord(token.chord));\n                } else if (token.token === 'n') {\n                    current.measure.chords.push(0);\n                }\n\n                const last = current.measures[current.measures.length - 1];\n                if (last && last.chords[0] === 'r') {\n                    last.chords = current.measures[current.measures.length - 3].chords;\n                    current.measure.chords = current.measures[current.measures.length - 2].chords;\n                }\n                if (last && current.measure.chords[0] === 'x') {\n                    current.measure.chords = [].concat(last.chords);\n                    current.measure.idle = true;\n                }\n\n                if (signs.length) {\n                    current.measure.signs = (current.measure.signs || [])\n                        .concat(signs);\n                }\n                if (token.comments.length) {\n                    current.measure.comments = (current.measure.comments || [])\n                        .concat(token.comments.map(c => c.trim()));\n                }\n                return current;\n            }, { measure: null, signs: null, measures: [] });\n        if (parsed.measure.chords.length) {\n            parsed.measures.push(parsed.measure);\n        }\n        return parsed.measures;\n    }\n\n\n    static parse(raw: string): any {\n        var text = raw;\n        var arr = [], headers = [], comments = [];\n        var i;\n        text = text.trim();\n        // text = text.trimRight();\n        while (text) {\n            var found = false;\n            for (i = 0; i < RealParser.regExps.length; i++) {\n                var match = RealParser.regExps[i].exec(text);\n\n                if (match) {\n                    found = true;\n                    if (match.length <= 2) {\n                        const replacement = match[0];\n                        var repl = RealParser.replacements[replacement];\n                        arr = arr.concat(repl ? repl : [replacement]);\n                        text = text.substr(replacement.length);\n                    }\n                    else { // a chord\n                        arr.push(match);\n                        text = text.substr(match[0].length);\n                    }\n                    break;\n                }\n            }\n            if (!found) {\n                // ignore the comma separator\n                if (text[0] !== ',')\n                    arr.push(text[0]);\n                text = text.substr(1);\n            }\n        }\n        //\t\tconsole.log(arr);\n        // pass 2: extract prefixes, suffixes, annotations and comments\n        var out = [];\n        var obj = RealParser.newToken(out);\n        for (i = 0; i < arr.length; i++) {\n            var token = arr[i];\n            if (token instanceof Array) {\n                obj.chord = RealParser.parseChord(token);\n                token = \" \";\n            }\n            switch (token[0]) {\n                case ',': token = null; break; // separator\n                case 'S':\t// segno\n                case 'T':\t// time measurement\n                case 'Q':\t// coda\n                case 'N':\t// repeat\n                case 'U':\t// END\n                case 's':\t// small\n                case 'l':\t// normal\n                case 'f':\t// fermata\n                case '*': obj.annots.push(token); token = null; break;\n                case 'Y': obj.spacer++; token = null; break;\n                case 'r':\n                case 'x':\n                case 'W':\n                    obj.chord = new iRealChord(token, \"\", null, null);\n                    break;\n                case '<':\n                    token = token.substr(1, token.length - 2);\n                    token = token.replace(/XyQ/g, \"   \");\t// weird; needs to be done\n                    obj.comments.push(token);\n                    token = null; break;\n                default:\n            }\n            if (token) {\n                if (\"]}Z\".indexOf(arr[i + 1]) >= 0)\n                    obj.bars += arr[++i];\n                if (\"{[|\".indexOf(token) >= 0) {\n                    obj.bars += token; token = null;\n                }\n            }\n            if (token && i < arr.length - 1) {\n                obj.token = token;\n                obj = RealParser.newToken(out);\n            }\n        }\n        return out;\n    }\n\n\n\n    static parseChord(match) {\n        var note = match[1] || \" \";\n        var modifiers = match[2] || \"\";\n        var comment = match[3] || \"\";\n        if (comment)\n            modifiers += comment.substr(1, comment.length - 2).replace(\"XyQ\", \"   \");\n        var over = match[4] || \"\";\n        if (over[0] === '/')\n            over = over.substr(1);\n        var alternate = match[5] || null;\n        if (alternate) {\n            match = RealParser.chordRegex.exec(alternate.substr(1, alternate.length - 2));\n            if (!match)\n                alternate = null;\n            else\n                alternate = this.parseChord(match);\n        }\n        // empty cell?\n        if (note === \" \" && !alternate && !over)\n            return null;\n        if (over) {\n            var offset = (over[1] === '#' || over[1] === 'b') ? 2 : 1;\n            over = new iRealChord(over.substr(0, offset), over.substr(offset), null, null);\n        }\n        else\n            over = null;\n        return new iRealChord(note, modifiers, over, alternate);\n    }\n\n    static newToken(arr) {\n        var obj = new iRealToken;\n        arr.push(obj);\n        return obj;\n    }\n\n}\n\nclass iRealChord {\n    note: any;\n    modifiers: any;\n    over: any;\n    alternate: any;\n    constructor(note, modifiers, over, alternate) {\n        this.note = note;\n        this.modifiers = modifiers;\n        this.over = over;\n        this.alternate = alternate;\n    }\n}\n\nclass iRealToken {\n    chord: any;\n    spacer: number;\n    bars: string;\n    comments: any[];\n    token: any;\n    annots: any[];\n    constructor() {\n        this.annots = [];\n        this.comments = [];\n        this.bars = \"\";\n        this.spacer = 0;\n        this.chord = null;\n    }\n}","import * as JsDiff from 'diff';\nimport { Measure } from './Measure';\nimport { Sheet } from './Sheet';\n\nexport class Snippet {\n    static controlSigns = [\n        {\n            name: 'DC',\n            short: 'DC',\n            end: true\n        },\n        {\n            name: 'DS',\n            short: 'DS',\n            end: true\n        },\n        {\n            name: 'Segno',\n            short: 'S',\n        },\n        {\n            name: 'DS.Fine',\n            short: 'DS',\n            end: true\n        },\n        {\n            name: 'DS.Coda',\n            short: 'DS',\n            end: true\n        },\n        {\n            name: 'DC.Fine',\n            short: 'DC',\n            end: true\n        },\n        {\n            name: 'DC.Coda',\n            short: 'DC',\n            end: true\n        },\n        {\n            name: 'Fine',\n            short: 'F',\n            end: true\n        },\n        {\n            name: 'ToCoda',\n            short: '2Q',\n            end: true\n        },\n        {\n            name: 'Coda',\n            short: 'Q'\n        },\n    ]\n\n    static render(snippet, options?) {\n        const parsed = Snippet.parse(snippet);\n        return Sheet.render(parsed, options, true);\n    }\n\n    static wrapPipes(string) {\n        return `|${string}|`.replace(/\\|+/g, '|');\n    }\n\n    static formatForDiff(snippet) {\n        return Snippet.minify(snippet)\n            .replace(/\\|/g, ' | ').trim();\n    }\n\n    static format(snippet, linebreaks = true) {\n        // replaces url chars back\n        let compact = Snippet.minify(snippet, false);\n        compact = Snippet.wrapPipes(compact);\n\n        if (linebreaks) {\n            compact = Snippet.parseBars(snippet).compact;\n        } else {\n            compact = compact.replace(/\\n/g, '|');\n        }\n        return compact\n            .replace(/\\|+/g, '|')\n            .replace(/\\|( +)\\|( +)/g, ' $1 $2') // remove spacer bar pipes\n            .replace(/\\|( +)\\|([1-9])/g, ' $1|$2')\n            .replace(/^\\s+|\\s+$/g, '') // remove spaces/line breaks from start/end\n    }\n\n    static parseBars(snippet) {\n        let compact = Snippet.minify(snippet, false);\n        compact = Snippet.wrapPipes(compact);\n        // insert spaces before first chord\n        let cells = compact.split('|').slice(1, -1);\n        cells = cells.map((bar, index) => {\n            if (!bar[0].match(/[1-9:]/)) {\n                bar = '  ' + bar;\n            } else if (bar[0] === ':') {\n                bar = ': ' + bar.slice(1);\n            }\n            return bar;\n        });\n        // find out indices of first houses\n        const houses = cells.reduce((offset, bar, index) => {\n            if (bar[0] === '1') {\n                offset.push(index);\n            }\n            return offset;\n        }, []);\n        // insert empty cells before additional houses\n        cells = cells.reduce((cells, bar, index) => {\n            if (bar[0].match(/[2-9]/)) {\n                const offset = houses.filter(h => h < index).reverse()[0];\n                cells = cells.concat(new Array(offset % 4).fill(''));\n            }\n            cells.push(bar);\n            return cells;\n        }, []);\n        // find out the maximal number of chars per column\n        const chars = cells.reduce((max, bar, index) => {\n            max[index % 4] = Math.max(bar.length, max[index % 4] || 0);\n            return max;\n        }, []);\n        // fill up each bar with spaces\n        compact = cells.map((bar, index) => {\n            let diff = chars[index % 4] - bar.length + 2;\n            if (diff > 0) {\n                bar += new Array(diff).fill(' ').join('');\n            }\n            // move double dots to end of bar\n            bar = bar.replace(/:(\\s+)$/, '$1:');\n            return bar;\n        }).join('|');\n\n        compact = Snippet.wrapPipes(compact);\n        // break string all 4 cells\n        let pipeIndex = -1;\n        compact = compact.split('').reduce((string, char, index) => {\n            if (char === '|') {\n                pipeIndex++;\n            }\n            if (char === '|' && pipeIndex % 4 === 0 && index > 0 && index < compact.length - 1) {\n                char = \"|\\n|\";\n                pipeIndex = 0;\n            }\n            return string + char;\n        }, '');\n        return { compact, cells, houses, chars };\n    }\n\n    static columnChars(snippet) {\n        const bars = snippet.split('|');\n        const chars = bars.reduce((max, bar, index) => {\n            max[index % 4] = Math.max(bar.length, max[index % 4] || 0);\n            return max;\n        }, []);\n    }\n\n    static getCellBounds(index, snippet) {\n        const { chars, cells, houses } = Snippet.parseBars(snippet);\n        if (houses.length && index > houses[0]) {\n            const offset = (houses.filter(h => h < index).reverse()[0]) % 4;\n            index += offset;\n        }\n        index = index % cells.length;\n        const col = index % 4;\n        const row = Math.floor(index / 4);\n        const rowlength = chars.reduce((sum, current) => sum + current + 3, 0) + 2;\n        const rowLeft = rowlength * row;\n        const left = rowLeft + chars.slice(0, col).reduce((sum, current, i) => sum + current + 3, 0) + 1;\n        return [left, left + chars[col] + 2];\n    }\n\n    static minify(snippet, urlsafe = false) {\n        let compact = (`|${snippet}|`)\n            .replace(/\\n+/g, '|') // replace line breaks with pipes\n            .replace(/\\s+/g, ' ') // no repeated pipes\n            .replace(/\\s?\\|\\s?/g, '|') // no pipes with spaces\n            .replace(/\\s?\\:\\s?/g, ':') // no repeat with spaces\n            .replace(/\\|+/g, '|') // no repeated pipes\n        if (urlsafe) {\n            // replaces url unfriendly chars\n            compact = compact\n                .replace(/\\|+/g, 'I')\n                .replace(/\\s+/g, '_')\n                .replace(/:/g, 'R')\n                .replace(/\\^/g, 'M')\n                .replace(/\\#/g, 'Y')\n                .replace(/\\%/g, 'X')\n        } else {\n            // replaces url unfriendly chars\n            compact = compact\n                .replace(/\\I+/g, '|')\n                .replace(/\\_+/g, ' ')\n                .replace(/R/g, ':')\n                .replace(/M/g, '^')\n                .replace(/X/g, 'x')\n                .replace(/Y/g, '#')\n        }\n        return compact.slice(1, -1);\n    }\n\n    static getControlSigns(symbols = []) {\n        return symbols\n            .filter(s => typeof s === 'string') // control should not be nested!\n            .map(s => Snippet.controlSigns.find(c => [c.name, c.short]\n                .includes(s.replace('(', '').replace(')', ''))))\n            .filter(s => !!s);\n    }\n\n    static parse(snippet, simplify = true) {\n        const formatted = Snippet.format(snippet, false);\n        return formatted\n            .split('|') // split into measures\n            .map(measure => measure.split(' ')) // split measures by spaces\n            .map(measure => measure.filter(chord => !!chord)) // kill empty chords\n            .filter(measure => !measure || measure.length) // kill empty measures\n            .map(measure => ({ symbols: measure, signs: [] }))\n            // parse symbols to chords and signs\n            .map((measure: { symbols, signs, house, chords }) => {\n                // repeat start\n                if (measure.symbols[0][0] === ':') {\n                    if (measure.symbols[0].length === 1) {\n                        measure.symbols = measure.symbols.slice(1);\n                    }\n                    measure.signs.unshift('{');\n                }\n                const last = measure.symbols[measure.symbols.length - 1];\n                // repeat end\n                if (last[last.length - 1] === ':') {\n                    if (last.length === 1) {\n                        measure.symbols.pop();\n                    }\n                    measure.signs.push('}');\n                }\n                measure.symbols = measure.symbols.map(s => s.replace(/:/g, ''));\n                const house = measure.symbols.find(s => s.match(/^[1-9]$/));\n                if (house) {\n                    measure.house = parseInt(house);\n                }\n                measure.symbols = measure.symbols.filter(s => !s.match(/^[1-9]$/))\n\n                let controlSigns = Snippet.getControlSigns(measure.symbols);\n                if (controlSigns.length) {\n                    measure.signs = measure.signs.concat(controlSigns.map(sign => sign.name));\n                    measure.symbols = measure.symbols\n                        .filter(s => !controlSigns\n                            .find(c => [c.name, c.short].includes(s.replace(')', '').replace('(', ''))));\n                }\n\n                measure.chords = [].concat(measure.symbols);\n\n                delete measure.symbols;\n                return measure;\n            })\n            .map(measure => {\n                if (!simplify) {\n                    return measure;\n                }\n                if (measure.signs.length === 0) {\n                    delete measure.signs;\n                }\n                if (measure.chords.length === 0) {\n                    delete measure.chords;\n                }\n                return measure;\n            })\n            // kill empty measures\n            .filter(measure => Object.keys(measure).length > 0)\n            // simplify => measures with only chords will be arrays\n            .map(measure => {\n                if (!simplify) {\n                    return measure;\n                }\n                if (measure.chords && Object.keys(measure).length === 1) {\n                    return measure.chords.length === 1 ?\n                        measure.chords[0] : // simplify one chord measures\n                        measure.chords\n                }\n                return measure;\n            });\n    }\n\n    static nest(string) {\n        let nested = string.split('.')\n            .map(group => group.trim())\n            .map(group => group.split(' '))\n            .map(group => group.filter(chord => !!chord))  // kill empty chords\n            .filter(group => !group || group.length)\n            .map(group => group.length === 1 ? group[0] : group)\n        nested = nested.length === 1 ? nested[0] : nested;\n        return nested;\n    }\n\n    static parse2(snippet, simplify = true) {\n        const formatted = Snippet.format(snippet, false);\n        return formatted\n            .split('|') // split into measures\n            .filter(measure => measure && measure.length) // kill empty measures\n            .map(measure => ({ symbols: measure.trim(), signs: [] }))\n            // parse symbols to chords and signs\n            .map((measure: { symbols, signs, house, chords }) => {\n                // repeat start\n                if (measure.symbols[0] === ':') {\n                    measure.signs.unshift('{');\n                }\n                const last = measure.symbols[measure.symbols.length - 1];\n                // repeat end\n                if (last === ':') {\n                    measure.signs.push('}');\n                }\n                measure.symbols = measure.symbols.replace(/:/g, '');\n                const house = measure.symbols[0].match(/^[1-9]$/);\n                if (house) {\n                    measure.house = parseInt(house);\n                    measure.symbols = measure.symbols.slice(1);\n                }\n                measure.symbols = [].concat(Snippet.nest(measure.symbols));\n                let controlSigns = Snippet.getControlSigns(measure.symbols);\n                if (controlSigns.length) {\n                    measure.signs = measure.signs.concat(controlSigns.map(sign => sign.name));\n                    measure.symbols = measure.symbols\n                        .filter(s => !controlSigns\n                            .find(c => [c.name, c.short].includes(s.replace(')', '').replace('(', ''))));\n                }\n                measure.chords = measure.symbols;\n                delete measure.symbols;\n                return measure;\n            })\n            .map(measure => {\n                if (!simplify) {\n                    return measure;\n                }\n                if (measure.signs.length === 0) {\n                    delete measure.signs;\n                }\n                if (measure.chords.length === 0) {\n                    delete measure.chords;\n                }\n                return measure;\n            })\n            // kill empty measures\n            .filter(measure => Object.keys(measure).length > 0)\n            // simplify => measures with only chords will be arrays\n            .map(measure => {\n                if (!simplify) {\n                    return measure;\n                }\n                if (measure.chords && Object.keys(measure).length === 1) {\n                    return measure.chords.length === 1 ?\n                        measure.chords[0] : // simplify one chord measures\n                        measure.chords\n                }\n                return measure;\n            });\n    }\n\n    static testFormat(sheet) {\n        return sheet.map(m => Measure.from(m)).map(m => m.chords).join(' ');\n    }\n\n    static from(sheet, format = true) {\n        const snippet = sheet\n            .map(m => Measure.from(m))\n            .reduce((snippet, { signs, house, chords }) => {\n                const controlSigns = Snippet.getControlSigns(signs || []);\n                const start = controlSigns.filter(c => !c.end).map(c => '(' + c.short + ')').join(' ');\n                const end = controlSigns.filter(c => !!c.end).map(c => '(' + c.short + ')').join(' ');\n                const repeatStart = signs && signs.includes('{');\n                const repeatEnd = signs && signs.includes('}');\n                return snippet + `|${repeatStart ? ':' : ''}${house || ''} ${start ? start + ' ' : ''}${chords ? chords.join(' ') : ''}${end ? ' ' + end : ''}${repeatEnd ? ':' : ''}`;\n            }, '');\n        if (format) {\n            return Snippet.format(snippet);\n        }\n        return Snippet.minify(snippet);\n    }\n\n    static expand(snippet, options?) {\n        return Snippet.from(Snippet.render(snippet, options));\n    }\n\n    static diff(snippetA, snippetB) {\n        const diffFormat = [Snippet.formatForDiff(snippetA), Snippet.formatForDiff(snippetB)];\n        return JsDiff.diffWords(\n            diffFormat[0], diffFormat[1]\n        );\n    }\n}\n","\nimport k from './drummer/kick.wav';\nimport s from './drummer/snare.wav';\nimport h from './drummer/hihat.wav';\nimport r from './drummer/ride.wav';\nimport c from './drummer/crash.wav';\nimport rs from './drummer/rimshot.wav';\n\nexport const kick = k;\nexport const snare = s;\nexport const hihat = h;\nexport const ride = r;\nexport const crash = c;\nexport const rimshot = rs;\nexport const drumset = [kick, snare, hihat, ride, crash, rimshot];\nexport const drumSamples = { 'C1': kick, 'C2': snare, 'C3': hihat, 'C4': ride, 'C5': crash, 'C6': rimshot };","import C1 from \"./piano/C1.mp3\";\nimport Db1 from \"./piano/Db1.mp3\";\nimport D1 from \"./piano/D1.mp3\";\nimport Eb1 from \"./piano/Eb1.mp3\";\nimport E1 from \"./piano/E1.mp3\";\nimport F1 from \"./piano/F1.mp3\";\nimport Gb1 from \"./piano/Gb1.mp3\";\nimport G1 from \"./piano/G1.mp3\";\nimport Ab1 from \"./piano/Ab1.mp3\";\nimport A1 from \"./piano/A1.mp3\";\nimport Bb1 from \"./piano/Bb1.mp3\";\nimport B1 from \"./piano/B1.mp3\";\nimport C2 from \"./piano/C2.mp3\";\nimport Db2 from \"./piano/Db2.mp3\";\nimport D2 from \"./piano/D2.mp3\";\nimport Eb2 from \"./piano/Eb2.mp3\";\nimport E2 from \"./piano/E2.mp3\";\nimport F2 from \"./piano/F2.mp3\";\nimport Gb2 from \"./piano/Gb2.mp3\";\nimport G2 from \"./piano/G2.mp3\";\nimport Ab2 from \"./piano/Ab2.mp3\";\nimport A2 from \"./piano/A2.mp3\";\nimport Bb2 from \"./piano/Bb2.mp3\";\nimport B2 from \"./piano/B2.mp3\";\nimport C3 from \"./piano/C3.mp3\";\nimport Db3 from \"./piano/Db3.mp3\";\nimport D3 from \"./piano/D3.mp3\";\nimport Eb3 from \"./piano/Eb3.mp3\";\nimport E3 from \"./piano/E3.mp3\";\nimport F3 from \"./piano/F3.mp3\";\nimport Gb3 from \"./piano/Gb3.mp3\";\nimport G3 from \"./piano/G3.mp3\";\nimport Ab3 from \"./piano/Ab3.mp3\";\nimport A3 from \"./piano/A3.mp3\";\nimport Bb3 from \"./piano/Bb3.mp3\";\nimport B3 from \"./piano/B3.mp3\";\nimport C4 from \"./piano/C4.mp3\";\nimport Db4 from \"./piano/Db4.mp3\";\nimport D4 from \"./piano/D4.mp3\";\nimport Eb4 from \"./piano/Eb4.mp3\";\nimport E4 from \"./piano/E4.mp3\";\nimport F4 from \"./piano/F4.mp3\";\nimport Gb4 from \"./piano/Gb4.mp3\";\nimport G4 from \"./piano/G4.mp3\";\nimport Ab4 from \"./piano/Ab4.mp3\";\nimport A4 from \"./piano/A4.mp3\";\nimport Bb4 from \"./piano/Bb4.mp3\";\nimport B4 from \"./piano/B4.mp3\";\nimport C5 from \"./piano/C5.mp3\";\nimport Db5 from \"./piano/Db5.mp3\";\nimport D5 from \"./piano/D5.mp3\";\nimport Eb5 from \"./piano/Eb5.mp3\";\nimport E5 from \"./piano/E5.mp3\";\nimport F5 from \"./piano/F5.mp3\";\nimport Gb5 from \"./piano/Gb5.mp3\";\nimport G5 from \"./piano/G5.mp3\";\nimport Ab5 from \"./piano/Ab5.mp3\";\nimport A5 from \"./piano/A5.mp3\";\nimport Bb5 from \"./piano/Bb5.mp3\";\nimport B5 from \"./piano/B5.mp3\";\nimport C6 from \"./piano/C6.mp3\";\nimport Db6 from \"./piano/Db6.mp3\";\nimport D6 from \"./piano/D6.mp3\";\nimport Eb6 from \"./piano/Eb6.mp3\";\nimport E6 from \"./piano/E6.mp3\";\nimport F6 from \"./piano/F6.mp3\";\nimport Gb6 from \"./piano/Gb6.mp3\";\nimport G6 from \"./piano/G6.mp3\";\nimport Ab6 from \"./piano/Ab6.mp3\";\nimport A6 from \"./piano/A6.mp3\";\nimport Bb6 from \"./piano/Bb6.mp3\";\nimport B6 from \"./piano/B6.mp3\";\nimport C7 from \"./piano/C7.mp3\";\nimport Db7 from \"./piano/Db7.mp3\";\nimport D7 from \"./piano/D7.mp3\";\nimport Eb7 from \"./piano/Eb7.mp3\";\nimport E7 from \"./piano/E7.mp3\";\nimport F7 from \"./piano/F7.mp3\";\nimport Gb7 from \"./piano/Gb7.mp3\";\nimport G7 from \"./piano/G7.mp3\";\nimport Ab7 from \"./piano/Ab7.mp3\";\nimport A7 from \"./piano/A7.mp3\";\nimport Bb7 from \"./piano/Bb7.mp3\";\nimport B7 from \"./piano/B7.mp3\";\n\nexport const piano = [\n    C1,\n    Db1,\n    D1,\n    Eb1,\n    E1,\n    F1,\n    Gb1,\n    G1,\n    Ab1,\n    A1,\n    Bb1,\n    B1,\n    C2,\n    Db2,\n    D2,\n    Eb2,\n    E2,\n    F2,\n    Gb2,\n    G2,\n    Ab2,\n    A2,\n    Bb2,\n    B2,\n    C3,\n    Db3,\n    D3,\n    Eb3,\n    E3,\n    F3,\n    Gb3,\n    G3,\n    Ab3,\n    A3,\n    Bb3,\n    B3,\n    C4,\n    Db4,\n    D4,\n    Eb4,\n    E4,\n    F4,\n    Gb4,\n    G4,\n    Ab4,\n    A4,\n    Bb4,\n    B4,\n    C5,\n    Db5,\n    D5,\n    Eb5,\n    E5,\n    F5,\n    Gb5,\n    G5,\n    Ab5,\n    A5,\n    Bb5,\n    B5,\n    C6,\n    Db6,\n    D6,\n    Eb6,\n    E6,\n    F6,\n    Gb6,\n    G6,\n    Ab6,\n    A6,\n    Bb6,\n    B6,\n    C7,\n    Db7,\n    D7,\n    Eb7,\n    E7,\n    F7,\n    Gb7,\n    G7,\n    Ab7,\n    A7,\n    Bb7,\n    B7,\n];","import iRealReader from 'ireal-reader';\nimport { Trio, Sampler, util } from '../lib';\nimport { bossa } from '../src/grooves/bossa';\n// import { disco } from '../src/grooves/disco';\nimport { funk } from '../src/grooves/funk';\nimport { swing } from '../src/grooves/swing';\nimport { RealParser } from '../src/sheet/RealParser';\nimport { Snippet } from '../src/sheet/Snippet';\nimport link from '../songs/1350.json';\n/* import { harp } from './samples/harp'; */\nimport { drumset } from '../src/samples/drumset';\nimport { piano } from '../src/samples/piano';\nimport { Sheet } from '../src/sheet/Sheet';\nvar AudioContext = window.AudioContext // Default\n    || window.webkitAudioContext // Safari and old versions of Chrome\n    || false;\nif (!AudioContext) {\n    alert(\"Sorry, but the Web Audio API is not supported by your browser. Please, consider upgrading to the latest version or downloading Google Chrome or Mozilla Firefox\");\n}\nconst context = new AudioContext();\nconst playlist = new iRealReader(decodeURI(link));\n\n// bass = new Synthesizer({ duration: 400, gain: gains[w1], type: w1, mix });\nconst keyboard = new Sampler({ samples: piano, midiOffset: 24, gain: 1, context });\n// const keyboard = new WebAudioFont({ context, preset: 50, gain: .8 });\n// const bass = new WebAudioFont({ context, preset: 366 });\nconst bass = keyboard;\n// const harpInstrument = new Sampler({ samples: harp, midiOffset: 24, gain: 1, context });\nconst drums = new Sampler({ samples: drumset, context, gain: 0.5, duration: 6000 });\nconst band = new Trio({ context, piano: keyboard, bass/* : false */, drums, solo: false });\n\n\nwindow.onload = function () {\n    // buttons\n    const playJazz = document.getElementById('jazz');\n    const playFunk = document.getElementById('funk');\n    const playBossa = document.getElementById('bossa');\n    const playExact = document.getElementById('exact');\n    const stopButton = document.getElementById('stop');\n    const slower = document.getElementById('slower');\n    const faster = document.getElementById('faster');\n    const next = document.getElementById('next');\n    const searchInput = document.getElementById('searchInput');\n    const playChords = document.getElementById('playChords');\n    const format = document.getElementById('format');\n    /* const transposeUp = document.getElementById('transposeUp');\n    const transposeDown = document.getElementById('transposeDown'); */\n    const minify = document.getElementById('minify');\n    const standardTitle = document.getElementById('standardTitle');\n    const textarea = document.getElementById('chords');\n    const cheapSynths = document.getElementById('cheapsynths');\n    const usePiano = document.getElementById('usePiano');\n    let standard, sheet, groove = swing;\n\n    function getStandard(playlist, query) {\n        let newStandard;\n        if (query) {\n            newStandard = util.randomElement(playlist.songs.filter(s => s.title.toLowerCase().includes(query.toLowerCase())));\n        } else {\n            newStandard = util.randomElement(playlist.songs);\n        }\n\n        if (newStandard) {\n            newStandard.music.measures = RealParser.parseSheet(newStandard.music.raw); // TODO: add Song that can be passed to comp\n            return newStandard;\n        }\n    }\n\n    loadStandard();\n\n    next.addEventListener('click', () => {\n        loadStandard();\n        searchInput.value = '';\n    });\n\n    searchInput.addEventListener('keyup', () => {\n        const query = searchInput.value;\n        loadStandard(query);\n    });\n\n    function stop() {\n        if (band.pulse) {\n            band.pulse.stop();\n        }\n    }\n\n    function loadStandard(query) {\n        standard = getStandard(playlist, query) || standard;\n        textarea.value = Snippet.from(standard.music.measures);\n        setTitle(standard.composer + ' - ' + standard.title);\n        sheet = {\n            composer: standard.composer,\n            title: standard.title,\n            chords: standard.music.measures\n        };\n        stop();\n    }\n\n    function setTitle(title) {\n        standardTitle.innerHTML = title;\n    }\n\n    function play(leadsheet = sheet, groove = swing) {\n        if (band.pulse) {\n            band.pulse.stop();\n        }\n        textarea.value = Snippet.format(textarea.value);\n        const forms = 2;\n        const time = 4;\n        const bpm = groove ? groove.tempo : 130;\n        setTitle(sheet.composer + ' - ' + sheet.title);\n        band.comp(sheet, {\n            render: { forms },\n            metronome: false,\n            exact: !groove,\n            cycle: time,\n            bpm,\n            groove,\n            voicings: {\n                range: ['C3', 'C#5'], // allowed voice range\n                maxVoices: 4, // maximum number of voices per chord\n                maxDistance: 7,  // general max distance between single voices\n                minDistance: 1,  // general max distance between single voices\n                minBottomDistance: 3, // min semitones between the two bottom notes\n                minTopDistance: 2, // min semitones between the two top notes\n                noTopDrop: true,\n                noTopAdd: true,\n                // bottomDegrees: [1],\n                // topDegrees: [3, 7],\n                // omitNotes: ['Bb'],\n                // topNotes: ['B', 'C', 'C#'],\n                rangeBorders: [2, 1],\n                noBottomDrop: false,\n                noBottomAdd: true,\n                idleChance: 1,\n                logging: true\n            },\n            onMeasure: (measure) => {\n                selectCell(measure.index);\n\n            }\n        });\n    }\n    usePiano.addEventListener('click', () => {\n        stop();\n        band.pianist.instrument = keyboard;\n        band.bassist.instrument = bass;\n        /* band.soloist.instrument = util.randomSynth(band.mix, allowed); */\n        console.log('pianist:', band.pianist.instrument.type);\n        console.log('bassist:', band.bassist.instrument.type);\n        play();\n    });\n    cheapSynths.addEventListener('click', () => {\n        stop();\n        const allowed = ['triangle', 'square', 'sawtooth'];\n        band.pianist.instrument = util.randomSynth(band.mix, allowed);\n        band.bassist.instrument = util.randomSynth(band.mix, ['sine']);\n        /* band.soloist.instrument = util.randomSynth(band.mix, allowed); */\n        console.log('pianist:', band.pianist.instrument.type);\n        console.log('bassist:', band.bassist.instrument.type);\n        play()\n    });\n\n    playJazz.addEventListener('click', () => play(sheet, swing));\n    playFunk.addEventListener('click', () => play(sheet, funk));\n    playBossa.addEventListener('click', () => play(sheet, bossa));\n    playExact.addEventListener('click', () => play(sheet, false));\n\n    stopButton.addEventListener('click', () => {\n        stop();\n    });\n    slower.addEventListener('click', () => {\n        band.pulse.changeTempo(band.pulse.props.bpm - 10);\n        console.log('tempo', band.pulse.props.bpm);\n    });\n    faster.addEventListener('click', () => {\n        band.pulse.changeTempo(band.pulse.props.bpm + 10);\n        console.log('tempo', band.pulse.props.bpm);\n    });\n\n    textarea.addEventListener('click', () => {\n        if (band.pulse) {\n            band.pulse.stop();\n        }\n        sheet = {\n            title: 'Custom Changes',\n            composer: 'You',\n            chords: Snippet.parse2(textarea.value),\n        }\n        setTitle(sheet.composer + ' - ' + sheet.title);\n    });\n\n    textarea.addEventListener('blur', () => {\n        sheet = Object.assign(sheet,{\n            chords: Snippet.parse2(textarea.value),\n        });\n    });\n\n    playChords.addEventListener('click', () => {\n        // the parseChords fn will transform the textarea string to a chord array\n        sheet = {\n            title: sheet.title,\n            composer: sheet.composer,\n            chords: Snippet.parse2(textarea.value),\n        }\n        textarea.value = Snippet.format(textarea.value);\n        play();\n    });\n\n    function selectCell(n) {\n        const bounds = Snippet.getCellBounds(n, textarea.value);\n        textarea.focus();\n        textarea.setSelectionRange(bounds[0], bounds[1]);\n    }\n    let n = 0;\n    format.addEventListener('click', () => {\n        textarea.value = Snippet.format(textarea.value);\n        selectCell(n++);\n    });\n    minify.addEventListener('click', () => {\n        textarea.value = Snippet.minify(textarea.value, true);\n    });\n    /* function transpose(interval) {\n        const sheet = Snippet.parse2(textarea.value);\n        return Sheet.transpose(sheet, interval);\n    }\n    transposeUp.addEventListener('click', () => {\n        textarea.value = Snippet.minify(textarea.value, true);\n    });\n    transposeDown.addEventListener('click', () => {\n        textarea.value = Snippet.minify(textarea.value, true);\n    }); */\n}\n"]}